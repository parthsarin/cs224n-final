{
    "article": "Long sentence analysis has been a critical problem because of high complexity. This paper addresses the reduction of parsing complexity by intra-sentence segmentation, and presents maximum entropy model for determining segmentation positions. The model features lexical contexts of segmentation positions, giving a probability to each potential position. Segmentation coverage and accuracy of the proposed method are 96% and 88% respectively. The parsing efficiency is improved by 77% in time and 71% in space. Introduction Long sentence analysis has been a critical problem in machine translation because of high complexity. In EBMT (example-based machine translation), the longer a sentence is, the less possible it is that the sentence has an exact match in the translation archive, and the less flexible an EBMT system will be (Cranias et al., 1994) . In idiom-based machine translation (Lee, 1993) , long sentence parsing is difficult because more resources are spent during idiom recognition phase as sentence length increases. A parser is often unable to analyze long sentences owing to their complexity, though they have no grammatical errors (Nasukawa, 1995) . In English-Korean machine translation, idiom-based approach is adopted to overcome the structural differences between two languages and to get more accurate translation. The parser is a chart parser with a capability of idiom recognition and translation, which is adapted to English-Korean machine tranalation. Idioms are recognized prior to syntactic analysis and the part of a sentence for an idiom takes an edge in a chart (Winograd, 1983) . When parsing long sentences, an ambiguity of an idiom's range may cause more edges than the number of words included in the idiom (Yoon, 1994) , which increases parsing complexity much. A parser of practical machine translation system should be able to analyze long sentences in a reasonable time. Most context-free parsing algorithms have O(n 3) parsing complexities in terms of time and space, where n is the length of a sentence (Tomita, 1986) . Our work is motivated by the fact that parsing becomes more efficient, if n becomes shorter. This paper deals with the problem of parsing complexity by way of reducing the length of sentence to be analyzed. This reduction is achieved by intra-sentence segmentation, which is distinguished from inter--sentence segmentation that is used for text categorization (Beeferman et al., 1997) or sentence boundary identification (Palmer and Hearst, 1997) (Reynar and Ratnaparkhi, 1997) . Intra-sentence segmentation plays a role as a preliminary step to a chart-based, context-free parser in English-Korean machine translation. There have been several methods for reducing parsing complexities by intrasentence segmentation. In (Lyon and Frank, 1995) (Lyon and Dickerson, 1997) , they took advantage of the fact that the declarative sentences almost always consist of three segments: [pre-subject : subject:predicate] . The complexity could be reduced by decomposing a sentence into three sections. Pattern rules (Li et al., 1990) and sentence patterns (Kim and Khn, 1995) were used to segment long English sentences. They showed low segmentation coverage, which means that many of long sentences are not segmented by the pattern rules or sentence patterns. And they require much human efforts to construct pattern rules or collect sentence patterns. These factors may prevent them being applicable to practical machine translation sYstems. This paper presents a trainable model for identifying potential segmentation positions in a sentence and determining appropriate segmentation positions. Given a corpus annotated with segmentation positions, our model automatically learns the contextual evidences about segmentation positions, which relieves human of burden to construct pattern rules or sentence patterns. These evidences are combined under the maximum entropy framework (Jaynes, 1957) to estimate the probability for each position. By intra-sentence segmentation based on the proposed model, we achieve more improved parsing efficiency by 77% in time and 71% in space. In Section 2 we introduce the maximum entropy model. Section 3 describes features incorporated into the model and the process of identifying potential segmentation positions. The determination schemes of segmentation positions are described in Section 4. Segmentation performance of the model is presented with the degree of contribution to efficient parsing by the segmentation in Section 5. We also compare our approach with other intrasentence segmentation approaches. Section 6 draws conclusions and presents some further works. Maximum Entropy Modeling Sentence patterns or pattern ruels specify the sub-structures of the sentences. That is, segmentation positions are determined in view of the global sentence structure. If there is no matched rules or patterns with a given sentence, the sentence could not be segmented. We assume that whether a word is a segmentation position depends on its surrounding context. We try to find factors that affect the determination of segmentation Given a feature set .T, let C be the subset of all distributions P that satisfies the requirement P(fi) = P(fi): C ~-{p \u2022 ~ ] P(fi) = P(fi), for all fi \u2022 .T}. (1) We choose a probability distribution consistent with all the facts, but otherwise as uniform as possible. The uniformity of the probability distribution p(ylx) is measured by the conditional entropy: H(p) = -~p(x, y) logp(ylx) x~y = (x)PCulx) logp(ylx) x,y Thus, the probability distribution with maximum entropy is the most uniform distribution. In building a model, we consider the linear exponential family Q given as 1 Q(f) = {p(ylx)= ~exp( E ~ifi(x,y))}, $ (2) where Ai are real-valued parameters and ZA(x) is a normalizing constant: = exp( y)). y i An intersection of the class Q of exponential models with the class of desired distribution (1) is nonempty, and the intersection contains the maximum entropy distribution and furthermore it is unique (Ratnaparkhi, 1994) . Finding p. E C that maximizes H(p) is a problem in constrained optimization, which cannot be explicitly written in general. Therefore, we take advantage of the fact that the models in Q that satisfy p(fi) = 15(fi) can be explained under the maximum likelihood framework (Ratnaparkhi, 1994) . Maximum likelihood principle also gives the unique distribution p., the intersection of the class Q with C. We assume each occurrence of (x,y) is sampled independently. Thus, log-likelihood L#(p) of the empirical distribution i5 as predicted by a model p can be defined as L~) _= log II p(ylx) ~(~'y) = ~]p(x, y) logp(ylx ). x,y x,y That is, the model we want to build is p. = arg xc = arg max qE~ The parameters A~ of exponential model ( 2 ) are obtained by the Generalized Iterative Scaling algorithm (Darroch and Ratcliff, 1972) . 3 Construction of Features This section describes the features. From a corpus, contextual evidences of segmentation positions are collected and combined, resulting in features. The features are used in identifying potential segmentation positions and included in the model. Segmentable Positions and Safe Segmentation A sentence is constructed by the combination of words, phrases, and clauses under the well-defined grammar. A sentence can be segmented into shorter segments that correspond to the constituents of the sentence. That is, segments correspond to the nonterminal symbols of the context-free grammar 1. The posi-1Nonterminal symbols include the ones for phrases, such as NP (noun phrase) and VP (verb phrase), tion of a word is called segmentable position that can be a starting position of a specific segment. Though the analysis complexity can be reduced by segmenting a sentence, there is a mis-segmentation risk that causes parsing failures. A segmentation can be called safe segmentation that results in a coherent blocks of words. In English-Korean translation, safe segmentation is defined as the one which generates safe segments. A segment is safe, when there is a syntactic category symbol N P dominating the segment and the segment can be combined with adjacent segments under a given grammar. In Figure 1, (a ) is an unsafe segmentation because the second segment cannot be analyzed into one syntactic category, resulting in parsing failure. By the safe segmentation (b), the first segment corresponds to a noun phrase and the second to a verb phrase, so that we can get a correct analysis result. Lexical Contextual Constraints A lexical context of a word includes sevenword window: three to the left of a word and three to the right of a word and a word itself. It also includes the part-of-speeches of these words, subcategorization information for two words to the left, and position value. The position value posi_v of the ith word wi is calculated as pos _v = r \u00d7 R], where n is the number of words and R 2 represents the number of regions in the sentence. Region is the sequentially ordered block of and the ones for clauses like RLCL (relative clause), SUBCL (subordinate clause). sit is a heuristically set value, and we set R as 4. words in a sentence, and posi_v represents the region in which a word lies. It is included to reflect the influence of the position of a word on being a segmentation position. Thus, the lexical context of a word is represented by 17 attributes as shown in Figure 2 . To get reliable statistics, much training data is required. To alleviate this problem, we generate lexical contextual constralnts by combining lexical contexts and collect statistics for them. To generate lexical contextual constraints and to identify segmentable positions, we define two operations join (E9) and consistency (=). Let (al,...,an) and (bl,...,bn) be lexical contexts and (C1,... ,On) be lexical contextual constraint. The operation join is defined as (al,..., an) \u2022 (bl,.-., bn) = (C1,..., Ca), ,.i if ai # bi Ci = ai if ai = bi ' where ',' is don't-care term accepting any value. A lexical contextual constraint is generated as a result of join operation. The consistency is defined as 1 if (Ci=aiorCi='*r) foralll<i<n k = 0 otherwise The algorithm for generating lexical contextual constraints is shown in Figure 4 . A Icc plays the role of a feature. Following is an example of a feature. f(x,y) = 1 if Xward = \"that\" and xi-1 = \"say\" and y = 1 0 otherwise We collect the statistics for each Icc. The frequency of each lcc is counted as the number of lexical contexts that satisfy the consistency operation with the lcc. n i=1 Identifying segmentable positions is performed with the consistency operation with the lexical context of word w and lcc E LCCw. The word whose lexical context is consistent with lcc is identified as a segmentable position. Determination Schemes of Segmentation Positions Segmentation positions are determined through two steps: identifying segmentable positions and selecting the most appropriate position among them. Segmentable positions are identified using the consistency operation. Maximum entropy model in Section 2 gives a probability to each position. Segmentation performance is measured in terms of coverage and accuracy. Coverage is the ratio of the number of actually segmented sentences to the number of segmentation target sentences that are longer than ot words, where o~ is a fixed constant distinguishing long sentences from short ones. Accuracy is evaluated in terms of the safe segmentation ratio. They are defined as follows: # of actually segmented Sent. coverage = ~ of Sent. to be segmented (a) Baseline Scheme No contextual information is used in identifying segmentable positions. They are empirically identified. A word that is tagged as a segmentation position more than 5 times is identified as a segmentable position. A set of segmentable positions, 9, is as follows. ~D = {wi [ wi is tagged as segmentation position and #(tagged wi) >_ 5} In order to select the most appropriate position, the segmentation appropriateness of each position is evaluated by the probability of word wi: # of tagged wi p(Wi) = # of wi in the corpus p(wi) represents the tendency that word wi will be used as a segmentation position. A segmentation position w. is selected as the one that has highest p(wi) value: w. = arg max p(wi). wiE~ This scheme serves as a baseline for comparing the segmentation performance of the models. A Scheme using Lexical Contextual Constraints Lexical contextual constraints are used in identifying segmentable positions. Compared with the baseline scheme, this scheme considers contextual information of a word. All consistent words with the defined lexical contextual constraints form a set of segmentable positions 79. The maximum likelihood principle gives a probability distribution for p(y I lcc~), where y E {0, 1}. Segmentation appropriateness is evaluated by p(1 I lcew,). A position with the highest p(1 I lcc~) becomes a segmentation position: w. = arg max p(1 I/CCwi). wi E~ A Scheme using Lexical Contextual Constraints with Word Sets Due to insufficient training samples for constructing lexical contextual constraints, some segmentable positions may not be identified. To alleviate this problem we introduce word sets whose elements have linguistically similar features. We define four word sets: coordinate conjunction set, subordinate conjunction set, interogative set, auxiliary verb set. The categories of word sets and the examples of their members are shown in Table 1 . Coordinate conjunctions haveonly 3 members, but they frequently apprear in long sentences. Subordinate conjunctions have 25 members, interogatives 5 members, and auxiliary verbs have 12 members now. The words belonging to each word set are treated equally. Lexical contextual constraints are constructed for words and word sets, so the statistics is collected for both of them. The set of segmentable positions T~ is defined somewhat differently as: :D = {wi, wsj I (Icc, v, -= lcc~,) = 1 or (Icws~ =--IcC.ws~) = 1}, where wsj denotes a word set to which the jth word in a sentence belongs. In this scheme, p(1 I Iccc,,,) or p(1 ] lccws,) expresses the segmentation appropriateness of the position. Therefore, a segmentation position is determined by w, = arg max {p(1 I lcc ,), p(1 I lcc s )}. {w,,ws~}~9 5 Experiments Corpus and Construction of the Maximum Entropy Model We construct the corpus from two different domains, where the sentences longer than 15 -words are extracted 3. The training portion is used to generate lexical contextual constraints and to collect statistics for maximum entropy model construction. From high school English texts, 1500 sentences are tagged with segmentation positions by human. Two people who have some knowledge about English syntactic structures read sentences, and marked words as segmentation positions where they paused. After generating lexical contextual constraints, we constructed the maximum entropy model p(ylx), where x is a lexical contextual constraint and y E {0,1}. The model incorporates features that occur more than 5 times in the training data. 3626 candidate features were generated without word sets and 3878 features with word sets. In Table 2 , training time and the number of active features of the model are shown. Segmentation performance is evaluated using test portion that consists of 1800 sentences ffrom two domains: high school English texts and the Byte Magazine. 3The sentences with commas are excluded because comma is an explicit segmentation position. Segments resulting from a segmentation at commas may be the manageable-sized ones. Our work is to segment long sentences without explicit segmentation positions. Segmentation Performance In addition to coverage and accuracy, SC value is also defined to express the degree of contribution to efficient parsing by segmentation. It is the ratio of the sentences that can benefit from intra-sentence segmentation. If a long sentence is not segmented or is segmented at unsafe segmentation positions, the sentence is called a segmentation error sentence. SC value is calculated as # of segmentation error sentences SG= I-# of segmentation target sentences\" A sentence longer than vt words is considered as the segmentation target sentence, where c~ is set to 12. Table 3 compares segmentation performance for each determination scheme. By the comparison of the baseline scheme with others, the accuracy is observed to depend on the context information. Word sets are helpful for increasing coverage with less degradation of accuracy. Each scheme has superiority in terms of the different measures. But in terms of applicability to practical systems, the third scheme is best for our purpose. Table 4 shows the segmentation performance of the scheme using LCC with word sets. SU value for the sentences from the same domain as training data is about 0.88, and Parsing Efficiency Parsing efficiency is generally measured by the required time and memory for parsing. In most cases, parsing sentences longer than 30 words could not complete without intrasentence segmentation. Therefore, the parsing is performed for the sentences longer than 15 and less than 30 words. Ultra-Sparc 30 machine is used for experiments. The efficiency improvement was measured by where $unseg and rrbanseg are time and memory during parsing without segmentation and tseg, rnseg are for the parsing with segmentation. Table 5 summarizes the results. By segmenting long sentences into several manageable-sized segments, we can parse long sentences with much less time and space. Comparison with Related Works The intra-sentence segmentation method based on the maximum entropy model is corn-pared with other approaches in terms of the In (Lyon and Frank, 1995) (Lyon and Dickerson, 1997) , a sentence is segmented into three segments. Though parsing efficiency can be improved by segmenting a sentence, this method may be applied to only simple sentences 4. Long sentences are generally coordinate sentences 5 or complex sentences 6. They have more than two subjects, so applying this method to such sentences seems to be inappropriate. In (Kim and Kim, 1995) , sentence patterns are used to segment long sentences. This method improve parsing efficiency by 30% in time and 58% in space. However collecting sentence patterns requires much hnman efforts and segmentation coverage is only about 36%. Li's method (Li et al., 1990) for sentence segmentation also depends upon manualintensive pattern rules. Segmentation coverage seems to be unsatisfactory for practical machine translation system. The proposed method can be applied to coordinate and complex sentences as well as simple sentences. It shows segmentation coverage of about 96%. In addition, it needs no other human efforts except for constructing training data. Human ~.nnotators have only to read sentences and mark segmentation positions, which is more simple than collecting pattern rules or sentence patterns. We can also get much improved parsing efficiency: about 77% in time and about 71% in space. 4A simple sentence has one subject and one predicate. 5A coordinate sentence results ~om the combination of several simple sentences by the coordinate conjunctions. -6A complex sentence consists of a main clause and several subordinate clauses. Conclusion and Future Work Practical machine translation systems should be able to accommodate long sentences. Thus intra-sentence segmentation is required as a means for reducing parsing complexity. This paper presents a method for intra-sentence segmentation based on the maximum entropy model. The method builds statistical models automatically from a text corpus to provide the segmentation appropriateness for safe segmentation. In the experiments with 1800 test sentences, about 87% of them were benefited from segmentation. The statistical intra-sentence segmentation method can also relieve human of the burden of constructing information, such as segmentation rules or sentence patterns. Experiments suggest that the proposed maximum entropy models can be incorporated into the parser for practical machine translation systems. Further works can be done in two directions. First, studies on recovery mechanisms for unsafe segmentation before parsing seem necessary since ungafe segmentation may cause parsing failures. Second, parsing control mechanisms should be studied that exploit the -characteristics of segmentation positions and the parallelism among segments. This will enhance parsing efficiency further.",
    "abstract": "Long sentence analysis has been a critical problem because of high complexity. This paper addresses the reduction of parsing complexity by intra-sentence segmentation, and presents maximum entropy model for determining segmentation positions. The model features lexical contexts of segmentation positions, giving a probability to each potential position. Segmentation coverage and accuracy of the proposed method are 96% and 88% respectively. The parsing efficiency is improved by 77% in time and 71% in space.",
    "countries": [
        "South Korea"
    ],
    "languages": [
        "Korean",
        "English"
    ],
    "numcitedby": "8",
    "year": "2000",
    "month": "October",
    "title": "Reducing Parsing Complexity by Intra-Sentence Segmentation based on Maximum Entropy Model"
}