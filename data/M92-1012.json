{
    "article": "Our MUC4 TexUS system not only incorporates many of the concepts, knowledge, and algorithm s from our MUC3 INLET system, but also represents our first version of a domain-independent end-to-end natural language processing capability. Although we are excited that our system correctly process tex t from the lexical to the discourse level for the first time, we stress that the MUC4 system is a framework that will not be complete until the end of the year . Relative to MUC3, our scores reflect an increase i n precision due to our system's end-to-end completeness, and a lowering of recall due to the curren t incompleteness of our knowledge base and implementation . As TexUS nears completion, we expect our performance on the MUC4 task to improve substantially . TEST SETTING S No test settings were incorporated during testing . EFFORT A total of 3 .5 person-months were expended during our MUC4 customization effort. Five people were involved in MUC4 related activities: Amnon Meyers (task leader, analyzer, knowledge addition), David de Hilster (analyzer, knowledge addition, testing)\" Charlene Kowalski and Laurie Johnston (corpus study, knowledge addition), and George Vamos (automated testing) . LIMITING FACTORS The greatest limiting factor for us again was time. Development of our new system TexUS reflect s about one man-year of development and less than 4 man-months for the MUC4 task. Nevertheless, in a period of less than two months with a total of 3 persons, TexUS received a new and very thorough lexical processor and new baseline semantic and discourse processors . According to our development plans, th e performance of the system should match that of the best participants at MUC4 by the end of 1992 . TRAINING THE SYSTE M Extensive testing facilities were set up to automatically run and score TexUS on all 1300 message s of the development corpus. Testing was distributed on 5 to 9 Sun workstations (running in the background) processing 1300 messages within 6 to 10 hours. In addition, any 100 message set could be distributed, processed, and scored within one hour . Another program for testing key phrases, linguistic phenomena, and slot fills, was also set up t o monitor the consistency and progress of TexUS . These tests consist of pairs of small hand-made MUC4 templates and their corresponding key-templates. The current version of TexUS is then run on these handmade templates and the differences printed out to monitor progress . One advantage of this testing format is that performance on individual slots is easy to isolate . Due to a lack of time and incompleteness of the current system, the testing facilities were no t extensively used prior to the official testing . The few times they were used on all 1300 messages of the development set, the results provided useful feedback. These tools, in conjunction with the developmen t set, will be used extensively between MUC4 and MUC5 to monitor and speed development of our system . SUCCESSES AND NON-SUCCESSE S Our greatest success was in the fact that our system is now an end-to-end system . Last year wit h only the pattern matching algorithm complete, we quickly reached the limitations of such a capability an d our score could not go much higher without MUC-specific prodding. This year's system, TexUS, being a complete end-to-end system, has great potential to grow and score much higher than last year's system. The lack of development time was the major cause of our difficulties . We needed more time to add knowledge and expand the linguistic coverage of the system . REUSABILIT Y One of TexUS' greatest strengths is its portability to new domains. TexUS not only is written in C and can be compiled into any C or C++ program, but it also is domain-independent. Only three customization tasks were needed to perform the MUC4 task : identification of key words and concepts, special semantic classification of words for the MUC4 domain, and a post-processing module to conver t generic output to MUC4 output. Less than 10 percent of the current code is dedicated to MUC4-like processing, 90 percent of whic h consists of template generation and merging as dictated by MUC4 template guidelines. The time needed to customize TexUS to a new domain is a matter of a few man-months, as demonstrated by our system during MUC3 and MUC4. Development time is cut further by the use of our graphic interface tools . LESSONS LEARNED \u2022 At MUC3, we fielded a system with limited potential, and substantially achieved that potential. At MUC4, we have fielded a system with far greater potential, but have not yet achieved that potential . \u2022 Regarding the MUC task, we realize that greater manpower resources will be required to achiev e the performance of top-ranking systems . \u2022 As in MUC3, MUC4 demonstrates the importance of test and evaluation in driving development .",
    "abstract": "",
    "countries": [
        "United States"
    ],
    "languages": [
        ""
    ],
    "numcitedby": "0",
    "year": "1992",
    "month": "",
    "title": "{M}c{D}onnell {D}ouglas {E}lectronic {S}ystems {C}ompany {MUC}-4 Test Results and Analysis"
}