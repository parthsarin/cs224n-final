{
    "article": "This paper explores the potential for annotating and enriching data for low-density languages via the alignment and projection of syntactic structure from parsed data for resource-rich languages such as English. We seek to develop enriched resources for a large number of the world's languages, most of which have no significant digital presence. We do this by tapping the body of Web-based linguistic data, most of which exists in small, analyzed chunks embedded in scholarly papers, journal articles, Web pages, and other online documents. By harvesting and enriching these data, we can provide the means for knowledge discovery across the resulting corpus that can lead to building computational resources such as grammars and transfer rules, which, in turn, can be used as bootstraps for building additional tools and resources for the languages represented. 1 1 We would like to thank Dan Jinguji for creating the word alignment and source dependency structure gold standards. Our thanks also go to three anonymous reviewers for their helpful comments and suggestions. Introduction Developing natural language applications is generally dependent on the availability of annotated corpora. Building annotated resources, however, is a significantly time consuming process involving considerable human effort. Although a number of projects have been undertaken to develop annotated resources for non-English languages, e.g., treebanks, the development of these resources has been no small feat, and to date have been limited to a very small number of the world's languages (e.g., Chinese, German, Arabic, Korean, etc.). Some notable efforts have been undertaken to develop automated means for creating annotated corpora through the projection of annotations (Yarowksy and Ngai, 2001; Xi and Hwa, 2005) . The resulting methods, however, can only be applied to a small number of language pairs due mostly to the need for sizeable parallel corpora. Unfortunately, most languages do not have parallel corpora of sufficient size, making these methods inapplicable for the vast majority of the world's languages. We describe a method for bootstrapping resource creation by tapping the wealth of multilingual data on the Web that has been created by linguists. Of particular note is the linguistic presentation format of \"interlinear text\", a common format used for presenting language data and analysis relevant to a particular argument or investigation. Since interlinear examples consist of orthographically or phonetically encoded language data aligned with an English translation, the \"database\" of interlinear examples found on the Web, when taken together, constitute a significant multilingual, parallel corpus covering hundreds to thousands of the world's languages. We do not propose that a database of interlinear text alone is sufficient to create NLP resources and tools, but rather that it may act as a means for more rapidly developing such tools using less data. We contend that such a resource allows one to develop computational artifacts, such as grammars and transfer rules, which can be used as \"seed\" knowledge for building larger resources. In particular, knowing a little about the structure of a language can help in developing annotated corpora and tools, since a little knowledge can go a long way in inducing accurate structure and annotations (Haghighi and Klein, 2006) . Of particular relevance to MT is the issue of struc-tural divergence (Dorr, 1994) . Many MT models implicitly make the so-called direct correspondence assumption (DCA) as defined in (Hwa et al., 2002) . However, to what extent that assumption holds is tested only on a small number of language pairs using hand aligned data (Fox, 2002; Hwa et al., 2002; Wellington et al., 2006) . A larger sample of typologically diverse language data can help test the assumption for hundreds of languages. We contend that the knowledge garnered from structural projections applied to interlinear text can bootstrap the development of resources and tools across parallel corpora, where such corpora could be of smaller size and the resulting tools more robust, opening the door to the development of tools and resources for a larger number of the world's languages. Given the imminent death of half of the world's 6,000 languages (Krauss, 1992) , the development of any language specific tools for a larger percentage of the world's languages than is currently possible can aid in both their documentation and preservation. Background The practice of presenting language data in interlinear form has a long history in the field of linguistics, going back at least to the time of the structuralists (see (Swanton, 1912) for early examples). The modern form of interlinear data presentation started to gel in the mid-1960s, resulting in the canonical three line form shown in Ex (1), which we will refer to as Interlinear Glossed Text, or IGT. The canonical form consists of three lines: a line for the language in question (often a sentence, which we will refer to here as the source sentence), an English gloss line, and an English translation. 2 (1) Rhoddodd yr athro lyfr i'r bachgen ddoe gave-3sg the teacher book to-the boy yesterday \"The teacher gave a book to the boy yesterday\" (Bailyn, 2001) Although IGT is usually embedded in linguistics documents as part of a larger analysis, in and of itself it contains analysis and interesting information about the source language. In particular, the gloss line, which is word and morpheme aligned with the source, contains word and morpheme translations for the source language data, and can even contain grammatically salient annotations (e.g., 3sg for Third Person Singular). Further, the reader will note that many words are shared between the gloss and translation lines, allowing for the alignment between these two lines as a intermediate step in the alignment between the translation and the source. An effort is underway to collect these interlinear snippets into an online searchable database, the primary purpose of which is to help linguists find analyzed data for languages they are interested in. We use this resource, called ODIN, the Online Database of INterlinear text (Lewis, 2006) 3 , as our primary data source. At the time of this writing, ODIN contains 36,439 instances of interlinear data for 725 of the world's languages. The Enrichment Algorithm Our algorithm enriches the original IGT examples by building syntactic structures over the English data and then projects these onto the source language data via word alignment. The term syntactic structure in this paper refers to both phrase structure (PS) and dependency structure (DS). The enrichment process has three steps: 1. Parse the English translation using an off-theshelf parser. 2. Align the source sentence and English translation with the help of the gloss line. 3. Project the English syntactic structures to obtain the source syntactic structures using word alignment. Parsing English sentences There are many English parsers available to the public, and in this experiment we used Charniak's parser (Charniak, 1997) , which was trained on the English Penn Treebank (Marcus et al., 1994) . Figure 1 (a) shows a parse tree (in the Penn Treebank style) for the English translation in Ex (1). Given a parse tree, we use a head percolation table (Magerman, 1995) to create the corresponding dependency structure. Figure 2 (a) shows the dependency structure derived from the parse tree in Figure 1 (a). Word alignment Because most of the 700+ languages in ODIN are low-density languages with no on-line bilingual dictionaries or large parallel corpora, aligning the source sentence and its English translation directly would not work well. To take advantage of the unique layout of IGT examples, we propose using the gloss line as a bridge between the other two lines; that is, we first align the source sentence and the gloss line, and then align the gloss line and the English translation. The process is illustrated in Figure 3 . The alignment between the source sentence and the gloss line is trivial and our preliminary experiments showed that simply using whitespace and dashes as delimiters, and assuming a one-to-one alignment produces almost perfect results. In contrast, the alignment between the gloss line and the English translation is more complicated since alignment links can cross and words on one side can link to zero or more words on the other side. We built two aligners for this stage, as described below. Statistical word aligner We create a parallel corpus by using the gloss lines and the translation lines of all the IGT examples for all the languages in ODIN. We then train IBM models (Brown et al., 1993) using the GIZA++ package (Och and Ney, 2000) . In addition to the common practice of lowercasing words and combining word alignments from both directions, we adopt the following strategies to improve word alignment: Breaking words into morphemes: Since a multi-morpheme word in a gloss line often corresponds to multiple words in the translation line, we split each word on the gloss line into morphemes using the standard IGT morpheme delimiters (e.g., \"-\"). For instance, the seven words in the gloss line of Ex (1) become nine morphemes. Adding (x,x) pairs: If a word x appears in the gloss and the translation lines of the same IGT example, it is highly likely that the two copies of the same word should be aligned to each other. To help GIZA++ recognize this property, we first identify and collect all such words and then add single word pairs (x,x) to the training data. For instance, from Ex (1), we would add a sentence pair for each morpheme (excepting -3sg which does not appear in the translation line). Heuristic word aligner Our second word aligner is based on the assumption that if two words (one on the gloss line, the other on the translation line) have the same root form, they are likely to be aligned to one other.We built a simple English morphological analyzer and ran it on the two lines, and then linked the words with the same root form. 4 Tree projection We designed two projection algorithms: one which projects PS and the other which projects DS, both from the English to the source language. 5 Projecting dependency structure Our DS projection algorithm is similar to the projection algorithms described in (Hwa et al., 2002) and (Quirk et al., 2005) . It has four steps: First, we copy the English DS, and remove all the unaligned English words from the DS. 6 Second, we replace each English word in the DS with the corresponding source words. If an English word x aligns to several source words, we will make several copies of the node for x, one copy for each such source word. The copies will all be siblings in the DS. If a source word aligns to multiple English words, after Step 2 the source word will have several copies in the resulting DS. In the third step, we keep only the copy that is closest to the root and remove all the other copies. 7 In Step 4, we attach unaligned source words to the DS using the heuristics described in (Quirk et al., 2005) . Figure 2 shows the English DS, the source DS after Step 2, and the final DS. Projecting phrase structure Our PS projection algorithm also has four steps, the first two being the same as those for projecting DS. In the third step, starting from the root of the current source PS and for each node x with more than one child, we reorder each pair of x's children until they are in the same order as dictated by the source sentence. Let y i and y j be two children of x, and their spans be S i = [a i , b i ] and S j = [a j , b j ]. When we reorder y i and y j , there are four possible scenarios: (1) S i and S j don't overlap: we put y i before y j if a i < a j or the opposity if a i > a j . 4 When a word is repeated in both the gloss and translation, the individual occurrences are aligned individually in left-to-right order. 5 The DS projection algorithm as described does not guarantee that the yield of the resulting source DS has the same word order as the source sentence; however, if needed, the algorithm can be easily modified (by making its Step 3 similar to the Step 3 of the PS projection algorithm) to ensure the correct word order. 6 Every time we remove an internal node x from a DS, we make x's children depend on x's parent directly. 7 The heuristic is not as arbitrary as it sounds because very often when a source word aligns to multiple English words, one of the English words dominates the rest in the DS (e.g., the node for to in Figure 2 (a) dominates the node for the). We are using the dominant word to represent the whole set. (2) S i is a strict subset of S j : we remove y j from the PS and promote its children: y j 's children will become children of y j 's parent. (3) S j is a strict subset of S i : we remove y i and promote its children. (4) S i and S j overlap but neither is a strict subset of the other: we remove both y i and y j and promote their children. If both y i and y j are leaf nodes with the same span, we will merge the two nodes. 8 The last step is to insert unaligned source words into the source PS. For each unaligned source word x, we will find its closest left and right neighbors that are aligned to some English words, and then attach x to the lowest common ancestor of the two neighbors. Figure 1 shows the English PS, the source PS after Step 2, and the final source PS. The three boxes in 1(b) mark the nodes that are removed in Step 3. Experiments We tested the feasibility of our approach on a small set of IGT examples for seven languages: German (GER), Korean (KKN), Hausa (HUA), Malagasy (MEX), Welsh (WLS), Irish (GLI), and Yaqui (YAQ). This set of languages was chosen because of its typological diversity: GER and HUA are SVO languages, KKN and YAQ are SOV, GLI and WLS are VSO, and MEX is VOS. In addition, while German and Korean are well-studied and have readily accessible resources that we could use to test the effectiveness and accuracy of our methods, Yaqui, with about 16,000 speakers, is a highly endangered language and serves as a demonstration of our methods for resource-poor and endangered languages. Creating the gold standard for the test set The formed our test data. Table 1 shows the size and average sentence lengths of the test data by language. 10 The languages are sorted by number of speakers (as derived from the Ethnologue (Gordon, 2005)). We ran our algorithm on the test data, and the system produced the following: an English PS, English DS, word alignment, projected source PS, and projected source DS. We asked human annotators to manually check the output and correct the English DS, word alignments and projected DS structures where necessary. 11 12 In order to calculate interannotator agreement, the Yaqui data and half of the German data were each checked by two annotators, and the disagreement between the annotators was adjudicated and a gold standard was created. The inter-annotator agreement (a.k.a. the F-measure of dependency or alignment links) on English DS, glosstranslation alignment, and projected source DS are 96.34%, 96.35%, and 91.09%, respectively. The rest of the data were annotated by one annotator. Word alignment results We tested our word aligners on 70% (374 examples) of the whole test set (538 examples), while reserving the remaining 30% for future use. Statistical word aligner As indicated earlier, the ODIN database contains 36,439 IGT examples. We removed duplicates 13 and 10 There are three reasons why the sentences are so short. First, since IGT is used to present particular linguistically salient morphological or syntactic material, sentences in IGT are only as long as needed for the given expos\u00e9. Second, space constraints often dictate using shorter examples (i.e., they must fit on one line). Third, the IGT extraction algorithm currently used in ODIN does not search for the less common multi-line (i.e., greater than three line) examples. 11 The English PS and source PS were not corrected; without a thorough linguistic study of the source languages, it is impossible to devise appropriate gold standards for their phrase structures. 12 The DS structures for the English and source language in the gold standard can be non-isomorphic. 13 Duplicates are common since it is standard practice in linguistics to copy and cite language examples from other papers. 2 shows the statistics of the training data with all words lowercased. Tables 3-5 show the performance of the word aligner under three settings: (1): Not splitting words in the gloss lines into morphemes. (2): Splitting words in gloss lines into morphemes. (3): Doing (2) plus adding (x,x) sentence pairs into the training data, where x is a word that appears in both the gloss and translation lines of the same IGT example. For each setting, we trained in both directions and combined the two alignments by taking the intersection, union, and refined as defined in (Och and Ney, 2000) . The best F-score for each setting is in boldface. From the tables, it is clear that the third setting works the best, and combining the alignments Heuristic word aligner The word aligner has two settings. In the first one, the aligner aligns two words if and only if they have the same orthographic form. In the second, it aligns two words if and only if they have the same root form. 16 The results are shown in the first and second rows of Table 6 . We experimented with various methods of combining the two aligners, and the best one is an aug-15 For languages with hundreds of IGT examples, one may wonder whether training GIZA++ with the data for that language alone would outperform the system trained with IGT examples from all the languages in ODIN. To answer this question, we ran three experiments on the German data (for which there are 1757 IGT examples in ODIN after removing duplicates): (a) trained on the (gloss, translation) pairs for all IGT data, (b) trained on the (gloss, translation) pairs of the German data alone, and (c) trained on the (source, translation) pairs of the German data. The test was run against 58 IGT examples, a subset of the German test data in Table 1 . It turns out that (a) performs much better than (b) and (c), which justifies the approach we proposed in Section 3.2. For instance, the F-measures for the refined alignment for (a)-(c) are 92.5%, 90.2%, and 85.6%, respectively. 16 For the second setting, we wrote a 90-line Perl application that finds the root for each English word by using a dozen regular expression patterns combined with a list of 163 irregular verbs with their inflected forms.  17 The result is shown in the last row of Table 6 . We used this aligner for the structural projection experiment. Projection results We evaluated the results of the major steps in our algorithm: the English DS derived from the parse trees produced by the English parser, the word alignment between the gloss and translation lines, and the projected source DS. We calculated the precision, recall, and F-score of the dependency links and word alignment links. The F-scores are shown in Table 7 . 18  Both the English parser and the word aligner work reasonably well with most F-scores well above 90%. The F-scores for dependency links in the source DS are lower partly due to errors in early parts of the process (e.g., English DS and word alignment), which propagates to this step. When we replace the automatically generated English DS and word alignment with the ones in gold standard, the F-measure of source DS increases significantly, as shown in Table 8 . To identify the causes of the remaining errors in the oracle results, we manually checked and classified one third of the errors in the German data. Among the 43 errors in the source DS, 26 (60.5%) are due to language divergence (e.g., head switching), eight (18.6%) are errors made by the projection heuristics, and nine (20.9%) are due to non-exact translations such as the one shown in Ex (2). Because language divergence can reveal interesting typological distinctions between languages, the first type of error may, in fact, identify examples that could be of great value to linguists and computational linguists. (2) der Antrag des oder der Dozenten the petition of-the.SG or of-the.PL docent.MSC \"the petition of the docent.\" (Daniels, 2001) 5 Discussion The IGT bias and knowledge discovery from enriched data From the enriched data, various kinds of information can be extracted, such as grammars and transfer rules. We extracted CFGs for the seven languages by reading off the context-free rules from the projected  source PS. The numbers of rule types and rule tokens for four of the languages are listed in Table 9 . It is important to note that IGT data is somewhat biased: examples tend to be short and are selected for the purposes of a particular rhetorical context. They, therefore, deviate from the \"normal\" usage that one might normally expect to find in a corpus of language data. As such, one might question whether the information extracted from IGT would also be skewed due to these biases. To test the usefulness of the data for answering typological questions, we wrote a tool that predicted the canonical word order (e.g., SOV, SVO) of a language using simple heuristics. It was able to produce the correct answers for all seven languages in our sample. 19 20 We suspect that the number of IGT instances and their diversity (i.e., from multiple documents) is crucial to overcoming the IGT bias, and feel that the same heuristics could be applied to a much larger sample of languages. These could be further adapted to additional typological parameters beyond word order (e.g., orders of heads and modifiers in PS). We leave this to future work. Given syntactically enriched data, it is also possible to search for patterns that are linguistically interesting. For instance, we wrote a piece of code that automatically identified examples with crossing 19 Our code simply went through all the rules in the extracted CFGs and checked the position of the verb with respect to its subject and object. The -SBJ and -OBJ function tags were added to the English parse trees using simple heuristics and were carried over to the source PS via the projection algorithm. 20 There is disagreement among linguists about German's underlying word order, being either SVO or SOV. Our heuristics returned SOV. dependencies (i.e., the ones whose DS have crossing links). One such example from the Yaqui data is in Ex (3), where the coordinated noun phrase kow-ta into mis-ta \"the pig and the cat\" is separated by the verb bwuise-k \"grasp\". Note that the crossing dependencies can only be discovered in the Yaqui data and not in the English since none exist in the English. (3) inepo kow-ta bwuise-k into mis-ta 1SG pig-NNOM.SG grasp-PST and cat-NNOM.SG \"I caught the pig and the cat.\" (Mart\u00ednez Fabi\u00e1n, 2006) So far, we have examined linguistically interesting information in the source. In the future, we plan to examine structures in both the source and English. For instance, we plan to extract transfer rules from the aligned source and English structures and also calculate head/modifier crossings between languages similar to those described in (Fox, 2002) . Tools and resource building The information that we discover about a language can help with the development of tools for the language. The order of constituents, for instance, can be used to inform prototype-driven learning strategies (Haghighi and Klein, 2006) , which can then be applied to raw corpora. It is also possible that small samples of data showing the alignment interactions between source language structures and those of English can provide essential bootstrap information for informing machine translation systems (cf (Quirk and Corston-Oliver, 2006) ). Proof of the utility of an enriched corpus built over ODIN will depend crucially on its evaluation, and we feel that an important part of our future work will be the development of parsers that have been trained on projected structures. These parsers can be evaluated against human built corpora such as treebanks (obviously, only for those languages that have treebanks). Proof will also come from linguists who will be able to use the corpus to search for constructions of interest (e.g., passives, relative clauses, etc.), and will likely be able to do so using standard tools such as tgrep. 21 Crucially, linguists would be able to conduct such searches over a very large number of languages. Conclusion In this paper we demonstrate a methodology for projecting structure from annotated English data onto source language data. Because each IGT instance provides an English translation and an intermediary gloss line, we are able to project full syntactic structures from the automatically parsed translation. The fact that our basic methodology and code were applied to a typologically diverse sample of seven languages without modification suggests the potential for application to a much larger sample, perhaps numbering into the hundreds of languages. The resulting enriched structures could be of great importance to the fields of linguistics and computational linguistics. For the former, search facilities could be built over the that would allow linguists to find syntactically marked up data for a large variety of languages, and could even accommodate cross-linguistic comparisons and analyses. For the latter, we could automatically discern grammars and transfer rules from the aligned and marked up data, where these computational artifacts could act as bootstraps for the development of additional tools and resources.",
    "abstract": "This paper explores the potential for annotating and enriching data for low-density languages via the alignment and projection of syntactic structure from parsed data for resource-rich languages such as English. We seek to develop enriched resources for a large number of the world's languages, most of which have no significant digital presence. We do this by tapping the body of Web-based linguistic data, most of which exists in small, analyzed chunks embedded in scholarly papers, journal articles, Web pages, and other online documents. By harvesting and enriching these data, we can provide the means for knowledge discovery across the resulting corpus that can lead to building computational resources such as grammars and transfer rules, which, in turn, can be used as bootstraps for building additional tools and resources for the languages represented. 1 1 We would like to thank Dan Jinguji for creating the word alignment and source dependency structure gold standards. Our thanks also go to three anonymous reviewers for their helpful comments and suggestions.",
    "countries": [
        "United States"
    ],
    "languages": [
        "German",
        "English",
        "Korean"
    ],
    "numcitedby": "53",
    "year": "2007",
    "month": "April",
    "title": "Multilingual Structural Projection across Interlinear Text"
}