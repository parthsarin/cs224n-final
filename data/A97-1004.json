{
    "article": "We present a trainable model for identifying sentence boundaries in raw text. Given a corpus annotated with sentence boundaries, our model learns to classify each occurrence of., ?, and / as either a valid or invalid sentence boundary. The training procedure requires no hand-crafted rules, lexica, part-of-speech tags, or domain-specific information. The model can therefore be trained easily on any genre of English, and should be trainable on any other Romanalphabet language. Performance is comparable to or better than the performance of similar systems, but we emphasize the simplicity of retraining for new domains. Introduction The task of identifying sentence boundaries in text has not received as much attention as it deserves. Many freely available natural language processing tools require their input to be divided into sentences, but make no mention of how to accomplish this (e.g. (Brill, 1994; Collins, 1996) ). Others perform the division implicitly without discussing performance (e.g. (Cutting et al., 1992) ). On first glance, it may appear that using a short list of sentence-final punctuation marks, such as., ?, and /, is sufficient. However, these punctuation marks are not used exclusively to mark sentence breaks. For example, embedded quotations may contain any of the sentence-ending punctuation marks and . is used as a decimal point, in email addresses, to indicate ellipsis and in abbreviations. Both / and ? are somewhat less ambiguous * The authors would like to aclmowledge the support of ARPA grant N66001-94-C-6043, ARO grant DAAH04-94-G-0426 and NSF grant SBR89-20230. but appear in proper names and may be used multiple times for emphasis to mark a single sentence boundary. Lexically-based rules could be written and exception lists used to disambiguate the difficult cases described above. However, the lists will never be exhaustive, and multiple rules may interact badly since punctuation marks exhibit absorption properties. Sites which logically should be marked with multiple punctuation marks will often only have one ( (Nunberg, 1990) as summarized in (White, 1995) ). For example, a sentence-ending abbreviation will most likely not be followed by an additional period if the abbreviation already contains one (e.g. note that D. C is followed by only a single . in The president lives in Washington, D.C.). As a result, we believe that manually writing rules is not a good approach. Instead, we present a solution based on a maximum entropy model which requires a few hints about what information to use and a corpus annotated with sentence boundaries. The model trains easily and performs comparably to systems that require vastly more information. Training on 39441 sentences takes 18 minutes on a Sun Ultra Sparc and disambiguating the boundaries in a single Wall Street Journal article requires only 1.4 seconds. 2 Previous Work To our knowledge, there have been few papers about identifying sentence boundaries. The most recent work will be described in (Pa.lmer and Hearst, To appear). There is also a less detailed description of Pahner and Hearst's system, SATZ, in (Pahuer and Hearst, 1994) . 1 The SATZ architecture uses either a decision tree or a neural network to disambiguate sentence boundaries. The neural network achieves 98.5% accuracy on a corpus of Wall Str'eet Journal t~Ve recommend these articles for a more comprehensive review of sentence-boundary identification work than we will be able to provide here. articles using a lexicon which includes part-of-speech (POS) tag information. By increasing the quantity ol\" 1.ra.ining data and decreasing the size of their test ,,~rlouS. Palmer and Hearst achieved performance of !)s.9% with the neural network. They obtained similar results using the decision tree. All the results we will present for our a.lgorithms are on their initial, larger test. corpus. In (Riley, 1989) , Riley describes a decision-tree based approach to the problem. His performance on /he Brown corpus is 99.8%, using a model learned t'rom a corpus of 25 million words. Liberman and Church suggest in (Liberlnan and Church, 1992 ) that. a system could be quickly built to divide newswire text into sentences with a nearly negligible error rate. but, do not actually build such a system. 3 Our Approach \\\u00a5e present two systems for identifying sentence boundaries. One is targeted a.t high performance and uses some knowledge about the structure of English financial newspaper text which may not be applical)le t.o text from other genres or in other languages. The other system uses no domain-specific knowledge and is aimed at being portable across English t, ext genres and Roman alphabet languages. Pot.ential sentence boundaries are identified by scamfing the text tbr sequences of characters sepaa'ated by whitespace (tokens) containing one of the symbols !, . or ?. We use information about the tollen containing the potential sentence boundary, as well as contextual information about the tokens immediately to the left and to the right. We also conducted tests using wider contexts, but performance did not, improve. We call the token containing the symbol which marks a putative sentence boundary the Candidate. 'Phe portion of the Candidate preceding the potent.ial sentence boundary is called the Prefix and the portion following it is called the Suffix. The system that focused on maximizing performance used the following hints, or contextual \"templates\": \u2022 The Prefix The abbreviation list is automatically produced from the training data., and the contextual questions are also automat.ically generated by scanning the training data with question templates. As a. result, no hand-crafted rules or lists are required by the highly portable system and it can be easily retrained for other languages or text genres. Maxilnum Entropy The model used here for sentence-boundary detection is based on the maximum entropy model used for POS tagging in (Ratnaparkhi, 1996) . For each potential sentence boundary token (., ?, and !), we estimate a joint probability distribution p of the token and it.s surrounding context, both of which are denoted by c, occurring as an actual sentence I)oundary. The (list, ribul.ioll is given by: 2A token in the training data is considered an abbreviation if it is preceded and followed by whitespace, and it contains a . that is not a sentence boundary. the ctj's are the unknown parameters of the model, and where each c U corresponds to a fj, or a feature. Thus the probability of seeing an actual sentence boundary in the context c is given by p(yes, e). The contextual information deemed useful for sentence-boundary detection, which we described earlier, must be encoded using features. For exampie, a useful feature might be: WSJ 1 if Prefix(c) = Mr &; b.= no ])(b,c) = 0 otherwise This feature will allow the model to discover that the period at the end of the word Mr. seldom occurs as a sentence boundary. Therefore the parameter corresponding to this feature will hopefully boost the probability p(no, c) if the Prefix is Mr. The parameters are chosen to maximize the likelihood of the I.raining data using the Generalized Iterative Scaling (Darroeh and Ratcliff, 1972) algorithm. The model also can be viewed under the Maximum Entropy framework, in which we choose a dist.ribution p that maximizes the entropy H( p 1993 ). We corrected punctuation mistakes and erroneous sentence boundaries in the training data. Performance figures for our best performing system, which used a hand-crafted list of honorifics and corporate designators, are shown in Table 1 . The first test set, WSJ, is Pahner and Hearst's initial test data and the second is the entire Brown corpus. We present the Brown corpus performance to show the importance of training on the genre of text on which testing will be performed. Table 1 also shows the number of sentences in each corpus, the lmmber of candidate punctuation marks, the accuracy over potential sentence boundaries, the nmnber of false positives and the number of false negatives. Performance on the WSJ corpus was, as we expected, higher than perforlnance on the Brown corpus since we trained the model on financial newspaper text. Possibly more significant than the system's performance is its portability to new domains and languages. A trimmed down system which used no information except that derived from the training corpus performs nearly as well, and requires no resources other than a training corpus. Its performance on the same two corpora is shown in Table 2 Conclusions We have described an approach to identifying sentence boundaries which performs comparably to other state-of-the-art systems that require vastly luore resources. For example, Riley's performance ot~ the Brown corpus is higher than ours, but his sysl era is trained on the Brown corpus and uses thirty i.ilnes as much data as our system. Also, Pahner & Hearst's system requires POS tag information, which limits its use to those genres or languages for which there are either POS tag lexica or POS tag annotated corpora, that could be used to train automarie taggers. In comparison, our system does not require POS tags or any supporting resources beyond the sentence-boundary annotated corpus. It is theretbre easy and inexpensive to retrain this syst.em tbr different genres of text in English and text in ()tiler l:(.oma.n-a.lphabet languages. Furthermore, we showed that a small training corpus is sufficient for good performance, and we estimate that annotating enough data to achieve good performance would require only several hours of work, in comparison to the many hours required to generate POS tag and lexical probabilities. Acknowledgments We would like to thank David Palmer for giving us I.he test data he and Marti Hearst used for their sentence detection experiments. We would also like to thank the anonymous reviewers for their helpful insights.",
    "abstract": "We present a trainable model for identifying sentence boundaries in raw text. Given a corpus annotated with sentence boundaries, our model learns to classify each occurrence of., ?, and / as either a valid or invalid sentence boundary. The training procedure requires no hand-crafted rules, lexica, part-of-speech tags, or domain-specific information. The model can therefore be trained easily on any genre of English, and should be trainable on any other Romanalphabet language. Performance is comparable to or better than the performance of similar systems, but we emphasize the simplicity of retraining for new domains.",
    "countries": [
        "United States"
    ],
    "languages": [
        "English"
    ],
    "numcitedby": "482",
    "year": "1997",
    "month": "March",
    "title": "A Maximum Entropy Approach to Identifying Sentence Boundaries"
}