{
    "article": "This paper describes the SHEF submissions for the three sub-tasks of the Quality Estimation shared task of WMT17, namely: (i) a word-level prediction system using bilexical embeddings, (ii) a phrase-level labelling approach based on the word-level predictions, (iii) a sentencelevel prediction system using word embeddings and handcrafted baseline features. Results are promising for the sentence-level approach, but still very preliminary for the other two levels. Introduction Quality Estimation (QE) allows the evaluation of Machine Translation (MT) when reference translations are not available. It can be used in various ways such as in post-editing (PE) to predict whether or not an automatically generated sentence is worth publishing, editing or it should be retranslated manually. Word-level predictions can be helpful by highlighting words that cannot be relied upon or should be fixed by post-editors. More recently, QE at phrase-level has emerged as a way of using quality predictions at decoding time in phrase-based Statistical MT (SMT) systems to guide the decoder such as to keep phrases which are predicted as good, and conversely to discard those which are predicted as bad (Logacheva, 2017) . QE models are built based on a list of features along with a Machine Learning algorithm for either regression or classification. These features are usually extracted from the source and target texts or from the MT system that generated the translations. Shah et al. (2015) introduced a new set of features extracted using an unsupervised approach with the use of neural network: continuous-space language model features and word embeddings features. In our contribution this year we investigate whether we can go beyond engineered features by learning bilexical operators over distributional representations of words in source-target text pairs. Considering the MT pipeline as a noisy black-box, our motivation is to be able to build QE models to predict if information encoded in the source sentence is preserved in the target sentence after translation. 2 Bilinear Model Madhyastha et al. (2014) propose to use wordlevel embeddings to predict the strength of different types of lexical relationships between a pair of words, such as head-modifier relations between noun-adjective pairs. They designed a supervised framework for learning bilexical operators over distributional representations, based on learning bilinear forms W . We adapted their method to predict the strength of relationship between source and target words. This problem is formulated as a log-bilinear model, parametrized with W as follows: Pr(t|s; W ) = exp \u03c6(t) W \u03c6(s) t \u2208T exp \u03c6(t ) W \u03c6(s) (1) where \u03c6 denotes the word embeddings of any given word in a vocabulary V. The source words s and target words t are respectively taken from subspaces S \u2286 V and T \u2286 V. In essence, the problem can be reduced to first obtaining the corresponding word embeddings of the vocabularies of both source and target sentences using a substantially large monolingual corpus for each of the two languages, followed by using the bilinear model to estimate W . W is learned IT PHARMA #sent #word #sent #word English 3.4M 58.3M 1.8M 78.5M German 3.4M 57.5M 1.8M 83.6M Table 1 : Statistics of the in-domain data used to train our embeddings. using the source-target word alignment by minimizing the negative log-likelihood using a 2 regularized objective as: L(W ) = \u2212 s,t log(P r(t|s; W )) + \u03bb W 2 (2) where \u03bb is the constant that controls the capacity of W with gradient descent-based optimization. We explore this approach for both word and phrase-level QE. For training, we rely on both the word-alignments and the gold QE labels (i.e. the OK/BAD labels). The former gives us the sourcetarget pairs, and the latter whether this pair is valid or not. Our assumption is that this approach should be able to predict whether or not a word in the target language (MT output) is correct by exploring the strength of the linguistic relation with the source word it is generated from. Experimental Settings Data and Gold labels Each QE shared task has two datasets: English\u2192German segments on the IT domain (with 23,000 sentences for training, 1,000 for development and 2,000 for test), and German\u2192English segments on the Pharmaceutical domain (with 25,000 sentences for training, 1,000 for development and 2,000 for test). The same data is used for all three tasks: word, phrase and sentence-level prediction. For the word-level task, each token of the MT is annotated with OK or BAD labels. For the phrase-level task, phrases are segmented as given by an SMT decoder and also annotated with OK or BAD labels. Finally, for the sentence-level task, the quality label is a Human-Targeted Error Rate (HTER) score (Snover et al., 2009) . Word Embeddings Word embeddings were used in our submissions for the three tasks. We trained in-domain skipgram embeddings on the in-domain data shown in Table 1 using FastText 1 (Bojanowski et al., 2016) with 300 dimensions and learning rate set to 0.025. The default training settings are otherwise used. The in-domain data is the same as that used to train the SMT system that produced the translations in the QE datasets, as made available by the task organizers. For the word and phrase-level tasks, we used our word embeddings to obtain a word vector representation of 300 dimensions for each word of both the training and development sets. For the sentence-level task, the word embeddings are averaged for each sentence, as previously applied in (Scarton et al., 2016) . Tool To learn to predict the labels for the word-level task, we used BMAPS 2 , the toolkit implementing the method in (Madhyastha et al., 2014) along with the word alignments provided by the organizers (as produced by the SMT system). BMAPS is used to learn the bilexical operators between both source and target embeddings. The tool relies on three matrices corresponding to the source and target vocabularies of the training data, and a third matrix representing the word-level lexical relation between them. This matrix is built from the wordlevel alignments and the gold labels to indicate which lexical items form a pair, and whether their lexical relation is OK or BAD (i.e. if two lexical items are aligned and labelled as OK, their intersection in the third matrix is set to 1, 0 otherwise). By default, the model is trained over 100 iterations with the l 2 norm as regularizer, and using the forward-backward splitting algorithm (FO-BOS) (Duchi and Singer, 2009) as optimization scheme (lc = 0.1, tau = 0.1). Evaluation We used the official task metrics to evaluate our results. For the word and phrase-level tasks, the metrics are F 1 -BAD and F 1 -OK which correspond to the F 1 scores on both BAD and OK labels, and F 1multi which is the product of the two formers. For the sentence-level task, the metrics for scoring are Pearson's correlation (primary metric), Mean Average Error (MAE) and Root Mean Squared Error (RMSE), and for ranking, Spearman's rank correlation (primary metric) and DeltaAvg. Results Word-level QE prediction (Task 2) We investigate different context windows to build our lexical representations, ranging from a wide window considering all sentence-level context, to a much narrower approach representing each word individually: \u2022 Full context: each word is associated with its left and right context to capture the exact distributional features of the specific context in which this lexical item occurs. A lexical item is thus a 900-dimensional word vector represented by the tuple < emb lef t , emb cur , emb right >, where emb lef t and emb right are the averaged embeddings of the left/right contexts and emb cur the word representation of the current word. Here our assumption is that a lexical item would represent a word within its context and at its position in the sentence, therefore if the word appears twice in the sentence, it would be represented by two different lexical items. \u2022 Surrounding context: instead of considering all the left and right context of the current word, we limit ourselves to the two surrounding words. This allows for a model that is as generic as possible while still considering two distributional features corresponding to two different lexical items. Here the assumption is the same as before, the lexical item which represents a word is the same but only considering a window of one word on the left/right to compute emb lef t /emb right . \u2022 Unigram: we use only the embeddings of the current word without considering any surrounding context. By doing so, we fully rely on the embeddings and the way they are trained (skipgram). In this case, the lexical item is a single word representation of 300 dimensions. For each context we investigate two variants: with and without the use of the gold labels in order to demonstrate the capacity of our approach to learn how to discriminate the valid lexical pairs from the others. Discussion The results of our approach for the word-level task are given in Table 2 . We report the results of our official submissions to the task ( \u2020) along with additional experiments we conducted after the task deadline. They are both compared with the official baseline of Task 2. Our first observation is the overall low performance of our approach compared to the official baseline. However, we found very encouraging the results of our additional experiments compared to those of the systems submitted. The revised training procedure significantly improved the performance in terms of F 1 -OK for all three contexts types, resulting in a boost in the F 1 -multi scores. To better understand the gap between our official and additional results, it is important to mention the technical constraints we faced performing the task with BMAPS for the official submission. In its current implementation, BMAPS relies on non-sparse matrices which in our case lead to a heavy memory print, since the source and the target matrices contain vector representations for each word in the corpus. Therefore, to be able to run BMAPS on our servers we were limited to use up to 2,000 sentences (about 9% of the training corpus) as training instances. This certainly had a significant impact on the performance of the models. To tackle this constraint we later opted for a mini-batch training approach: we divided the training corpus into batches of 500 sentences, the training for each batch starting from the results from the training with the previous one. By doing so we are able to use all the training data. However, in BMAPS the size of the dev set (in terms of words from which the matrices are built) has to be smaller than that of the training set. Therefore, by using mini-batches we had to reduce our dev set. We selected for the dev set 250 sentences with the highest number of OK labels in order to boost performance for this class. We also refined our training parameters by switching to the nuclear norm (which is expected to converge faster when restricting the training size (Madhyastha et al., 2014) ). Finally, we empirically identified the best values for the two main parameters (namely lc and tau) for different context types: for both the full and surrounding context, we used lc = 0.1 and tau = 0.001, while for the unigram approach we used lc = 0.1 and tau = 0.01. As a second finding, one can notice the impact of considering the surrounding context when predicting each word's label. In both official and additional results, there is a substantial difference be- tween the three types of context: while unigram was the best performing when limited to 2k training instances only, the exact opposite was found when using the full training set with better F 1 -* scores when the context in which the word occurs is employed. Furthermore, we note a small advantage for the window context over the full context in both language pairs. We believe this means that considering the surrounding context could better help in a situation where a word would appear twice in the same sentence but should be labelled differently. Overall, these results are encouraging and we aim to pursue further investigations towards improving this approach for the task of word-level QE. Phrase-level QE labelling (Task 3) While we could have chosen to predict phraselevel QE labels similarly to our word-level predictions, we opted for generating phrase-level labels from word-level labels following the labelling approaches described in Blain et al. (2016) : \u2022 Optimistic: if half or more of words have a label OK, the phrase has the label OK (majority labelling). \u2022 Pessimistic: if 30% words or more have a label BAD, the phrase has the label BAD. \u2022 Super-pessimistic: if any word in the phrase has a label BAD, the whole phrase has the label BAD. Discussion The results of these three phraselevel labelling strategies based upon our wordlevel predictions are given in Table 3 . We report the results of our official submissions to the task ( \u2020) along with additional experiments we conducted after the task deadline. These are compared with the official baseline for Task 3. First, similarly to the word-level task, the performance at phrase-level improved with the additional experiments, which was expected since the labelling directly follows from the word-level predictions. Second, while we originally observed better labelling performance using the optimistic approach on test.2016 (see underlined numbers), we now observe better F 1 -* scores with both pessimistic approaches for en\u2192de. One can also observe comparable performance for en\u2192de when the surrounding context is used: the difference in terms of F 1 -* scores between the full and window context is marginal. For de\u2192en this is different: the phrase labelling based on word predictions using the window context outperforms the phrase la- belling based on word prediction using the entire sentence as context. F 1 -BAD F 1 -OK F 1 -multi English\u2192German ( Sentence-level QE prediction (Task 1) For the sentence-level task we followed a simple approach, which had been previously applied by Scarton et al. (2016) for document-level QE. The idea was to combine word embeddings with handcrafted features. However, whilst word embeddings trained on general purpose data, our embeddings are trained over in-domain data, as previously described. Word embeddings were averaged at sentence level in order to have a single vector representing each sentence. We then concatenated source and target in-domain embeddings with the 17 sentence-level baseline features provided by the organisers. An SVM regressor was used to train our QE model with hyper-parameters optimized via grid-search. For that we used the learning module available at QuEst++ toolkit (Specia et al., 2015) . Although the sentence-level experiment is different from the approach applied for word and phrase-level tasks, our aim was to test the usability of the in-domain word embeddings. Our results are compared with the official baseline. Discussion The results of our sentence-level predictions are given in Table 4 . Although the approach is rather simplistic, it achieves considerably good results by outperforming the baseline system and several other systems that participated in the shared task. For German\u2192English, our system performed seventh out of 13 in the scoring task. For English\u2192German, it performed eighth out of 13. Table 4 shows the results of our systems (called QUEST-EMB) for the different language pairs and for both scoring and ranking tasks. We also show the results of the baseline systems for comparison. Conclusions In this paper we report our submissions to the three sub-tasks of the QE campaign of WMT17. We obtained reasonably good results for the sentencelevel task despite the use of a very simplistic approach. On the other hand, we significantly underperform in the two other tasks, which exploit a bilinear model. Due to limitations regarding the experimental settings of the tool used for the official submissions, it is difficult to conclude whether or not our approach is suitable for the task of QE. In follow up experiments with different training strategies, the results proved substantially better and much more promising, albeit still behind the official baseline. This is particularly encouraging considering that the approach only relies on word embeddings and word alignment information. We plan to further experiment with it and identify possible improvements in BMAPS that could lead to better performance. It is also worth emphasizing that the approach employed for the sentence-level task is not directly comparable to the approach used for the other tasks; they only share the embeddings trained using in-domain data. However, we can conclude that the in-domain embeddings encode useful information for all tasks. Acknowledgments The authors would like to thank Pranava S. Madhyastha for his support regarding the use of BMAPS. This work was supported by the QT21 project (H2020 No. 645452).",
    "abstract": "This paper describes the SHEF submissions for the three sub-tasks of the Quality Estimation shared task of WMT17, namely: (i) a word-level prediction system using bilexical embeddings, (ii) a phrase-level labelling approach based on the word-level predictions, (iii) a sentencelevel prediction system using word embeddings and handcrafted baseline features. Results are promising for the sentence-level approach, but still very preliminary for the other two levels.",
    "countries": [
        "United Kingdom"
    ],
    "languages": [
        "German",
        "English"
    ],
    "numcitedby": "7",
    "year": "2017",
    "month": "September",
    "title": "Bilexical Embeddings for Quality Estimation"
}