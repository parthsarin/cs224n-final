{
    "article": "The most difficult task in machine translation is the elimination of ambiguity in human languages. A certain word in English as well as Vietnamese often has different meanings which depend on their syntactical position in the sentence and the actual context. In order to solve this ambiguation, formerly, people used to resort to many hand-coded rules. Nevertheless, manually building these rules is a time-consuming and exhausting task. So, we suggest an automatic method to solve the above-mentioned problem by using semantically tagged corpus. In this paper, we mainly present building a semantically tagged bilingual corpus to word sense disambiguation (WSD) in English texts. To assign semantic tags, we have taken advantage of bilingual texts via word alignments with semantic class names of LLOCE (Longman Lexicon of Contemporary English). So far, we have built 5,000,000-word bilingual corpus in which 1,000,000 words have been semantically annotated with the accuracy of 70%. We have evaluated our result of semantic tagging by comparing with SEMCOR on SUSANNE part of our corpus. This semantically annotated corpus will be used to extract disambiguation rules automatically by TBL (Transformationbased Learning) method. These rules will be manually revised before being applied to the WSD module in the English-to-Vietnamese Translation (EVT) system. Introduction Nowadays more and more people are interested in word sense disambiguation (WSD). Bilingual corpora have been exploited in order to train such WSD system, finding out the rules that can be applied in Machine Translation (Zinovjeva, 2000) . The statistical method based on bilingual corpus is used to find and link words in bitexts for English-French, English-Chinese, English-Japanese, etc. (Isahara, Melamed, 2000) . Regarding the English-Vietnamese bilingual corpus, however, so far, we haven't seen any works yet. In this paper, we present building an English-Vietnamese bilingual corpus with semantic tags. This semantically-annotated coprus will be used to train the WSD module for our EVT in the future. In this paper, we don't concentrate on word alignment or WSD, but we concentrate on assigning semantic tags to English and Vietnamese words via their classbased word-alignments (Dien Dinh, 2002) . Thanks to aligned word-pairs along with their corresponding semantic classes in LLOCE, we can find the correct sense of a word and assign it to an appropriate semantic tag. That is, we take advantage of manually correct translation of English and Vietnamese words to disambiguate word senses in semantic tagging. The rest of this paper consists of 4 following sections: -Section 2: Collecting English-Vietnamese bilingual texts. -Section 3: Normalizing English-Vietnamese bilingual corpus. -Section 4: Annotating bilingual corpus: assigning semantic tags to word-pairs in corpus and applying this semanticallyannotated corpus to train the WSD module. -Section 5: Conclusion and future improvements. Collecting English-Vietnamese bilingual texts When chosing this bilingual approach, we have met many difficulties. Firstly, due to no official English-Vietnamese bilingual corpus available up to now, we have had to build them by ourselves by collecting English-Vietnamese bilingual texts from selected sources. Secondly, as most of these sources are not electronic forms, we must convert them into electronic form. During the process of electronic conversion, we have met another drawback. (2) Vietnamese \"word\" is a special linguistic unit in Vietnamese language only, which is often called \"tie\u00e1 ng\". This lexical unit is lower than traditional words but higher than traditional morphemes. Sentence-alignment of bilingual corpus During inputting this bilingual corpus, we have aligned sentences manually under the following format: In which, first characters are reference numbers indicating its sources and the position of sentence in texts. * Because most of our bilingual corpus are manually typed, we haven't used automatic sentential alignment. Automatic sentential alignment (Gale and Church, 1991) will be necessary if we have already had online bilingual texts. Spelling Checker of bilingual corpus After aligning sentences, we check the spell of English words and Vietnamese words automatically. Here, we have met another drawback in processing the Vietnamese word segmentation because Vietnamese words (similar to Chinese words) are not delimited by spaces (Dien Dinh, 2001) . However, our spelling checker is able to detect non-existent words in English or Vietnamese only. So, we must review this corpus manually. In fact, Vietnamese \"word\" here is only \"tie\u00e1 ng\", which is equivalent to Vietnamese \"spelling word\" or \"morpheme\" (due to features of isolated language typology). 4 Annotating bilingual corpus The main section in this paper is to annotate the semantic labels. To carry out this task, we have taken advantage of classification of semantic classes in LLOCE. We considered these class names as semantic tags and assign them to English words in source sentences. In this section, we concentrate on annotating semantic tags via class-based word alignment in English-Vietnamese bilingual corpus. There are many approaches to word alignment in biligual corpora such as: statisticsbased (Brown, 1993) , patern-based mapping (Melamed I.D. 2000) , class-based (Sue Ker J. and Jason Chang S. 1997), etc. Because our main focus is semantical tagging, we have chosen the class-based approach to word alignment. This approach was firstly suggested by Sue J.Ker and Jason S. Chang (1997) in word alignment of English-Chinese bilingual corpus. However, instead of using LDOCE (Longman Dictionary Of Contemporary English) for English and CILIN for Chinese, we use LLOCE enhanced by Synsets of WordNet for both English and Vietnamese. Thank to this enhanced LLOCE (40,000 entries), our class dictionary enjoys more coverage than the original LLOCE (only 16,000 entries). Classes in LLOCE According to a report of EAGLES (1998), LLOCE is a small size learner style dictionary largely derived from LDOCE and organized along semantic principles. A quantitative profile of the information provided is given in table 2 below. Class-based word-alignment We can see clearly that computers cannot understand human dictionary, it only can recognize machine dictionary (called MRD), leading to a limitation in vocabulary as well as ambiguity in semantics when we align words relying on dictionary. So class-based alignment is a solution supplementing the in-context translations concept. In order to get a good result when using class-based algorithm, words in both English and Vietnamese have to be classified based on their senses (Resnik, 1999) . And the ways we use to classify them should be as identical as possible. So we have chosen words in its classes corresponding to those in LLOCE. Vietnamese word-classes are named after the available names of English ones. These seed lexicons must have large coverages. So after building these lexicons, we use some more reliable thesauri to enrich them. Vietnamese word-class lexicon construction For the sake of convenience, we call Vietnamese word-class lexicon \"CVDic\". Step 2 :, we increase the coverage of the CVDic by using the English Vietnamese lexicon. Senses of one word of this English-Vietnamese lexicon are organised in synonym groups. For each word in the right hand side, we find if it appears in some word-classes of the CVDic, then adding the whole group of VEDic to that class of CVDic. We consider VG as a Vietnamese synonym group of EVDic : VG i = { a 1 ,a 2 , ..., a n } (i>0, n>0) In the Vietnamese-class lexicon, we have : word-class C j includes word set VC j = { b 1 , b 2 , ..., b m } (j>0,m>0). Then if (\u2203b k \u2208 VC j , 1\u2264k\u2264m \uf8e6 b k \u2261 a l \u2208 VG i , 1\u2264l\u2264n) the class C j \u2208 VCDic will contain the words of VG i \u222a VC j . Using WordNet to add synonyms to English word-class lexicon As you can see, Wordnet (Miller, 1996) is an on-line lexical reference system whose design is inspired by current psycholinguistic theories of human lexical memory. English nouns, verbs, and adjectives are organized into synonym sets. We take advantages of this valuable resource to add more words to word classes in the English word-class lexicon, CEDic. In WordNet, English words are grouped in Synsets (SN 1 ,SN 2 ,\u2026), this classification model is much more detailed than the one in LLOCE. Therefore, if any two Synsets in these Synsets contain two words which belong to the same word-class, we add the words of the intersection of these two Synsets to that word-class. That means: EC ew SN SN ew EC ew EC ew SN ew SN ew j i \u2208 \u2229 \u2208 \u2200 \u21d2 \u2208 \u2208 \u2208 \u2208 \u2203 ), ( , | , 2 1 2 1 2 1 Word alignment algorithm Before describing this algorithm briefly, we have following conventions: S stands for English sentence and T stands for Vietnamese one. We have sentence pair translated by each other is (S,T), s is the word in S, t is the word in T which is translated by s in S in context. DTs is the set of dictionary meanings for s entry, each meaning is represented by d. W S = { s }, set of English real words and idioms presented in S. W T = { t | t \u2208T \u2227 t \u2208 VD }, set of Vietnamese possible words presented in T. where : VD is the Vietnamese Dictionary containing Vietnamese possible words and phrases. The problem is how computers can recognise which t in T will be aligned with which s in S. Relying on W T , we can solve the case resulting in the wrong definitions of words in Vietnamese sentences when we only carry out word segment relying on VD. Our algorithm is in conformity with the following steps. Dictionary-based word alignment We mainly calculate the similarity on morpheme between each word d in DTs with all t in W T based on formula calculating Dice coefficient (Dice, 1945) Examining a sample on following sentence pair: S = \"The old man goes very fast\" T = \"O\u00c2 ng cu\u00ef \u00f1i qua\u00f9 nhanh\" We will have: W S = { the, old, man, go, very, fast } W T = { o\u00e2 ng, o\u00e2 ng cu\u00ef , cu\u00ef , \u00f1i, nhanh, qua\u00f9 } Suppose that we are examining on \"man\", DT(man) = { ng\u00f6\u00f4\u00f8 i, \u00f1a\u00f8 n o\u00e2 ng, nam nhi } So, we have: DTSim(man, o\u00e2 ng) = max{ Sim(ng\u00f6\u00f4\u00f8 i, o\u00e2 ng), Sim (\u00f1a\u00f8 n o\u00e2 ng, o\u00e2 ng), Sim(nam nhi, o\u00e2 ng) }= max{(2x0)/(1+1),(2x1)/(2+1),(2x0)/(2+1)} = 0.67 DTSim(man, o\u00e2 ng cu\u00ef ) = max{ Sim(ng\u00f6\u00f4\u00f8 i,o\u00e2 ng cu\u00ef ), Sim(\u00f1a\u00f8 n o\u00e2 ng,o\u00e2 ng cu\u00ef ), Sim(nam nhi, o\u00e2 ng cu\u00ef )}=max{(2x0)/(1+2),(2x1)/(2+2),(2x0)/(2+2)} =0.5 Then, we choose candidate translation pairs of greatest likelihood of connection. Calculating the correlation between two classes of two languages The correlation ratio of class X and class Y can be measured using the Dice coefficient as follows: Where |X|= the total number of the words in X, |Y|= the total number of the words in Y, From(a,Y) =1,if , ) , )( ( ALLCONN y a Y y \u2208 \u2208 \u2203 = 0, otherwise To(X,b)= 1, if , ) , )( ( ALLCONN b x X x \u2208 \u2208 \u2203 = 0, otherwise, ALLCONN : a list of initial connections obtained by running above dictionary-based word alignment over the bilingual corpus. Estimating the likelihood of candidate translation pairs A coefficient, presented by Brown (1993) establishing each connection is a probabilistic value Pr(s,t), showing translated probability of each pair (s,t) in (S,T), calculated by product of dictionary translated probability, t(s | t), and dislocated probability of words in sentences, d (i | j, l, m). However Sue J. Ker and Jason S. Chang did not agree with it completely. In their opinion, it is very difficult to estimate t(s, t) and d(i, j) exactly for all values of s, t, i, j in the formula: We have the same opinion with them. We can create functions based on dictionary, word concept and position of words in sentences to limit cases to be examined and computed. The similar concept of word pair (s, t) function: Then, combining with DTSim(s, t), we have four value of t(s, t). We have to combine with DTSim(s, t) because we are partially basing on dictionary. Besides, we can solve the case that there are many words belonging to the same class in sentences. DTSim(s, t) = max Sim(d, t) | | | | ) , ( ) , ( ) , ( Y X b X To Y a From Y X ClassSim X a Y b + + = \u2211 \u2211 \u2208 \u2208 Pr(s, t) = t(s, t) x d(i, j) ConceptSim(s,t) = maxClassSim(X,Y) s\u2208X,t\u2208Y (2) (4) (5) (3)  Similarly, the word \"bank\" has 3 meanings, one is \"money\" (if it belongs to class J104), one is \"river\" (if it belongs to class L99) and one is \"line\" (if it belongs to J41 class). After aligning words, we have semantic tags as follows: In this case, \"bank\" belongs to J104 class, that is the meaning of \"bank\" is \"money\". 2 x | d \u2229 t | Sim(d, t) = | d | + | t | (1) Result of sense tagging for corpus Evaluation of sense tagging for corpus To evaluate the accuracy of our sense tagging in our corpus, we compare our result with SEMCOR (Shari Landes et. al., 1999) on SUSANNE (Geoffrey Sampson, 1995) part only. We have done manual comparison because there are differences between semantic tags of LLOCE and SEMCOR. The result is: 70% of annotated words are assigned correct sense tags. Applying sense tagged corpus for WSD After annotating the bilingual corpus (mainly English texts), we will apply TBL method of Eric Brill (1993) to extract disambiguation rules based on POS, syntactic and semantics information around the polysemous (ambiguous) words. Firstly, we proceed the initially tagging for all words (except stopwords) with \"naive\" labels (most probable labels of this word). Secondly, the learner will generate rules that match the templates showing the format of the rules. All possible rules that match the templates and replace the wrong tags with the correct ones are generated by the learner. In order to know whether this tag is correct or not, we must base on the training corpus (annotated corpus from section 4). TBL method has rules under following templates as follows: If we call semantic label (classification of LLOCE) X and Y,.., the template will have following format: \"Change X into Y if the Z condition is met\". The Z condition may be a word form, or a Part-Of-Speech (POS), or a syntactic label, or a semantic label. Thus, we must assign each English word to an appropriate POS tag by an available POStagger (such as POS-tagger of Eric Brill) and syntactic label by an available parser (such as : APP, PCPATR, ...). After annotating morphological, syntactical and semantic labels, we will apply the above templates in which Z condition has one of following formats: \u2022 The i th -word to the left/right of the ambiguous word is a certain \"word form W\" or a certain symbol. \u2022 The i th -word to the left/right of the ambiguous word is a certain POS k (lexical tag). \u2022 The i th -word to the left/right of the ambiguous word is a syntactical function (e.g. Subject or Object) of the ambiguous word (syntactic tags). \u2022 The i th -word to the left/right of the ambiguous word is a certain semantic label L. After using the above templates to extract transformation rules through training stages, we must manually revise them. We will consider these true and reasonable transformation rules as disambiguation ones which can be applied in the WSD module of English-to-Vietnamese MT system. Conclusion In this paper , we have presented the building of semantically annotated bilingual corpus (based on semantic classes of LLOCE). So far, we have built an English-Vietnamese bilingual corpus with 5,000,000 words from selected sources (in science-techniques and conventional fields). We have also taken advantage of corresponding features of bilingual corpus to semantically annotate for English (and Vietnamese) words via classbased word alignment. This class-based approach has been experimented in our English-Vietnamese bilingual corpus and given encouraging results (nearly 70% of ambiguous words are assigned to correct semantic labels). In the next stages, we will use this annotated corpus as training corpus for WSD in our EVT with the machine learning method of Eric Brill (TBL). References Arthur. 1997",
    "abstract": "The most difficult task in machine translation is the elimination of ambiguity in human languages. A certain word in English as well as Vietnamese often has different meanings which depend on their syntactical position in the sentence and the actual context. In order to solve this ambiguation, formerly, people used to resort to many hand-coded rules. Nevertheless, manually building these rules is a time-consuming and exhausting task. So, we suggest an automatic method to solve the above-mentioned problem by using semantically tagged corpus. In this paper, we mainly present building a semantically tagged bilingual corpus to word sense disambiguation (WSD) in English texts. To assign semantic tags, we have taken advantage of bilingual texts via word alignments with semantic class names of LLOCE (Longman Lexicon of Contemporary English). So far, we have built 5,000,000-word bilingual corpus in which 1,000,000 words have been semantically annotated with the accuracy of 70%. We have evaluated our result of semantic tagging by comparing with SEMCOR on SUSANNE part of our corpus. This semantically annotated corpus will be used to extract disambiguation rules automatically by TBL (Transformationbased Learning) method. These rules will be manually revised before being applied to the WSD module in the English-to-Vietnamese Translation (EVT) system.",
    "countries": [
        "Vietnam"
    ],
    "languages": [
        "Vietnamese",
        "English"
    ],
    "numcitedby": "23",
    "year": "2002",
    "month": "",
    "title": "Building a Training Corpus for Word Sense Disambiguation in {E}nglish-to-{V}ietnamese Machine Translation"
}