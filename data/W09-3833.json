{
    "framing_question": "If this paper introduces a task or benchmark, which groups are stated to benefit from the task or benchmark, if any?",
    "response": "The paper does not introduce a task or benchmark, so there is no information on groups that would benefit from it.",
    "article": "We present an approach for smoothing treebank-PCFG lexicons by interpolating treebank lexical parameter estimates with estimates obtained from unannotated data via the Inside-outside algorithm. The PCFG has complex lexical categories, making relative-frequency estimates from a treebank very sparse. This kind of smoothing for complex lexical categories results in improved parsing performance, with a particular advantage in identifying obligatory arguments subcategorized by verbs unseen in the treebank. Introduction Lexical scarcity is a problem faced by all statistical NLP applications that depend on annotated training data, including parsing. One way of alleviating this problem is to supplement supervised models with lexical information from unlabeled data. In this paper, we present an approach for smoothing the lexicon of a treebank PCFG with frequencies estimated from unannotated data with Inside-outside estimation (Lari and Young, 1990) . The PCFG is an unlexicalised PCFG, but contains complex lexical categories (akin to supertags in LTAG (Bangalore and Joshi, 1999) or CCG (Clark and Curran, 2004 )) encoding structural preferences of words, like subcategorization. The idea behind unlexicalised parsing is that the syntax and lexicon of a language are largely independent, being mediated by \"selectional\" properties of open-class words. This is the intuition behind lexicalised formalisms like CCG: here lexical categories are fine-grained and syntactic in nature. Once a word is assigned a lexical category, the word itself is not taken into consideration further in the syntactic analysis. Fine-grained categories imply that lexicons estimated from treebanks will be extremely sparse, even for a language like English with a large treebank resource like the Penn Treebank (PTB) (Marcus et al., 1993) . Smoothing a treebank lexicon with an external wide-coverage lexicon is problematic due to their respective representations being incompatible and without an obvious mapping, assuming that the external lexicon is probabilistic to begin with. In this paper, we start with a treebank PCFG with fine-grained lexical categories and re-estimate its parameters on a large corpus of unlabeled data. We then use reestimates of lexical parameters (i.e. pre-terminal to terminal rule probabilities) to smooth the original treebank lexical parameters by interpolation between the two. Since the treebank PCFG itself is used to propose analyses of new data, the mapping problem is inherently taken care of. The smoothing procedure takes into account the fact that unsupervised estimation has benefits for unseen or lowfrequency lexical items, but the treebank relativefrequency estimates are more reliable in the case of high-frequency items. Treebank PCFG In order to have fine-grained and linguistic lexical categories (like CCG) within a simple formalism with well-understood estimation methods, we first build a PCFG containing such categories from the PTB. The PCFG is unlexicalised (with limited lexicalization of certain function words, like in Klein and Manning (2003) ). It is created by first transforming the PTB (Johnson, 1998) in an appropriate way and then extracting a PCFG from the transformed trees (Deoskar and Rooth, 2008) . All functional tags in the PTB (such as NP-SBJ, PP-TMP, etc.) are maintained, as are all empty categories, making long-distance dependencies recoverable. The PCFG is trained on the standard training sections of the PTB and performs at the state-of-the-art level for unlexicalised PCFGs, giving 86.6% f-score on Sec. 23.  An important feature of our PCFG is that preterminal categories for open-class items like verbs, nouns and adverbs are more complex than PTB POS tags. They encode information about the structure selected by the lexical item, in effect, its subcategorization frame. A pre-terminal in our PCFG consists of the standard PTB POS tag, followed by a sequence of features incorporated into it. Thus, each PTB POS tag can be considered to be divided into multiple finer-grained \"supertags\" by the incorporated features. These features encode the structure selected by the words. We focus on verbs in this paper, as they are important structural determiners. A sequence of one or more features forms the \"subcategorization frame\" of a verb: three examples are shown in Figure 1 . The features are determined by a fully automated process based on PTB tree structure and node labels. There are 81 distinct subcategorization frames for verbal categories. The process can be repeated for other languages with a treebank annotated in the PTB style which marks arguments like the PTB. Unsupervised Re-estimation Inside-outside (henceforth I-O) (Lari and Young, 1990) , an instance of EM, is an iterative estimation method for PCFGs that, given an initial model and a corpus of unannotated data, produces models that assign increasingly higher likelihood to the corpus at each iteration. I-O often leads to sub-optimal grammars, being subject to the wellknown problem of local maxima, and dependence on initial conditions (de Marcken, 1995) (although there have been positive results using I-O as well, for e.g. Beil et al. (1999) ). More recently, Deoskar (2008) re-estimated an unlexicalised PTB PCFG using unlabeled Wall Street Journal data. They compared models for which all PCFG parameters were re-estimated from raw data to models for which only lexical parameters were re-estimated, and found that the latter had better parsing results. While it is common to constrain EM either by good initial conditions or by heuristic constraints, their approach used syntactic parameters from a treebank model to constrain re-estimation of lexical parameters. Syntactic parameters are relatively well-estimated from a treebank, not being as sparse as lexical parameters. At each iteration, the re-estimated lexicon was interpolated with a treebank lexicon, ensuring that re-estimated lexicons did not drift away from the treebank lexicon. We follow their methodology of constrained EM re-estimation. Using the PCFG with fine lexical categories (as described in \u00a72) as the initial model, we re-estimate its parameters from an unannotated corpus. The lexical parameters of the re-estimated PCFG form its probabilistic \"lexicon\", containing the same fine-grained categories as the original treebank PCFG. We use this reestimated \"lexicon\" to smooth the lexical probabilities in the treebank PCFG. 4 Smoothing based on a POS tagger : the initial model. In order to use the treebank PCFG as an initial model for unsupervised estimation, new words from the unannotated training corpus must be included in it -if not, parameter values for new words will never be induced. Since the treebank model contains no information regarding correct feature sequences for unseen words, we assign all possible sequences that have occurred in the treebank model with the POS tag of the word. We assign all possible sequences to seen words as well -although the word is seen, the correct feature sequence for a structure in a training sentence might still be unseen with that word. This is done as follows: a standard POS-tagger (TreeTagger, (Schmid, 1994) ) is used to tag the unlabeled corpus. A frequency table c pos (w, \u03c4 ) consisting of words and POS-tags is extracted from the resulting corpus, where w is the word and \u03c4 its POS tag. The frequency c pos (w, \u03c4 ) is split amongst all possible feature sequences \u03b9 for that POS tag in proportion to treebank marginals t(\u03c4, \u03b9) and t(\u03c4 ) c pos (w, \u03c4, \u03b9) = t(\u03c4, \u03b9) t(\u03c4 ) c pos (w, \u03c4 ) (1) Then the treebank frequency t(w, \u03c4, \u03b9) and the scaled corpus frequency are interpolated to get a smoothed model t pos . We use \u03bb=0.001, giving a small weight initially to the unlabeled corpus. t pos (w, \u03c4, \u03b9) = (1 \u2212 \u03bb)t(w, \u03c4, \u03b9) + \u03bbc pos (w, \u03c4, \u03b9) (2) The first term will be zero for words unseen in the treebank: their distribution in the smoothed model will be the average treebank distribution over all possible feature sequences for a POS tag. For seen words, the treebank distribution over feature sequence is largely maintained, but a small frequency is assigned to unseen sequences. Smoothing based on EM re-estimation After each iteration i of I-O, the expected counts c em i (w, \u03c4, \u03b9) under the model instance at iteration (i \u2212 1) are obtained. A smoothed treebank lexicon t em i is obtained by linearly interpolating the smoothed treebank lexicon t pos (w, \u03c4, \u03b9) and a scaled re-estimated lexicon cem i (w, \u03c4, \u03b9). t em i (w, \u03c4, \u03b9) = (1\u2212\u03bb)t pos (w, \u03c4, \u03b9)+\u03bbc em i (w, \u03c4, \u03b9) (3) where 0 < \u03bb < 1. The term cem i (w, \u03c4, \u03b9) is obtained by scaling the frequencies c em i (w, \u03c4, \u03b9) obtained by I-O, ensuring that the treebank lexicon is not swamped with the large training corpus 1 . cem i (w, \u03c4, \u03b9) = t(\u03c4, \u03b9) w c em i (w, \u03c4, \u03b9) c em i (w, \u03c4, \u03b9) (4) \u03bb determines the relative weights given to the treebank and re-estimated model for a word. Since parameters of high-frequency words are likely to be more accurate in the treebank model, we parametrize \u03bb as \u03bb f according to the treebank frequency f = t(w, \u03c4 ). Experiments The treebank PCFG is trained on sections 0-22 of the PTB, with 5000 sentences held-out for evaluation. We conducted unsupervised estimation using Bitpar (Schmid, 2004) with unannotated Wall Street Journal data of 4, 8 and 12 million words, with sentence length <25 words. The treebank and re-estimated models are interpolated with \u03bb = 0.5 (in Eq. 3). We also parametrize \u03bb for treebank frequency of words -optimizing over a development set gives us the following values of \u03bb f for different ranges of treebank word frequencies. if t(w, \u03c4 ) <= 5 , \u03bb f = 0.5 if 5 < t(w, \u03c4 ) <= 15 , \u03bb f = 0.25 if 15 < t(w, \u03c4 ) <= 50 , \u03bb f = 0.05 if t(w, \u03c4 ) > 50 , \u03bb f = 0.005 (5) Evaluations are on held-out data from the PTB by stripping all PTB annotation and obtaining Viterbi parses with the parser Bitpar. In addition to standard PARSEVAL measures, we also evaluate parses by another measure specific to subcategorization 2 : the POS-tag+feature sequence on verbs in the Viterbi parse is compared against the corresponding tag+feature sequence on the transformed PTB gold tree, and errors are counted. The tag-feature sequence correlates to the structure selected by the verb, as exemplified in Fig. 1 . Results There is a statistically significant improvement 3 in labeled bracketing f-score on Sec. 23 when the treebank lexicon is smoothed with an EM-reestimated lexicon. In Table 1 , t t refers to the baseline treebank model, smoothed using the POStag smoothing method (from \u00a74) on the test data (Sec. 23) an interpolation factor as in Eq. 5 : this is the best model with a statistically significant improvement in f-score over t t , t pos and t em 1 ,\u03bb=0.5 . Since we expect that smoothing will be advantageous for unseen or low-frequency words, we perform an evaluation targeted at identifying structures subcategorized by unseen verbs. Table 2 shows the error reduction in identifying subcat. frames in Viterbi parses, of unseen verbs and also of all verbs (seen and unseen) in the testset. A breakup of error by frame type for unseen verbs is also shown (here, only frames with >10 token occurrences in the test data are shown). In all cases (unseen verbs and all verbs) we see a substantial error reduction. The error reduction improves with larger amounts of unannotated training data. Discussion and Conclusions We have shown that lexicons re-estimated with I-O can be used to smooth unlexicalised treebank PCFGs, with a significant increase in f-score even in the case of English with a large treebank resource. We expect this method to have more impact for languages with a smaller treebank or richer tag-set. An interesting aspect is the substantial reduction in subcategorization error for unseen verbs for which no word-specific information about subcategorization exists in the unsmoothed or POS-tag-smoothed lexicon. The error reduction in identifying subcat. frames implies that some constituents (such as PPs) are not only attached correctly but also identified correctly as arguments (such as PP-CLR) rather than as adjuncts. There have been previous attempts to use POStagging technologies (such as HMM or maximumentropy based taggers) to enhance treebanktrained grammars (Goldberg et al. (2009) for Hebrew, (Clark and Curran, 2004) for CCG). The reestimation method we use builds full parse-trees, rather than use local features like taggers do, and hence might have a benefit over such methods. An interesting option would be to train a \"supertagger\" on fine-grained tags from the PTB and to supertag a large corpus to harvest lexical frequen- cies. This would form another (possibly higher) baseline for the I-O re-estimation approach presented here and is the focus of our future work.",
    "funding": {
        "military": 0.0,
        "corporate": 0.0,
        "research agency": 5.438558910997315e-06,
        "foundation": 5.51223498068687e-07,
        "none": 1.0
    }
}