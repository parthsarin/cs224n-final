{
    "article": "Named entity disambiguation concerns linking a potentially ambiguous mention of named entity in text to an unambiguous identifier in a standard database. One approach to this task is supervised classification. However, the availability of training data is often limited, and the available data sets tend to be imbalanced and, in some cases, heterogeneous. We propose a new method that distinguishes a named entity by finding the informative keywords in its surrounding context, and then trains a model to predict whether each keyword indicates the semantic class of the entity. While maintaining a comparable performance to supervised classification, this method avoids using expensive manually annotated data for each new domain, and thus achieves better portability. Introduction While technology on named entity recognition (NER) matures, many researchers in the field of information extraction (IE) gradually shifted their focus to more complex tasks such as named entity disambiguation and relation extraction. Both tasks are particularly important for biomedical text mining, which concerns automatically extracting facts from the exponentially growing biomedical literature (Hunter and Cohen, 2006) . One type of facts is relations between biomedical named entities, such as disease-drug relation, gene-disease relation, protein-protein interaction (PPI), etc. To automatically extract these facts, advanced natural language processing techniques such as parsing have been adopted to analyse the syntactic and semantic structure of text. The idea is that linguistic structures between the interacting biological entities may have common characteristics that can be exploited by similarity measures or machine learning algorithms. For example, Erkan et al. (2007) used the shortest path between two genes according to edit distance in a dependency tree to define a kernel function for extracting gene interactions. Miwa et al. (2008) comparably evaluated a number of kernels for incorporating syntactic features, including the bag-of-word kernel, the subset tree kernel (Moschitti, 2006) and the graph kernel (Airola et al., 2008) , and they concluded that combining all kernels achieved better results than using any individual one. Miyao et al. (2008) used syntactic paths as one of the features to train a support vector machines (SVM) model for PPIs and also discussed how different parsers and output representations affected the end results. Another crucial IE task is named entity disambiguation, which concerns grounding mentions of named entities in text to unambiguous concepts as defined in some standard dictionary or database. For instance, given a search term Python, users may like to see the results grouped into the following categories: a type of snake, a programming language, or a film (Bunescu and Pas \u00b8ca, 2006) . One approach to such lexical disambiguation tasks is supervised classification. However, such techniques suffer from the knowledge acquisition bottleneck, meaning that manually annotating training data is costly and can never satisfy the need by the machine learning algorithms. In addition, supervised techniques may not yield reliable results when the distributions of the semantic classes are different in the training and test datasets (Agirre and Martinez, 2004; Koeling et al., 2005) . For example, on the task of word sense disambiguation, a model trained on a dataset where the predominant sense of the word star is \"heavenly body\", may not work well on text mainly composed of entertainment news. Such problems are also major concerns when developing a system to disambiguate biomedical named entities (e.g., protein, gene, and disease), for which some researchers rely on hand-crafted rules in addition to a small amount of training data (Morgan and Hirschman, 2007; Hakenberg et al., 2008) . This paper proposes a new disambiguation method that, instead of classifying each individual occurrence of an entity, it classifies pair-wise relations between the entity mention in question and the \"cue words\" in its adjacent context, where each cue word is assumed to bear a semantic class. We then select the cue word that has a positive relation with the entity, and pass its semantic tag to it. While an individual entity mention may belong to a large number of semantic classes, a relation can only take one of two values: positive or negative, hence transforming a complex multi-classification problem into a less complicated binary classification task. The remainder of the paper is organised as follows: Section 2 proposes the disambiguation method and Section 3 introduces the task of disambiguating the model organisms of biomedical named entities. Section 4 describes in detail our proposed method and also a number of baseline systems for comparison purposes. Section 5 shows the evaluation results and discusses the advantages and drawback of our system, and we finally conclude in Section 6. Disambiguation as Relation Classification The named entity disambiguation task is defined as follows: given a mention of a named entity in text, we automatically assign a semantic tag d to it, where d \u2208 D, and D is a pre-compiled dictionary with |D| entries. When |D| is small, the problem can be approached by supervised classification. For example, to determine whether an occurrence of an entity is a protein, a gene or an RNA, Hatzivassiloglou et al. (2001) compared performance of 3 supervised classification methods and reported results near the human agreement rate. Nevertheless, when |D| is large (e.g., > 100), the performance of classification may decrease, especially when the distribution of d in training dataset differs from that in the test set. In other words, when |D| is large, named entity disambiguation becomes a multi-class classification task on heterogeneous and imbalanced datasets, which is challenging for a machine learning model to learn to discriminate enough between the semantic classes (Japkowicz, 2000) . We propose an alternative method for named entity disambiguation. Intuitively, in the surrounding context of an ambiguous entity, one can often find \"cue words\" that are informative indicators of the entity's semantic category. These cue words are provided by authors to remind readers the semantic identity of a named entity. For example, in an article about protein p53, phrase \"human protein p53\" may be mentioned, where both human and protein contain semantic information regarding p53: human indicates the model organism of p53, and protein suggests the type of this entity. Such cue words may occur infrequently in the training data, making it difficult for machine learning classifiers to capture. Our method exploits this observation. Given a sentence, let E be the set of 'target' entities (e.g., p53) and W of the 'cue' words (e.g., human) that co-occur in a sentence, we define a relation as a pair r = e, w , where e \u2208 E and w \u2208 W , and r is a positive relation if e belongs to the semantic class indicated by w, and is a negative one if not. Then we can disambiguate e by accomplishing the following steps: 1) identify W and build a set of relations R = { e, w i |w i \u2208 W, i = 1, 2, .., n}, where n is the size of W ; and 2) classify every r \u2208 R and assign the semantic tag of w j to e such that r j = e, w j is positive. The first task can be tackled by a dictionary lookup, or by an NER system, if manually annotated data is available. The second is essentially a binary relation classification task, and in this work, we use an SVM model exploiting bag-of-word and syntactic features. Species Disambiguation We show the performance of the proposed method on a task of resolving one major source of ambiguity in protein and gene entities: model organisms. Model organisms are species studied to understand particular biological phenomena. Biological experiments are often conducted on one species, with the expectation that the discoveries will provide insight into the workings of others, including humans, which are more difficult to study directly. From viruses, prokaryotes, to plants and animals, there are dozens of organisms commonly used in biological studies, such as E. coli, Drosophila, Homo sapiens, and hundreds more are frequently mentioned in biological research papers. In biomedical articles, entities of different species are commonly referred to us-ing the same name, causing great ambiguity. For example, searching a protein sequence database, RefSeq 1 with query \"tumor protein p53\" resulted in over 100 proteins, as the name is shared by many organisms. The importance of distinguishing model organisms has been recognised by the community of biomedical text mining. Chen et al. (2005) collected gene names from various source databases and calculated intra-and inter-species ambiguities. Overall, only 25 (0.02%) official symbols were ambiguous within the organisms. However, when official symbols from 21 organisms were combined, the ambiguity increased substantially to 21, 279 (14.2%) symbols. Hakenberg et al. (2008) showed that species disambiguation is one of the most important steps for term normalisation and identification, which concerns automatically associating mentions of biomedical entities in text to unique database identifiers (Morgan et al., 2008) . Also, the task of extracting PPIs in the recent BioCreative Challenge II workshop (Hirschman et al., 2007) requires protein pairs to be recognised and normalised, which inevitably involves species disambiguation. More specifically, given a text, in which mentions of biomedical named entities are annotated, a species disambiguation system automatically assigns a species identifier, as in a standard database of model organisms, to every entity mention. The types of biomedical named entities concerned in this study are protein, gene, protein complex and mRNA/cDNA, and we used identifiers from the NCBI Taxonomy of model organisms. 2 The work focuses on species disambiguation and assumes that the entities are already identified. In practice, an automated named entity recogniser (e.g., AB-NER (Settles, 2005) ) should be used before applying the systems. Approaches This section describes a number of approaches to species disambiguation, highlighting the relation classification method proposed in Section 2. Heuristics Baselines The cue words for species are words denoting names of model organisms (e.g., mouse as in phrase \"mouse p53\"). Another clue is the presence of the species-indicating prefixes in gene and protein names. For instance, prefix 'h' in entity \"hSos-1\" suggests that it is a human protein. Throughout this paper, we refer to such cue words (e.g., mouse, hSos-1) as \"species words\". Note that a species \"word\" may contain multiple tokens (e.g., E. Coli). We encoded this knowledge in a rule-based species tagging system (Wang and Grover, 2008) . The system takes a 2-step approach. First, it marks up species words in the document using a speciesword detection program, 3 which searches every word in a dictionary of model organisms and assigns a species ID to the word if a match is found. The dictionary was built using the NCBI taxonomy 4 and the UniProt controlled vocabulary of species, 5 and in total it contains 420,224 species words for 324,157 species IDs. When species words are identified, we disambiguate an entity mention using one of the following rules: 1. previous species word: If the word preceding an entity is a species word, assign the species ID indicated by that word to the entity. 2. species word in the same sentence: If a species word and an entity appear in the same sentence, assign its species ID to the entity. When more than one species word co-occurs in the sentence, priority is given to the species word to the entity's left with the smallest distance. If all species words occur to the right of the entity, take the nearest one. 3. majority vote: assign the most frequently occurring species ID in the document to all entity mentions. It is expected that the first rule would produce good precision. However, it can only disambiguate the fraction of entities that happen to have a species word to their immediate left. The second rule relaxes the first by allowing an entity to take the species indicated by its nearest species word in the same sentence, which should increase recall but decrease precision. Statistics from our dataset (see Section 5.1) show that only 5.68% entities can potentially be resolved by rule 1 and 22.16% by rule 2, while the majority rule can tackle every entity mention in the dataset. Supervised Classification The disambiguation problem can be approached as a classification task. Given an entity mention and its surrounding context, a machine learning model classifies the entity into one of the classes, where each class corresponds to a species ID. We carried out experiments with two classification methods: multi-class classification and one-class classification, where a maximum entropy model 6 was used for the former and SVM-light 7 for the latter. In one-class classification, we trained a series of binary SVM classifiers, each constructing a separating hyperplane that maximises the margin between the instances of one specific species (i.e., the target class) and a set of randomly selected instances of other species (i.e., the outlier class). We used equal numbers of instances for both classes in training. The following types of features were used in both multi-class and oneclass experiments, where the values of n were set empirically by cross-validation on the training data: \u2022 leftContext The n word lemmas to the left of the entity (n = 200). \u2022 rightContext The n word lemmas to the right of the entity (n = 200). \u2022 leftSpeciesIDs The n species IDs to the left of the entity (with order, n = 5). \u2022 rightSpeciesIDs The n species IDs to the right of the entity (with order, n = 5). \u2022 leftNouns The n nouns to the left of the entity (with order, n = 2). \u2022 leftAdjs The n adjectives to the left of the entity (with order, n = 2). \u2022 leftSpeciesWords The n species word forms to the left of the entity (n = 5). \u2022 rightSpeciesWords The n species word forms to the right of the entity (n = 5). \u2022 firstLetter The first character of the entity itself (e.g., 'h' in hP53). \u2022 documentSpeciesIDs All species IDs that occur in the document in question. \u2022 useStopWords filter out function words. \u2022 useStopPattern filter out words consisting only of digits and punctuation characters. Feature selection was also carried out for the one-class classification experiments. We compared two feature selection methods that reportedly work well on the task of text classification: information gain (IG) (Yang and Pedersen, 1997) and Bi-Normal separation (BNS) (Forman, 2003) . IG measures the decrease in entropy when the feature is given vs. absent, and is defined as: IG(Y |X) = H(Y ) \u2212 H(Y |X) where H(Y ) is the uncertainty about the value of Y (i.e., Y 's entropy), and H(Y |X) is Y 's conditional entropy given X. The BNS is defined as: |F \u22121 (x) \u2212 F \u22121 (y)|, where F \u22121 is the standard Normal distribution's inverse cumulative probability function, namely, z-score; x is the ratio between the number of positive cases containing the feature in question, and the total number of positive cases; and y is the ratio between the number of negative cases containing the feature, and the total number of negative cases. We computed a weight for each feature and then ranked the features according to their weight, with respect to each feature selection method. The top 10% features were used in training. Given a test instance, the one-class classification method first counts the species words in the document that the instance appears in, and then applies in sequence the binary models of each occurring species, starting from the most frequent one. For example, if a document contains 5 occurrences of human and 3 mouse, we first apply the human species model to judge whether an entity mention is of human species, and only if not, the mouse model was applied. The most-frequent species in the document was used as backup when none of the binary models gives positive answers. Relation Classification Overview As for the proposed relation classification method, in the training phase, we first selected the sentences in which an entity mention and a species word co-occur, and constructed pair-wise entityspecies relations. We then assigned each relation a binary label: a relation is positive if the species ID inferred from the species word matches the goldstandard species annotation on the entity, and is negative otherwise. For example, for the sentence shown in Figure 1 , where Drosophila is a species word, and Kip3 and Klp67A are proteins, relation Kip3, Drosophila is a negative instance and the pair Klp67A, Drosophila is a positive one. 8  For each relation, a vector of features were extracted. We followed the PPI extraction method described in (Miyao et al., 2008) , where two types of features were used for a SVM classifier. The first was bag-of-word features, i.e., the words before, between and after the pair of entities, where the words were lemmatised. We added an additional feature of the distance between the entity and the cue word. The other type was syntactic features obtained from parsers. For bagof-word features, a linear kernel was used, and for syntactic ones, a subset tree kernel (Moschitti, 2006) was adopted. The syntactic features were represented in a flat tree format. Figure 2 shows such a feature for the negative instance Kip3, Drosophila from Figure 1 . Note that all species words (e.g., Drosophila) were normalised to \"SPECIESWORD\", and entities (e.g., Kip3) to \"ENTITY\", which not only reduces the noise in the feature set, but also makes the model more species-generic. From the training dataset (see Section 5.1), 25, 413 relations were extracted, of which 63.3% were positive. To identify the species of an entity in unseen text, we first parsed the sentence, and then listed all pairs of species words and entities as relations. Having extracted the bag-of-word and syntactic features from the instance, the trained model was applied to judge whether each species-entity relation was positive. The entity mention in a positive relation would be tagged with the ID indicated by the species word, while the mentions in negative relations would be left untagged. The next section describes in detail how we extracted the syntactic features from text. Syntactic Features Given a sentence, a natural language parser automatically recognises its syntactic structure and outputs a parse tree, in which nodes represent words or syntactic constituents. A path between a pair of nodes can be interpreted as a syntactic relation between sentence units, which was proved useful to infer biological relations (e.g., Airola et al., 2008; Miwa et al., 2008) . We experimented with the following parsers (summarised in Table 1 ): \u2022 Dependency parsers identify one word as the head of a sentence and all other words are either a dependent of that word, or else dependent on some other word that connects to the headword through a sequence of dependencies. We used Minipar (Lin, 1998) and RASP (Briscoe et al., 2006) for the experiments; \u2022 Constituent-structured parsers split a sentence into syntactic constituents such as noun phrases or verb phrases. We used the Stanford parser (Klein and Manning, 2003) , and also a variant of the Stanford parser (i.e., Stanford-Genia), which was trained on the GE-NIA treebank (Tateisi et al., 2005) for biomedical text; \u2022 Deep parsers aim to compute in-depth syntactic and semantic structures based on syntactic theories such as HPSG (Pollard and Sag, 1994) and CCG (Steedman, 2000) . We used the C&C parser (Clark and Curran, 2007) , ENJU (Miyao and Tsujii, 2008) , and a variant of ENJU (Hara et al., 2007) adapted for the biomedical domain (i.e., ENJU-Genia); There were a number of practical issues to consider when using parsers for this task. Firstly, before parsing, the text needs to be linguistically preprocessed, and the quality of this process has a significant impact on parsers' performance. The preprocessing steps include sentence boundary detection, tokenisation and part-of-speech (POS) tagging, all of which can be tricky especially when applied to biomedical text (Grover et al., 2003) . To avoid the noise that can be introduced in the pre-processing steps and to concentrate on evaluating the performance of the parsers, we used the same pre-processing tools (Alex et al., 2008a) 9 whenever possible. The middle column in Table 1 shows how the input text was linguistically pre-processed with respect to each parser. A POS-tagged text implies that it was also sentence boundary detected and tokenised Except for RASP and Minipar, all parsers took POS-tagged text as input. RASP requires POS tags and punctuation labels that were derived from the CLAWS-7 tagset, 10 whereas our dataset uses POS labels from the Penn Treebank tagset (Marcus et al., 1994) . As RASP does not recognise the Penn tagset, we used its build-in POS tagger. Minipar, on the other hand, does not support input of tokenised or POStagged text, and therefore took split sentences as input. Secondly, the output representations of the parsers are different and we preferred a format that depicts relations between words instead of syntactic constituents. In total, 4 representations were used: grammatical relation (GR) (Briscoe et al., 2006) , Stanford typed dependency (SD) (de Marneffe et al., 2006 ), Minipar's own representation (Lin, 1998) , and ENJU's predicate-argument structure (PAS). All the above representations define relations of words in triples, where a dependency triple (i.e., GR, SD and Minipar) consists of head, dependent and relation, and a PAS triple contains predicate, argument, and relation. Figure 1 shows a sentence parsed by ENJU in PAS representation. The right-most column in Table 1 lists the output representation of each parser. A syntactic path between an entity and a species word was represented by a sequence of triples, each following the order of head-dependent or predicate-argument. These paths were used as syntactic features for the SVM classifier. Spreading Strategies Except for the majority vote rule, the approaches described in Sections 4.1 and 4.3 were expected to yield low recall, because they can only detect intra-sentential relations, and therefore only be applied to the entities having at least one species word appearing in the same sentence. Since our aim is to disambiguate as many entity mentions as possible, we would like to \"spread\" the decisions from the disambiguated mentions to their \"relatives\" in the same document. We define an entity mention \u0113 as another mention e's relative under either of the following conditions: a) if \u0113 has the same surface form with e; or, b) if \u0113 is an abbreviation or an antecedent of e, where abbreviation/antecedent pairs were detected using the algorithm described in (Schwartz and Hearst, 2003) . Given the set of disambiguated mentions, we then \"spread\" their species IDs to their relatives in the same document. After this process, the mentions that do not have any disambiguated relatives would still be missed by the system. In such cases, we used a \"default\" species, as determined by the rule of majority vote (see Section 4.1). Evaluation Data and Ontology The species disambiguation experiments were conducted using the ITI-TXM corpus (Alex et al., 2008b) , a collection of full-length biomedical research articles manually annotated with linguistic and biomedical information for developing automatic information extraction systems. The corpus contains two datasets covering slightly different domains: enriched protein-protein interaction (EPPI) and tissue expression (TE). Whenever possible, protein, protein complex, gene, and mRNA/cDNA entities were tagged with NCBI Taxonomy IDs, denoting their species, and it was the species annotation that this study used. The EPPI and TE datasets have different distributions of species. The entities in EPPI belong to 118 species with human being the most frequent at 51.98%. In TE, the entities are across 67 species and mouse is the most frequent at 44.67%. 11 The inter-annotator agreement of species annotation on EPPI and TE are 86.45% and 95.11%, respectively. The species disambiguation systems were developed on the training portions of the EPPI and TE corpora, each containing 221 articles, and evaluated on a dataset combining the development test (DEVTEST) datasets of EPPI and TE, containing 58 and 48 articles, respectively. The combined training dataset contains 96, 992 entity mentions belonging to 138 model organisms, while the DEVTEST dataset contains 23, 118 entities of 54 species. The diversity of model organisms in this corpus highlights the fact that a primary consideration when developing a species disambiguation system is its ability to distinguish a wide range of species with minimal additional manual effort. Results Evaluation Metrics The evaluation was carried out on the DEVTEST dataset, and the systems are compared using av- eraged precision, recall and F1 scores over all species. In more detail, for each model organism that appears in the DEVTEST dataset, we collect two lists of entity mentions of that species: one from the gold-standard DEVTEST dataset, and the other from the output of a disambiguation system. Then the list of system output is compared against the gold-standard list to obtain precision, recall and F1 score. For each system, the scores obtained from all species are averaged using microaverage and macro-average. The micro-average is the mean of the summation of contingency metrics for all model organisms, so that scores of the more frequent species influence the mean more than those of less frequent ones. The macro-average is the mean of precision, recall, or F1 over all labels, thus attributing equal weights to each species, and measuring a system's adaptability across different model organisms. Evaluation Results First of all, Table 2 shows the results of the classification methods described in Section 4.2. The multi-classification system using a maximum entropy model (Maxent) yielded the highest overall micro-averaged F1. Among the SVM-based systems, the one using IG feature selection achieved better performance. In particular, it outperformed the Maxent model in term of macro-averages. The performance of the SVM model with BNS feature selection is disappointing, perhaps because the occurrences of a feature in each instance are not normally distributed. As the Maxent system obtained better results, it was used to compare with other disambiguation systems. Table 3 shows the results of a number of methods described in the previous sections. The methods are categorised into 4 groups: rule-based baseline systems, a Maxent classification model, relation-classification methods, and a hybrid system. The difference between the relation classification systems is the features adopted. Rel-Context was trained on only bag-of-word and distance features, whereas each other system also used syn-tactic features provided by a specific parser. For example, the Rel-RASP system identifies an entity's species by finding positive relations between the entity and its neighbouring species words, using features including bag-of-word, distance, and dependency paths generated by RASP. The hybrid system (Hbrd) ran the Rel-ENJU-Genia system on top of the outcome of Maxent. When a conflict occurs, the species ID is chosen by Rel-ENJU-Genia. The idea is that the relation classification system is more accurate than Maxent when it is applicable, and hence would improve precision on disambiguating the species with few or no training instances. Without spreading (shown in the \"NO SPRD\" columns of Table 3 ), most of the rule-based and relation classification systems only work on a subset of DEVTEST, resulting in low recall: Rule-Sp works on the small proportion of entities (5.68%) with a preceding species word, while the other systems only work on the collection of sentences containing at least one species word and one entity, which covers 4.60% sentences and 22.16% entity mentions. Rule-Majority, Maxent, and Hbrd, on the other hand, apply to all entity mentions, and therefore they are only compared against the others when spreading was applied. The results shown in the \"NO SPRD\" columns can be viewed as a comparative evaluation of the usefulness of the syntactic features supplied by the parsers on this particular task. The rulebased systems set high baselines: Rule-Sp produced good precision and Rule-SpSent achieved the highest micro-averaged F1, thanks to its high coverage, which is also an upperbound of recall for the relation classification systems. Nevertheless, it is encouraging that the relation classification systems obtained higher precision than Rule-SpSent, which is important, considering the decisions will be transfered to the untagged entity mentions across the document. Indeed, as shown in the SPRD columns in Table 3 , most relation classification systems outperformed the Rule-SpSent baseline when spreading was used. The scores of the systems using different parser outputs only vary slightly. Rel-Context, on the other hand, surpassed others in terms of micro-averaged precision, while sacrificing micro-averaged recall and macro-averaged scores. Next, the SPRD columns in Table 3 show the results when the spreading rules were applied, which Statistical Significance To see whether our methods significantly improved the baseline systems, we performed randomisation tests (Noreen, 1989; Yeh, 2000) on some of the results shown in Table 3 . The intuition of randomisation test is as follows: when comparing two systems (e.g., A and B), we erase the labels \"output of A\" or \"output of B\" from all observations. The null hypothesis is that there is no difference between A and B, and thus any response produced by one of the systems could have as likely come from the other. We shuffle these re- sponses R times, reassign each response to A or B and see how likely such a shuffle produces a difference in the metric of interest that is at least as large as the difference observed when using A and B on the test data. Let r denote the number of times that such a difference occurred, then as R \u2192 \u221e, r+1 R+1 approaches the significance level. In our case, the metrics tested were micro-and macro-averaged precision, recall and F1. Following this procedure, we tested whether the improvements made by a relation classification based system (i.e., Rel-ENJU-Genia with SPRD) and the hybrid system (i.e., Hbrd) over the baseline systems were statistically significant. We carried out approximate randomisation with 10,000 shuffles and the test results are shown in Table 5 . The numerical figures in the cells are differences in precision, recall and F1 between a pair of systems. The significance levels (i.e., p-values) are indicated by superscript marks, whose corresponding values are displayed in The test results confirmed that, the improvements made by Hbrd are statistically significant with at least 95% confidence as measured by all metrics except for macro-averaged precision. The relation classification approach achieved significantly lower performance than Maxent in terms of micro-averaged scores (hence the \"-\" sign in the corresponding cell in Table 5 ), but in all other cases it can reject the null hypothesis with very high confidence (i.e., p < 0.0001). Conclusions and Future Work This paper proposes a method that tackles a complex disambiguation problem by breaking it into two cascaded simpler tasks of cue word discovery and binary relation classification. We evaluated the method on the task of disambiguating the model organisms of biomedical named entities, along with a number of other approaches. As measured by micro-averaged F1 score, a supervised classification approach (Maxent) yielded the second best result. However, it can only disambiguate a small number of species that have abundant training instances. With spreading rules, a relation classification system (Rel-ENJU-Genia) trained on word and syntactic features from ENJU-Genia also obtained good micro-averaged F1, while sur- 13 The numbers of times are not shown in Table5 for brevity. passing Maxent significantly in terms of macroaveraged scores. Combining these two systems achieved the best overall performance. Nevertheless, we combined the two methods in a rather crude way, leaving ample room for exploring better strategies in the future. One drawback of the relation classification systems is that they can not cover all entity mentions but only the ones with informative keywords cooccurring in the same sentence. We overcame the drawback by using spreading rules. For some applications, however, it may be sufficient to make predictions exclusively for cases where the systems are applicable. Also, the predictions with high confidence can be used as seed training material for automatically harvesting more training data. Acknowledgments The work reported in this paper is funded by Pfizer Ltd.. The UK National Centre for Text Mining is funded by JISC. The ITI-TXM corpus used in the experiments was developed at School of Informatics, University of Edinburgh, in the TXM project, which was funded by ITI Life Sciences, Scotland.",
    "funding": {
        "defense": 1.9361263126072004e-07,
        "corporate": 1.0,
        "research agency": 0.99995629800496,
        "foundation": 0.0,
        "none": 0.0
    },
    "reasoning": "Reasoning: The article explicitly mentions that the work reported is funded by Pfizer Ltd., which is a for-profit corporation. It also mentions that the UK National Centre for Text Mining is funded by JISC, a research agency, and that the ITI-TXM corpus was developed in the TXM project funded by ITI Life Sciences, Scotland, which could be considered corporate or research agency funding depending on the nature of ITI Life Sciences. However, there is no direct mention of defense or foundation funding.",
    "abstract": "Named entity disambiguation concerns linking a potentially ambiguous mention of named entity in text to an unambiguous identifier in a standard database. One approach to this task is supervised classification. However, the availability of training data is often limited, and the available data sets tend to be imbalanced and, in some cases, heterogeneous. We propose a new method that distinguishes a named entity by finding the informative keywords in its surrounding context, and then trains a model to predict whether each keyword indicates the semantic class of the entity. While maintaining a comparable performance to supervised classification, this method avoids using expensive manually annotated data for each new domain, and thus achieves better portability.",
    "countries": [
        "United Kingdom"
    ],
    "languages": [
        ""
    ],
    "numcitedby": 6,
    "year": 2009,
    "month": "August",
    "title": "Classifying Relations for Biomedical Named Entity Disambiguation",
    "values": {
        "novelty": " We propose a new method that distinguishes a named entity by finding the informative keywords in its surrounding context, and then trains a model to predict whether each keyword indicates the semantic class of the entity.   Given a sentence, let E be the set of 'target' entities (e.g., p53) and W of the 'cue' words (e.g., human) that co-occur in a sentence, we define a relation as a pair r = e, w , where e \u2208 E and w \u2208 W , and r is a positive relation if e belongs to the semantic class indicated by w, and is a negative one if not.  Then we can disambiguate e by accomplishing the following steps: 1) identify W and build a set of relations R = { e, w i |w i \u2208 W, i = 1, 2, .., n}, where n is the size of W ; and 2) classify every r \u2208 R and assign the semantic tag of w j to e such that r j = e, w j is positive.",
        "performance": "First of all, Table 2 shows the results of the classification methods described in Section 4.2. Next, the SPRD columns in Table 3 show the results when the spreading rules were applied, which Nevertheless, we combined the two methods in a rather crude way, leaving ample room for exploring better strategies in the future. One drawback of the relation classification systems is that they can not cover all entity mentions but only the ones with informative keywords cooccurring in the same sentence."
    }
}