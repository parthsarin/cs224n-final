{
    "article": "This paper describes a new automatic method for Japanese predicate argument structure analysis. The method learns relevant features to assign case roles to the argument of the target predicate using the features of the words located closest to the target predicate under various constraints such as dependency types, words, semantic categories, parts of speech, functional words and predicate voices. We constructed decision lists in which these features were sorted by their learned weights. Using our method, we integrated the tasks of semantic role labeling and zero-pronoun identification, and achieved a 17% improvement compared with a baseline method in a sentence level performance analysis. Introduction Recently, predicate argument structure analysis has attracted the attention of researchers because this information can increase the precision of text processing tasks, such as machine translation, information extraction (Hirschman et al., 1999) , question answering (Narayanan and Harabagiu, 2004) (Shen and Lapata, 2007) , and summarization (Melli et al., 2005) . In English predicate argument structure analysis, large corpora such as FrameNet (Fillmore et al., 2001) , PropBank (Palmer et al., 2005) and NomBank (Meyers et al., 2004) have been created and utilized. Recently, the GDA Corpus (Hashida, 2005) , Kyoto Text Corpus Ver.4.0 (Kawahara et al., 2002) and NAIST Text Corpus (Iida et al., 2007) were constructed in Japanese, and these corpora have become the target of an automatic Japanese predicate argument structure analysis system. We conducted Japanese predicate argument structure (PAS) analysis for the NAIST Text Corpus, which is the largest of these three corpora, and, as far as we know, this is the first time PAS analysis has been conducted for whole articles of the corpus. The NAIST Text Corpus has the following characteristics, i) semantic roles for both predicates and event nouns are annotated in the corpus, ii) three major case roles, 1 namely the ga, wo and ni-cases in Japanese are annotated for the base form of predicates and event nouns, iii) both the case roles in sentences containing the target predicates and those outside the sentences (zero-pronouns) are annotated, and iv) coreference relations are also annotated. As regards i), recently there has been an increase in the number of papers dealing with nominalized predicates (Pradhan et al., 2004) (Jiang and Ng, 2006) (Xue, 2006) (Liu and Ng, 2007) . For example, 'trip' in the sentence \"During my trip to Italy, I met him.\" refers not only to the event \"I met him\" but also to the event \"I traveled to Italy.\" As in this example, nouns sometimes have argument structures referring to an event. Such nouns are called event nouns (Komachi et al., 2007) in the NAIST Text Corpus. At the same time, the problems related to compound nouns are also important. In Japanese, a compound noun sometimes simultaneously contains both an event noun and its arguments. For example, the compound noun, '\u4f01\u696d\u8cb7\u53ce (corporate buyout)' contains an event noun '\u8cb7\u53ce (buyout)' and its accusative, '\u4f01\u696d (corporate).' However, compound nouns provide no information about syntactic dependency or about case markers, so it is difficult to specify the predicate-argument structure. Komachi et al. investigated the argument structure of event nouns using the co-occurrence of target nouns and their case roles in the same sentence (Komachi et al., 2007) . In these approaches, predicates and event nouns are dealt with separately. Here, we try to unify these different argument structures using decision lists. As regards ii), for example, in the causative sentence, '\u30e1\u30a2\u30ea\u30fc\u306f\u30c8\u30e0\u306b\u5915\u98df\u3092\u4f5c\u3089\u305b\u308b (Mary makes Tom fix dinner),' the basic form of the causative verb, '\u4f5c\u3089\u305b\u308b (make fix)' is '\u4f5c\u308b (fix),' and its nominative is '\u30c8\u30e0 (Tom)' and the accusative case role (wo-case) is '\u5915\u98df (dinner),' although the surface case particle is ni (dative). We must deal with syntactic transformations in passive, causative, and benefactive constructions when analyzing the corpus. As regards iii) and iv), in Japanese, zero pronouns often occur, especially when the argument has already been mentioned in previous sentences. There have been many studies of zero-pronoun identification (Walker et al., 1994) (Nakaiwa, 1997) (Iida et al., 2006) . In this paper, we present a general procedure for handling both the case role assignment of predicates and event nouns, and zero-pronoun identification. We use the decision list learning of rules to find the closest words with various constraints, because with decision lists the readability of learned lists is high and the learning is fast. The rest of this paper is organized as follows. We describe the NAIST Text Corpus, which is our target corpus in Section 2. We describe our proposed method in Section 3. The result of experiments using the NAIST Text Corpus and our method are reported in Section 4 and our conclusions are provided in Section 5. NAIST Text Corpus In the NAIST Text Corpus, three major obligatory Japanese case roles are annotated, namely the gacase (nominative or subjective case), the wo-case (accusative or direct object) and the ni-case (dative or in-direct object). The NAIST Text Corpus is based on the Kyoto Text Corpus Ver. 3.0, which contains 38,384 sentences in 2,929 texts taken from news articles and editorials in a Japanese newspaper, the 'Mainichi Shinbun'. We divided these case roles into four types by location in the article as in (Iida et al., 2006) , i) the case role depends on the predicate or the predicate depends on the case role in the intra-sentence ('dependency relations'), ii) the case role does not depend on the predicate and the predicate does not depend on the case role in the intra-sentence ('zeroanaphoric (intra-sentential)'), iii) the case role is not in the sentence containing the predicate ('zeroanaphoric (inter-sentential)'), and iv) the case role and the predicate are in the same phrase ('in same phrase'). Here, we do not deal with exophora. We show the distribution of the above four types in test samples in our split of the NAIST Text Corpus in Tables 1 and 2 . In predicates, the 'dependency relations' type in the wo-case and the ni-case occur frequently. In event nouns, the 'zero-anaphoric (intra-sentential)' and 'zeroanaphoric (inter-sentential)' types in the ga-case occur frequently. With respect to the 'in same phrase' type, the wo-case occurs frequently. Predicate Argument Structure Analysis using Features of Closest Words In this section, we describe our algorithm. In the algorithm, we used various constraints when searching for the words located closest to the target predicate. We described these constraints as features with the direct products of dependency types (ic, oc, ga c, wo c, ni c, sc, nc, fw and bw), generalization levels (words, semantic categories, parts of speech), functional words and voices. Dependency Types In Japanese, the functional words in a phrase (Bunsetsu in Japanese) and the interdependency of bunsetsu phrases are important for determining the predicate argument structure. In accordance with the character of the dependency between the case roles and the predicates or event nouns, we divided Japanese word dependency into the following seven types that cover all dependency types in Japanese. Additionally, we use two optional dependency types.  With this type, the target case role is the headword of a bunsetsu phrase and the case role phrase depends on the target predicate phrase (Figure 1 ). Outgoing Connection Type (oc) With this type, the target case role is the headword of a phrase and a phrase containing a target predicate or event noun depends on the case role phrase (Figure 2 ). With these types, a phrase containing the target case role depends on a phrase containing another predetermined case role (Figure 4 ). We use the terms 'ga c', 'wo c' and 'ni c' when the predetermined case roles are the ga-case, wo-case and ni-case, respectively. With this type, a phrase containing the target case role and a phrase containing the target predicate or event noun are in the same article, but these phrases do not depend on each other (Figure 5 ). Optional Type (fw and bw) Type fw and bw stand for 'forward' and 'backward' types, respectively. Type fw means the word located closest to the target predicate or event noun without considering functional words or voices. With fw, the word is located between the top of the article containing the target predicate and the target predicate or event noun. Similarly, type bw means the word located closest to the target predicate or noun, which is located between the targeted predicate or event noun, and the tail of the article containing the predicate. Generalization Levels We used three levels of generalization for every case role candidate, that is, word, semantic category, and part of speech. Every word is annotated with a part of speech in the Kyoto Text Corpus, and we used these annotations. With regard to semantic categories, we annotated every word with a semantic category based on a Japanese thesaurus, Nihongo Goi Taikei. The thesaurus consists of a hierarchy of 2,710 semantic classes, defined for over 264,312 nouns, with a maximum depth of twelve (Ikehara et al., 1997) . We mainly used the semantic classes of the third level, and partly the fourth level, which are similar to semantic roles. We show the top three levels of the Nihongo Goi Taikei common noun thesaurus in Figure 6 . We annotated the words with their semantic category by hand. Functional Word and Voice We used a functional word in the phrase containing the target case role and active and passive voices for the predicate as base features. Training Algorithm The training algorithm used for our method is shown in Figure 7 . First, the algorithm constructs features that search for the words located closest to the target predicate under various constraints. Next, the algorithm learns by using linear Support Vector Machines (SVMs) (Vapnik, 1995) . SVMs learn effective features by the one vs. rest method for every case role. We used TinySVM 2 as an SVM implementation. Moreover, we construct decision lists sorted by weight from linear SVMs. Finally, the algorithm calculates the existing probabilities of case roles for every predicate or event noun. This step produces the criterion that decides whether or not we will determine the case roles when there is no interdependency between the case role candidate and the predicate. Our split of the NAIST Text Corpus has only 62,264 training samples for 2,874 predicates, and we predict that there will be a shortage of training samples when adopting traditional learning algorithms, such as learning algorithms using entropy. So, we used SVMs with a high generalization capability to learn the decision lists. Test Algorithm The test algorithm of our method is shown in Figure 8. In the test phase, we analyzed test samples using decision lists and the existing probabilities of case roles learned in the training phase. In step 1, we determined case roles using a decision list consisting of features exhibiting case role and predicate interdependency, that is, ic, oc, ga c, wo c, and ni c. This is because there are many cases in Japanese where the syntactic constraint is stronger than the semantic constraint when we determine the case roles. In step 2, we determined case roles using a decision list of sc ('in same phrase') for the case roles that were not determined in step 1. This step was mainly for event nouns. Japanese event nouns frequently form compound nouns that contain case roles. In step 3, we decided whether or not to proceed to the next step by using the existing probabilities of case roles. If the probability was less than a certain threshold (50%), then the algorithm stopped. In step 4, we determined case roles using a decision list of the features that have no interdependency, that is, nc, fw and bw. This step will be executed when the target case role is syntactically necessary and determined by the co-occurrence of the case roles and predicate or event noun without syntactic clues, such as dependency, functional words and voices. Experimental Results Experimental Setting We performed our experiments using the NAIST Text Corpus 1.4\u03b2 (Iida et al., 2007) . We used 49,527 predicates and 12,737 event nouns from articles published from January 1st to January 11th and the editorials from January to August as training ex-  Step 1. Determine case roles using a decision list concerning ic, oc, ga c, wo c and ni c. = (w m , dep type, f unc, voice) ; order(f w )++ ; if order(f w ) == 1 then x n,fw \u2190 1 Set a feature f s = (sem(w m ), dep type, f unc, voice) ; order(f s )++ ; if order(f s ) == 1 then x n,fs \u2190 1 Set a feature f p = (pos(w m ), dep type, f unc, voice) ; order(f p )++ ; if order(f p ) == 1 then x n,fp \u2190 1 f eature list(p i ) \u2190 f eature list(p i ) {f w , f s , f p } end procedure Step 2. Determine case roles using a decision list concerning sc for undetermined case roles in Step.1. Step 3. If the existing probability of case roles < 50 % then the program ends. Step 4. Determine case roles using a decision list concerning nc, fw and bw types. amples. We used 11,023 predicates and 3,161 event nouns from articles published on January 12th and 13th and the September editorials as development examples. And we used 19,501 predicate and 5,276 event nouns from articles dated January 14th to 17th and editorials dated October to December as test examples. This is a typical way to split the data. We used the annotations in the Kyoto Text Corpus as the interdependency of bunsetsu phrases. We used both individual and multiple words as case roles. We used the phrase boundaries annotated in the NAIST Text Corpus in the training phase, and used those annotated automatically by our system using POSs and simple rules in the test phase. The accuracy of the automatic annotation is about 90%. Baseline Method To evaluate our algorithm, we conducted experiments using a baseline method. With the method, we used only nouns that depended on predicates or event nouns as case role candidates. If the functional word (post-positional case) in the phrase is 'ga','wo' and 'ni', we determined the ga-case, wo-case, or nicase for the candidates. Next, as regards event nouns in compound nouns, if there was another word in a compound noun containing an event noun and it cooccurred with the event noun as a case role with a higher probability in the training samples, then the word was selected for the case role. Entropy Method The conventional approach for making decision lists utilizes the entropy of samples selected by the rules (Yarowsky, 1994) (Goodman, 2002) . We performed comparative experiments using Yarowsky's entropy algorithm (Yarowsky, 1994) . Overall Results The overall results are shown in Table 7 . Here, 'entropy' indicates Yarowsky's algorithm, which uses entropy (Yarowsky, 1994) . Throughout the test data, the F-measure (%) of our method exceeded that of the baseline system and the 'entropy' system. With the ga-case (nominative) in particular, the F-measure increased 9 points. Table 3 shows some examples of the existing probabilities of case roles for predicates or event nouns. When the probabilities are extreme values such as the ni-case (dative) of \u4ea4\u6e09 (negotiation), the wo-case (accusative) of \u53c2\u52a0 (participation), and the wo-case and ni-base of \u57fa\u3065\u304f (based on), we can decide to fill the targeted case role or not with high precision. However, it is difficult to decide to fill the targeted case role or not when the probability is close to 50 percent as in the ga-case of \u4f7f\u3046 (use). We show the learned decision list of the ic type (the case role depends on the predicate or event noun), sc type (in the same phrase) and the other types for event noun \u4ea4\u6e09 (negotiation) in Tables 4, 5 and 6, respectively. Here, 'word' in the 'level' column means 'base form of predicate' and 'sem' means 'semantic category of predicate.' In the ic and sc type decision lists, features with semantic categories, such as 'REGION', 'LOCATION' and 'EVENT', occupy a higher order. In contrast, in the list of the other types, the features that occupy the higher order are the features of the word base  form. This means local knowledge of relations between case roles and predicates or event nouns in the word level is more important than semantic level knowledge. Results for Predicates in Test Sets We show the results we obtained for predicates in Table 8 . The results reveal that our method is superior to the baseline system. Our algorithm is particularly effective in the ga-case. Results for Event Nouns in Test Sets We show the results we obtained for event nouns in Table 9 . This also shows that our method is superior to the baseline system. The precision with sc type is high and our method is effective as regards event nouns. Conclusion We presented a new method for Japanese automatic predicate argument structure analysis using decision lists based on the features of the words located closest to the target predicate under various constraints. The method learns the relative weights of these different features for case roles and ranks them using decision lists. Using our method, we integrated the knowledge of case role determination and zero-pronoun identification, and generally achieved a high precision in Japanese PAS analysis. In par-ticular, we can extract knowledge at various levels from the corpus for event nouns. In future, we will use richer constraints and research better ways of distinguishing whether or not cases are obligatory. Acknowledgments We thank Ryu Iida and Yuji Matsumoto of NAIST for the definitions of the case roles in the NAIST Text Corpus and functional words, and Franklin Chang for valuable comments.",
    "abstract": "This paper describes a new automatic method for Japanese predicate argument structure analysis. The method learns relevant features to assign case roles to the argument of the target predicate using the features of the words located closest to the target predicate under various constraints such as dependency types, words, semantic categories, parts of speech, functional words and predicate voices. We constructed decision lists in which these features were sorted by their learned weights. Using our method, we integrated the tasks of semantic role labeling and zero-pronoun identification, and achieved a 17% improvement compared with a baseline method in a sentence level performance analysis.",
    "countries": [
        "Japan"
    ],
    "languages": [
        "Japanese"
    ],
    "numcitedby": "44",
    "year": "2008",
    "month": "October",
    "title": "A {J}apanese Predicate Argument Structure Analysis using Decision Lists"
}