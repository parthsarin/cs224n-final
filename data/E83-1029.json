{
    "article": "In this paper a system which understands and conceptualizes scenes descriptions in natural language is presented. Specifically, the following components of the system are described: the syntactic analyzer, based on a Procedural Systemic Grammar, the semantic analyzer relying on the Conceptual Dependency Theory, and the dictionary. INTRODUCTION In this paper a system is presented, which under stands and conceptualizes scenes descriptions in natural language (Italian) and produces simple stat ic images of the scenes. It is part of a larger project that aims at understanding the description of static scenes, reasoning (in case of incompleteness or inconsistency) and dialoguing about them, and finally generating and displaying them. The Input Analyzer (IA) of the system is the most stable end experimented component and it is the topic of this paper. It consists of a Syntactic Analyzer, a Cognitive Data Base (CDB) and a Semantic Interpreter. II SYNTACTIC ANALYZER The syntactic analysis is performed by means of a Procedural Systemic Grammar (PSG) (McCord, 77) . The main characteristics of the PSG parser is that the operation flow is highly structured, since different levels of the analysis are associated to the syntactic units of the sentence. Five processes can be activated (CLAUSE, COMPL.GR, NOUN.GR, ADJ.GR and VERB.GR) devoted to recognize respectively: (i) the sentences, (ii) the propositional phrases, comparatives, quantification and noun phrases, (iii) the components of the noun phrases, (iv) the adjectives and their modifiers, (v) the verb and its modifiers. , and returns to its caller the results of its computation as a message. A feature network is associated to each process, which is activated together with its corresponding processes. In a PASCAL-like language the feature network can be defined as follows: type FEATURE . (Winograd, 72) . Each process gives as output a fragment of the FEATURE NETWORK manipulated to describe the input; this is performed by means of a set of functions which test the presence of a feature in the FEATURE_NETWORK, add and erase features, as described in McCord ('77). The process is divided into a set of sequential routines,called SLOTs, analyzing the functional components of a Syntactic Unit. In the function: function FILLER(ARGI:PROCESS, ARG2:SETOF_FEATURES):boolean; ARGI activates the appropriate process to fill the caller slot; the second argument of the function selects the set of features to which the called process must be inizialized. This last features-passing mechanism is absent in the original PSG; from our experience, we found it usefull in all the cases in which a choice in a syntactic level is determined by the syperior level or by a more larger context. Thus, for instance, the set of features characterizing a prepositional phrase is determined at the corresponding syntactic level by the preposition and the features of the nominal phrase; but further and not less important selection criteria can be imposed by the verb which is found in the upper level. The output of a simple analysis is shown in Fig. 2 ; it gives an idea of the syntactic representation. INPUT: IL M~O GATTO -Result of a Sentence Analysis The choice of PSG is mainly motivated by the possibility of parallel computation. A control structure allowing the parallel computation is: cobegin ... coend; It is a single input-output structure, very usefull to handle alternative choices for the same computational level. In the case of mutually exclusive alternatives only one of the \"n\" processes activated by a cobegin control structure can end successfully. In the case of not mutually exclusive alternatives, it is still possible to use the cobegin control structure , but it is necessary to define a strategy for the selection of the most suitable alternative when the coend occurs. An experimental implementation in terms of para~ lel computation has been made on a multiprocessor system (Adorni et ai., '79) . Another version of this parser has been implemented in PASCAL (DiManzo et ai.,'79} and a version in FranzLisp is in progress. III STRUCTURE OF THE COGNITIVE DATA BASE The organization of knowledge, in this system, is based on a set of THOUGHTs. A THOUGHT is a frame like structure within which new data are interpreted in terms of concepts acquired through previous experience (Minsky,'75), (Schank, Abelson, '77) . Every THOUGHT has a TYPE which determines a set of operations applicable to it. The following predefined types are allowed (Adorni, DiManzo, '83) : -DESCRIPTIVE, that defines the complete description of a physical,abstract,animate or not,object. -PROTOTYPE, that defines the structural part of a physical object in terms of generalized cones (Marr, Nishihara, '78) . An example of definition of simple prototype object is given in Fig. 3 . -JOINT, that defines the element of connection between physical objects, in order to build more complex objects or scenes (Fig. 4 ). -SPATIALREL, that defines spatial relationships like \"on,near,on the left of,...\" between objects. All the linguistic relationships like \"above,under, behind\", and so on, are reduced into quantitative geometrical relationships between the coordinates of some points of the involved objects; this choice is motivated by the possibility of deriving a set of very general inference rules from analytic geometry (Adorni et ai., '82) , (Boggess, '79) , (Boggess, Waltz, '79) . The coordinates of an indefinite point P are given in the form: COORD K OF P (REFERRED_TO A)=H where K is a group of possible coordinates, H a set of values for these coordinates and A is the THOUGHT of the object to which the reference system used is connected. Fig. 5 shows the THOUGHT for an use of the preposition \"on\". A spatialrel type THOUGHT can contain conceptualizations and prototype THOUGHTs; a joint type can contain only its description; a prototype type can contain joint or prototype THOUGHTs or descriptions in terms of generalyzed cones;all these types can be enclosed in a descriptive type which can contain conceptualizations and all the types of THOUGHTs, previously introduced. A descriptive type can include the following fields (Adorni, DiManzo, '83) , (see Fig. 6 ): -DESCR, contains all the basic not specialized knowledge about the object; -LEVELS, contains a description of the shape of the object (in terms of prototype THOUGHTs) divided in different levels of detail hierarchically organized; -USE, contains the descriptions of the most common activities involving the use of the object, in terms of spatialrel between prototype THOUGHTs; between the described object and other objects in standard scenes, in terms of a spatialrel between prototype THOUGHTs; -SUPPORT, contains the indication, in terms of descriptive THOUGHTs, of the objects which are supported in standard situations; -COLOR and MADE, describe the possible set of colors and materials, while WEIGHT contains information about the range of possible weights; -CONTENT, says, in terms of descriptive THOUGHTs, that the normal use of the object is a container for other objects; -DYNAMIC, contains the current expectations about the boundaries of the dimensions of the objects; it can be dinamically updated every time a new object of the same class enters the system's CDB. IV SEMANTIC INTERPRETER The Semantic Interpreter of the IA interacts with the Syntactic Analyzer and operates on a set of rules in order to build the concepts a sentence was intended to mean. The output of this module is a Conceptual Dependency Network (Schank, '75) , in which every nominal is substituted by a complex descriptive THOUGHT instantiated from the CDB. Let us illustrate the procedure of analysis considering the following sentence (the translation is word by word in order to reproduce the problems of Italian): (i) \"l'uomo dai capelli grigi e' andato a Roma con l'auto di Giuseppe\" (the man with the grey hair has gone to Rome with the car of Joseph) The procedure of analysis has several steps: A. Analysis of Words and Simple Phrases During this step the entities which take part into the conceptualization are identified. In fact an indexed identifier Xi is associated to each object referred to in the sentence (each nominal), which points to one or more conceptualizations, contained in the field \"descr\" of each nominal in the CDB. The adjectives contained in the noun phrases are also analyzed during this step. Each of them adds some conceptualizations which contribute to further individuate the nominal. During this step personal pronouns are identified as: Xi ~=--> ISA(HUMAN) Temporal and local adverbials are also analyzed in this phase in order to assign to the sentence conceptualization a time and place identification according to certain rules described in (Adorni et al., '81) . At the end of this step the sentence (i) is represented as follows: identifier nominal conceptualization Xl uomo (man) Xl <=~ISA(HUMAN) X2 capelli (hair) X2<==>ISA(HAIR) X3 Roma (Rome) X3~=>ISA(CITY) XS<==>NAME(ROME) X4 auto (car) X4<==>ISA(CAR) X5 Giuseppe (Joseph) X5<==>ISA(HUMAN) X5~-->NAME(JOSEPH) The sentence (i) can then be read: (2) \"XI da X2 e' andato a X3 con X4 di X5\" (XI from X2 is gone to X3 with X4 of X5) B. Analysis of Modifiers The simple phrases of a sentence can either fill conceptual cases of a main conceptualization, thus serving as 'picture producer' (PP), or further ind ! ON is spatial~el {AOHB} They are, therefore,immediately associated to their corresponding nominals. In (2) \"da X2\" and \"di X5\" are of this kind and are consequently linked to X1 and X4 producing: (3) \"XI e' andato a X3 con X4\" (XI has gone to X3 with X4) In the \"descr\" field of THOUGHTs Xl and X4 the following information is added: X2 < .... PART OF(X1) X5 <===> OWNERSHIP(X4) The embodying of a modifier creates complex PPs or CLUSTERs. Each CLUSTER has as its HEAD a b) or c) modifier,a conceptual index node modified by the accessory concepts. In our example \"l'uomo dai capelli neri\", \"a Roma\", and \"con l'auto di Giuseppe\" are CLUSTERs, in which the head is always the leftmost nominal. The decision about the embodying of a modifier into its head is related to the classical problem of the placement of PP's. In fact, it is not always the case that a prepositional phrase modifies a conceptual index node; it is often possible that it has to be embodied into another accessory modifier, as in: \"il libro dell'uomo dal cappotto blu\" (the book of the man with the blue coat) If it is defined: md ---> the current phrase; md-i ---> the immediately proceeding phrase; md-2 ---~ the phrase that immediaZely proceeds md-l; the solution is obtained by recursively deciding wether md is to be embodied into md-i or md-2. Recursion is from the lower level. This decision is made by a set of standard general procedures associated to prepositions (di, da, con, per .... ) and adverbs (sopra, sotto, davanti, diefro, ...). Non-standard specialized alternatives are activated by particular nouns and verbs in order to treat hidiosyncrasies. These procedures are written as three-steps programs, which accomplish the operations of:  (it is an object such that if x Use the lamp in a standard way,then the lamp is on the table) FIG.7 -THOUGHT of the Table Lamp C. Construction of the Main Conceptualization The nucleus of a main conceptualization can be associated in the CDB both to a noun indicating an action, state or change of state and a verb. In our example, we find the THOUGHT of fig. 8 . A time identification always related to the present (T@), is taken from the syntactic analysis and connected to this conceptualization, thus resulting into: At this step \"splitting\" of a conceptualization often occurs. In the sentence: \"Giovanni d~ un colpo a Maria\" (lit. John gives a blow to Mary) although two nuclei are present (d~ & colpo),nevertheless the correct interpretation is \"Giovanni colpisce Maria\" (John hits Mary), instead of \"Giovanni trasferisce il possesso dell'oggetto colpo a Maria\" (John tansfers the ownership of the object 'blow' to Mary)!!! We have observed that this phenomenon involves conceptualizations based on the primitives of \"state\", \"action\", and \"spatial relationship\" and relies only on the pairs ACTION-STATE, ACTION-SPATIAL RE-LATIONSHIP, and ACTION-ACTION. The regularities ruling the formation of these pairs have been found to depend only upon those conceptual primitives. This keeps the number of rules to be evaluated reasonably small, if compared with the number of CDB entries (~600 entries in the present implementation (Adorni et al., '81) )~ An example will illustrate the mechanism of reduction of the conceptual \"splitting\" as well as of disambiguation. The pair ACTION-SPATIAL RELATIONSHIP may be represented by: \"tirare su il braccio\" (TO(NIL)))) ) X ~ ~ DO == S(Y(CHANGE STATE((FROM(HAPPINESS(N)}) (TO(HAPPINESS(N)))) ) ) The context helps disambiguation. In our example, the object of the spatial relationship being a physical object, the first alternative is selected. The rule performs a further control, discovering that the physical object is, in this case, PART OF(HUMAN); the PROPEL primitive is then substituted by the MOVE primitive. D. Case Fillin~ in the Main Conceptualization The next step performed by the semantic module is the filling of the conceptual cases of the main conceptualization with the THOUGHTs instantiated during the previous steps. Again, standard rules are associated to prepositions and adverbs and hidiosyncrasies are also treated. These rules make use of messages sent by the syntactic component and look at the conceptual syntax of the main conceptualization. Through these rules the cluster\"con X4\" turns out to be 'instrumental' and the following conceptualization is then produced: (4) X1 .... USE .... OBJ(X4) Since the filler of the instrumental case of the main conceptualization has to be a conceptualization, the rule activated by the \"con\" modifier fills the instrumental case with (4). In (3), 'a X3' is placed in the destination of the directive case of the main conceptualization, because preposition 'a' is stated to indicate the 'destination' if the main conceptualization contains a PTRANS,PROPEL or MOVE,with empty directive case; otherwise it indicates 'state'. \"Andare a Roma\" is thus distinguished from \"essere a Roma\" (to be in Rome). The result, for our example, is: XI< .... PTRANS~---OBJ(XI)~---DIR((FROM(NIL)) (TO(IN X3)) ) The directive case,as shown in the above example is not simply filled with a md; it is filled with a \"spatial_relationship-md\" pair. This is a general rule for our system, emphasizing the change of coot dinates caused by an action. In our example this means that the primitive PTRANS has moved the object to a point whose coordinates are defined with in the city of Rome. The result of the analysis of (I) is given in Fig. 9 . FIG.9 -Result of the Analysis of the Sentence (i) E. Conceptual Analysis of Complex Sentences The process of semantic interpretation is applied to every clause in the sentence, identified by a verb or a noun indicating an action. Segmentation into such clauses or nominalized clauses is obviously performed by the syntactic component, which has also non-standard rules for specific classes of (modal) verbs like: dovere (must),volere (to want),potere (can),incominciare (to start) .... These verbs constitute a single main conceptualization together with the embedded infinitive. Simple composition rules have been defined to combine the meaning of clauses (sentences). Thus for conjunction, as in \"si alzo',si mise il cappello eapri' la porta\" (he stood up,put on its hat and opened the door) the main conceptualizations associated to every proposition are connected by an 'and' relationship. (si alzo') ......................... T1 and (si mise il cappello) T2 >TI and (apri' la porta) T3 >T2 A time indication is also associated to every main conceptualization to emphasize the execution order of every action. Conceptual analysis of each single clause (sentence) is activated by this top level structure and at the end the resulting conceptualizations are linked one to the other. V CONCLUSIONS In this paper a system for understanding a natural language input to a scene generator has been described. It makes use of a conceptual dependency semantic model, substantially modified in as much as syntax is kept apart from semantic interpretation and a fully formalized dictionary is used, much more complex than the one embodied in Schank's theory. The dictionary is particularly oriented to the generation of scenes, and the stress is on the representation of the structure of objects. The awareness of the structure of the objects is often intimately related to our capability of under standing the. meaning of spatial relationships and other complex linguistic expressions. For instance, the meaning \"the cat is under the car\" is clear, even if it may depend on the state of the car, moving or parked; on the contrary, the sentence \"the cat is under the wall\" is not clear, unless the wall is crashed or it has a very particular shape.Our model tries to account t~is understanding activity by means of the following features: an object is described at several levels of details; in some cases, only a rough definition of the object dimensions can be sufficient, while in other cases a more sophisticated knowledge about the structure of the object itself is required; -the characteristic features of an object are emphasized; the recognition of a feature allows the activation of particular rules and the generation of hypotheses about the presence of an object; -the typical relationships among objects are described. The interaction between syntactic and semantic analyzers seems rather complex, but it provides some valuable solutions to certain crucial points of computational linguistics, like PP's placement, conceptual splitting, idioms and preassembled The syntactic analyzer, working top-down, yelds a representation of the input sentence in which information about gender, number, person and tense are recorded and for each function such as subj, obj, time, etc.., the ccrresponding filler is identified, or a list of fillers is given in case of ambiguity. These two kinds of information are exactly what is usefull for semantic interpretation and are picked up in various steps of the interaction by the semantic analyzer in order to build the main conceptualization and to fill its role. Also MARGIE (Schank, '75) It also provides a simpler way of dealing with syntactic variants of the same sentence and a help in identifying coreferences. The semantic interpreter works fundamentally bottom-up and, although much is still to be attempted, it seems that it can usefully cooperate with a top-down parser to find the correct interpretation. These practical advantages will be taken into account also in the future development of the system. In fact it seems that, although no definite solution has been given to many linguistic problems, the interaction between two fully developped mechanisms controlling each other can provide an indication and a frame into which a more compact system can be built. In the present version of the system the interaction between the two modules is strictly sequential. In a more compact analyzer, syntactic specialists, i.e. simplified pieces of grammar specialized in particular syntactic phenomena, will be called by semantic interpreter according to opportunity. This second version is still being designed. VI ACKNOWLEDGEMENTS The autors would like to thank Dr. Lina Massone for her contributions and assistance in the preparation of this paper.",
    "abstract": "In this paper a system which understands and conceptualizes scenes descriptions in natural language is presented. Specifically, the following components of the system are described: the syntactic analyzer, based on a Procedural Systemic Grammar, the semantic analyzer relying on the Conceptual Dependency Theory, and the dictionary.",
    "countries": [
        "Italy"
    ],
    "languages": [
        "Italian"
    ],
    "numcitedby": "17",
    "year": "1983",
    "month": "September",
    "title": "Natural Language Input for Scene Generation"
}