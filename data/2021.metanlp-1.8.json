{
    "article": "Meta-learning aims to optimize the model's capability to generalize to new tasks and domains. Lacking a data-efficient way to create meta training tasks has prevented the application of meta-learning to the real-world few shot learning scenarios. Recent studies have proposed unsupervised approaches to create meta-training tasks from unlabeled data for free, e.g., the SMLMT method (Bansal et al., 2020a) constructs unsupervised multiclass classification tasks from the unlabeled text by randomly masking words in the sentence and let the meta learner choose which word to fill in the blank. This study proposes a semi-supervised meta-learning approach that incorporates both the representation power of large pre-trained language models and the generalization capability of prototypical networks enhanced by SMLMT. The semi-supervised meta training approach avoids overfitting prototypical networks on a small number of labeled training examples and quickly learns cross-domain task-specific representation only from a few supporting examples. By incorporating SMLMT with prototypical networks, the meta learner generalizes better to unseen domains and gains higher accuracy on out-ofscope examples without the heavy lifting of pre-training. We observe significant improvement in few-shot generalization after training only a few epochs on the intent classification tasks evaluated in a multi-domain setting. Introduction Recent developments of large scale pre-trained models, such as BERT (Devlin et al., 2019) , GPT (Brown et al., 2020) and XLNet (Yang et al., 2020) , have significantly advanced the natural language processing (NLP) techniques. However, these models still rely on fine-tuning on a relatively large number of labeled samples (> 1000) to achieve high accuracy even for tasks seen during training (Howard and Ruder, 2018) . Recent studies (Brown et al., 2020; Bansal et al., 2019; Dou et al., 2019) have demonstrated that these large language models have the potential to be few shot learners, i.e., capable of adapting to a new task or a new domain by training only on a few examples with the aid of meta-learning. Meta-learning tackles the fewshot learning problem through learning a robust yet flexible representation from a variety of tasks in a so-called meta training stage, so that the model can quickly adapt to new tasks with only a few examples. In addition, random sampling is introduced in the design of meta training tasks to avoid memorization, a phenomenon in which the meta learner memorizes a function that directly associates an input with the label when no real learning occurs (Yin et al., 2019) . Meta-learning approaches such as the optimization-based MAML (Finn et al., 2017) , the metric-based Prototypical Networks (ProtoNet) (Snell et al., 2017) and etc., have been successfully applied in NLP domain (Yin, 2020) . Dou et al. (2019) successfully applied MAML and its variants to low-resource text classification tasks on the GLUE dataset (Wang et al., 2018) . It showed models trained with MAML, first-order MAML and REPTILE (Nichol and Schulman, 2018) outperform strong baseline models such as BERT and MT-DNN (Liu et al., 2015) . Bansal et al. (2019) developed a method LEOPARD that generalizes MAML to handle diverse NLP tasks. They used pre-trained BERT (Devlin et al., 2019) as the underlying task-agnostic base model, coupled with a task-dependent softmax classification parameter generator. The meta trained BERT learns better initial parameters, which helped to reach high accuracy across 17 down steam NLP tasks with very few examples per class. However, successful implementations of metalearning depend on the availability of a diverse set of tasks with plenty of labeled data during meta training. To create meta-learning tasks in a data-efficient manner, a number of papers have tried to explore the idea of unsupervised metalearning. These methods explore to learn representations through automatically constructing tasks from unlabeled dataset and utilize learned representation functions for specific task prediction. Hsu et al. (2018) proposed to leverage clustering embeddings to construct tasks from unlabeled data and then apply meta-learning method for explicitly optimizing for adapting to new tasks. Khodadadeh et al. (2020) proposed to sample objects with synthetic labels from the latent space and generate meta-tasks using generative models. In the domain of natural language processing, Bansal et al. (2020b) proposed Subset Masked Language Modeling Tasks (SMLMT), which automatically construct self-supervised tasks by masking out certain tokens from sentences as labels to create few shots classification tasks from unlabeled data. The study showed that meta training with these diverse unsupervised tasks can prevent over-fitting to specific supervision tasks, leading to better generalization than pre-training language-model followed by finetuning. In this study, we focus on cross-domain few shot classification with the goal to investigate whether we can meta train a large pre-trained language model (e.g., BERT) in a semi-supervised fashion without access to a large number of labeled data or meta training tasks. The resulting representation should generalize and adapt well to a new domain, and provide clear separations between indomain and out-of-scope (OOS) examples (Zhang et al., 2020) . Our base meta learner consists of an embedding function (e.g., BERT) and ProtoNet (Snell et al., 2017) as the general supervised classifier, which can be fine-tuned either using the supervised N -way K-shot classification tasks (supervised meta training) or together with the selfsupervised SMLMT tasks (semi-supervised meta training). We compares classifiers with supervised meta-training against classifiers trained without the diverse meta training tasks. We then compare the semi-supervised meta-learner with the supervised approach without adding additional labeled data. The resulting text representations will be evaluated in terms of their few-shot generalization accuracy, their capability to detect OOS examples, and their ability to adapt when more training examples are included. While Bansal et al. (2020b) focuses on the crossproblem transfer capability of SMLMT trained with a general-purpose corpus like Wikipedia, our study further investigates the cross-domain transfer capability of SMLMT within a problem, i.e., whether additional self-supervised training on the unlabeled data from the domain of interest (e.g., dialogues) can help generalize a seen problem to a new unseen domain. Moreover, SMLMT as a classification task combines well with metric-based meta learners like ProtoNet (Snell et al., 2017) . Compared to optimization-based meta learners like MAML (Finn et al., 2017) , ProtoNet is easier to optimize and scale, has a simpler inductive bias therefore works well for very-few-shot classification problems. These properties are complementary to MAML and can provide good initialization for the latter (Triantafillou et al., 2019) . Methods Model architecture of ProtoNet with BERT Prototypical networks (ProtoNet) (Snell et al., 2017 ) is a metric-based meta-learning approach for the problem of few-shot classification, where an encoder model learns to project samples to an embedding space. In stead of training on batches of training data, meta learners are trained on episodes that contain support set D tr for training and query set D ts for evaluation. The support set will be projected to the embedding space to formulate class prototypes c n , and then classification of the query example is done by computing the softmax of the negative distances between the embedded query and each class prototype. y ts = g(D tr , x ts ) = sof tmax(\u2212d(f \u03b8 (x ts ), c n )) (1) Compared to optimization-based MAML, Pro-toNet is more memory efficient and easy to optimize. Similar to Nearest Neighbor, ProtoNet is a non-parametric method that can be integrated with any embedding function f \u03b8 , where \u03b8 is the learnable meta parameters. This method reflects simpler inductive bias and so far it is limited to classification problems. The design of the embedding function f \u03b8 can vary depending on the NLP applications. For intent classification, we find the best performance can be achieved by integrating the metric-based meta-learning approach ProtoNet with the popular pre-trained model (e.g., BERT (Devlin et 2019), RoBERTa (Liu et al., 2019) ). These large pre-trained language models are quite effective for learning task-agnostic features as well as the taskspecific representations with proper fine-tuning. We take advantage of this transfer learning feature of these pre-trained models and use it as the embedding function f \u03b8 . Here the meta parameters \u03b8 are the weights of the pre-trained model which will be fine-tuned during meta training to learn a taskagnostic representation that should also generalize well to a new domain during meta testing. Subset Masked Language Modeling Tasks With the hope of further improving classification accuracy, we would like to leverage the unlabeled data set through self-supervision during meta training stage. The key for self-supervised metalearning is how to construct self-supervised tasks and how it can be combined with the supervised tasks. Following the Subset Masked Language Modeling Tasks (SMLMT) approach (Bansal et al., 2020a) , we first construct a vocabulary from tokens in all the sentences except those labeled sentences used as hold-out test set and calculate their frequency. To balance the number of tokens and the number of sentences associated to each token, we select tokens appeared from 30 times to 100 times to be labels and then masked these tokens in associated sentences as training samples for SMLMT, with the token as labels. Since SMLMT is also a classification task, the meta-learner introduced in the last section can be used to solve both the selfsupervised and the supervised classification tasks, yielding a new semi-supervised meta training approach to tackle the few shot intent classification problem. Out-of-Scope Evaluation In addition to the standard few shot learning evaluation where the model is only evaluated on samples from in-scope class distribution, a more realistic evaluation setting involves the Out-of-Scope (OOS) class, in which samples come from a different distribution, e.g., random utterances not related to any registered intent class in a dialogue. We adopt the OOS evaluation strategy (Zhang et al., 2020; Larson et al., 2019) which adds an additional OOS class in the meta testing stage, while the meta training stage remains to be the same. A sample is assigned to the OOS class if the probabilistic prediction for the best class is under a specified threshold T with value between 0 and 1. The threshold values is chosen to maximize J in oos (Equation 4 ), the sum of In-Domain-Accuracy (A in , Equation 2 ) and OOS-Recall (R oos , Equation 3). A in = C in /N in (2) where C J in oos = A in + R oos (4) We also report the OOS precision P oos and OOS F1 score F 1 oos for an optimized threshold T . Experiments, Results and Discussion There have been a number of papers that have explored the idea of unsupervised meta-learning, where tasks are constructed automatically from an unlabeled dataset and a meta-learner is pre-trained on these tasks without using any labeled dataset. Can we extend these ideas to the case where we have a small number of supervised meta-training tasks rather than zero meta-training tasks, to construct a semi-supervised meta-learner? We hope to explore answers to the following questions through experiments: (a) Whether meta training effectively improve domain adaptation? and (b) Will the semisupervised approach outperform the supervised meta-learning given the same number of labeled data? CLINC150 Few Shot Intent Classification The CLINC150 (Larson et al., 2019) 3 , increasing the number of labeled samples per class from 20 to 150 improves the test accuracy from 0.832 to 0.864 for 5-way 5-shot learning. CLINC150 with ProtoNet + SMLMT The next research question is whether we can leverage the unlabeled data to improve the meta test accuracy. Here we create the unsupervised tasks following the SMLMT (Bansal et al., 2020b) Here the training \"ways\" is typically selected to be larger than the testing \"ways\" to gain good performance (Snell et al., 2017) . The details on the hyper parameters chosen for this experiment can be found in Table 4 . After running for 800 episodes, the test accuracy is shown in Table 5 . Note the learning rate is reduced by half for every 100 episodes. As suggested by Table 5 supervised meta training on diverse tasks from different domains (5 th and 8 th row) improves generalization to tasks in unseen domains. Figure 1 highlights the meta test accuracy and meta test standard deviation of three different approaches for 5 shots and 10 shots scenarios with BERT as the embedding function. ProtoNet with meta training consistently outperforms the baseline results from the nearest neighbor and Pro-toNet (meta test only), in which no meta training involved. Even though Nearest Neighbor with the BERT encoder is a strong baseline, which achieves 80% for 5 shots and 85% for 10 shots, the ProtoNet improves the baseline by 5 points through meta training on different tasks in different domains. The results also suggest that additional selfsupervised training through SMLMT further improve few-shot generalization if we compare the ProtoNet results to the ProtoNet + SMLMT results. The blue bar in Figure 1 shows the ProtoNet results, which trained using only supervised task, and the orange bar shows the semi-supervised ProtoNet results using both labeled and unlabeled data. Semisupervised ProtoNet improves the ProtoNet results further by an additional 5 points, which achieves 90.6% for K = 5 and 93.9% for K = 10. Note that the the semi-supervised ProtoNet with 50 labeled data outperforms the supervised ProtoNet with 150 labeled data (86.4% in Table 3 ). These results (details see Table 5 ) show that meta training on diverse tasks, especially the SMLMT tasks generated from unlabeled data yield better general-    Varying number of supporting examples K used per task during meta testing also has an effect on the meta testing accuracy. As shown in Figure 2 , increase K from 5 to 15 improves test accuracy of ProtoNet with SMLMT from 85% to 94.5%, and ProtoNet from 85.0% to 91.3% while the performance plateaued for K = 20 (details see Table 7 ). Changing embedding function from BERT to RoBERTa (7 th , 8 th , 9 th rows in Table 5 ) significantly improves the meta test accuracy, suggesting that RoBERTa is a better pre-trained model for intent classification. Results on Out-of-Scope Examples We also evaluate the performance of our meta learners on OOS examples by including an extra OOS class during meta testing. Two embedding functions, i.e., BERT and RoBERTa are evaluated in three settings: no meta training, with supervised meta training and with semi-supervised meta training (with SMLMT). The meta training procedure remains the same as previous setup. During meta testing, we first pick the threshold T (see section 2.3) and then report the F1, precision, recall for OOS and In-domain Accuracy with the selected threshold. While OOS precision and recall usually fluctuates a lot with thresholds, OOS F1 score is a better indicator of OOS accuracy. As shown in 6 ). However, the accuracy gain compared to no meta training (0.723) and supervised-only meta training (0.796) is quite significant. Visualization of Word Importance To have a better understanding of why meta training on semi-supervised tasks yield better generalization capability, we analyze the token importance by plotting the gradients of the prediction with respect to the token embedding for each token as shown in Figure 3 . The token with larger gradient indicates it's more important for the prediction result. Meta training changes the distribution of word importance. For example, for the sentence \"I want to schedule a pto request on march 1 -2\". We see that the meta learner shifts its attention from \"on march\" before training, to the most important word \"schedule pto request\" after training, which helps it to effectively identify this sentence as a pto request intent. The same observation is true for the sentence \"tell me where my flight is scheduled to start boarding\", where the top 3 important tokens has changed from \"me, where, is\" to \"my, flight, is\" after training, leading to the prediction of intent \"flight status\". Therefore, the better generalization is powered by effective representation learning (a pre-trained BERT already yields good representation for intent classification) and also learning to attend to the right words. Conclusion We proposed a semi-supervised meta-learning approach for cross-domain few-shot intent classification by incorporating the representation power of pre-trained language model with the fast adaptation capability of ProtoNet enhanced through selfsupervision. This methodology tackles the realistic few shot learning setting where not enough meta training tasks exist and meta learner trained only on supervised tasks suffers from over-fitting on a small number of labeled data. The experiments have shown that meta learner generalizes better to new domains and predicts more accurately on out-of-scope examples if trained with additional meta training tasks created through self-supervision from unlabeled data. Compared to pre-training language models using self-supervision, the volume of unlabeled data required for our semi-supervised meta training is rather small and the optimization is much easier. However, it effectively improve the few-shot generalization and out-of-scope accuracy by learning a better cross-domain representation and learning to quickly attend to the right word in new domains. While ProtoNet has its limitations due to simpler inductive bias, the resulting presentation can be used to initialize more sophisticated meta learner and extend beyond the classification problems. Future directions include exploring different ways to combine various types of meta learners, different designs of self-supervised tasks as well as validating our algorithms on other datasets. Acknowledgement This work is inspired by our CS330 course project at Stanford. We would like to thank Professor Chelsea Finn for the discussion of research directions and her wonderful lectures on meta-learning.",
    "funding": {
        "defense": 0.0,
        "corporate": 0.0,
        "research agency": 0.0,
        "foundation": 1.9361263126072004e-07,
        "none": 1.0
    },
    "reasoning": "Reasoning: The article does not mention any specific funding sources, including defense, corporate, research agencies, foundations, or any other type of financial support for the conducted research. Therefore, based on the provided text, it is assumed that there is no explicit funding mentioned.",
    "abstract": "Meta-learning aims to optimize the model's capability to generalize to new tasks and domains. Lacking a data-efficient way to create meta training tasks has prevented the application of meta-learning to the real-world few shot learning scenarios. Recent studies have proposed unsupervised approaches to create meta-training tasks from unlabeled data for free, e.g., the SMLMT method (Bansal et al., 2020a) constructs unsupervised multiclass classification tasks from the unlabeled text by randomly masking words in the sentence and let the meta learner choose which word to fill in the blank. This study proposes a semi-supervised meta-learning approach that incorporates both the representation power of large pre-trained language models and the generalization capability of prototypical networks enhanced by SMLMT. The semi-supervised meta training approach avoids overfitting prototypical networks on a small number of labeled training examples and quickly learns cross-domain task-specific representation only from a few supporting examples. By incorporating SMLMT with prototypical networks, the meta learner generalizes better to unseen domains and gains higher accuracy on out-ofscope examples without the heavy lifting of pre-training. We observe significant improvement in few-shot generalization after training only a few epochs on the intent classification tasks evaluated in a multi-domain setting.",
    "countries": [
        "United States"
    ],
    "languages": [
        ""
    ],
    "numcitedby": 4,
    "year": 2021,
    "month": "August",
    "title": "Semi-supervised Meta-learning for Cross-domain Few-shot Intent Classification",
    "values": {
        "building on past work": "Recent developments of large scale pre-trained models, such as BERT (Devlin et al., 2019) , GPT (Brown et al., 2020) and XLNet (Yang et al., 2020) , have significantly advanced the natural language processing (NLP) techniques. Recent studies (Brown et al., 2020; Bansal et al., 2019; Dou et al., 2019) have demonstrated that these large language models have the potential to be few shot learners, i.e., capable of adapting to a new task or a new domain by training only on a few examples with the aid of meta-learning. Hsu et al. (2018) proposed to leverage clustering embeddings to construct tasks from unlabeled data and then apply meta-learning method for explicitly optimizing for adapting to new tasks. Khodadadeh et al. (2020) proposed to sample objects with synthetic labels from the latent space and generate meta-tasks using generative models. In the domain of natural language processing, Bansal et al. (2020b) proposed Subset Masked Language Modeling Tasks (SMLMT), which automatically construct self-supervised tasks by masking out certain tokens from sentences as labels to create few shots classification tasks from unlabeled data.",
        "novelty": "This study proposes a semi-supervised meta-learning approach that incorporates both the representation power of large pre-trained language models and the generalization capability of prototypical networks enhanced by SMLMT. We observe significant improvement in few-shot generalization after training only a few epochs on the intent classification tasks evaluated in a multi-domain setting. Dou et al. While Bansal et al.",
        "performance": "Note that the the semi-supervised ProtoNet with 50 labeled data outperforms the supervised ProtoNet with 150 labeled data (86.4% in Table 3 ). Changing embedding function from BERT to RoBERTa (7 th , 8 th , 9 th rows in Table 5 ) significantly improves the meta test accuracy, suggesting that RoBERTa is a better pre-trained model for intent classification. The experiments have shown that meta learner generalizes better to new domains and predicts more accurately on out-of-scope examples if trained with additional meta training tasks created through self-supervision from unlabeled data. While ProtoNet has its limitations due to simpler inductive bias, the resulting presentation can be used to initialize more sophisticated meta learner and extend beyond the classification problems."
    }
}