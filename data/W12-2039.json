{
    "article": "There is a rise in interest in the evaluation of meaning in real-life applications, e.g., for assessing the content of short answers. The approaches typically use a combination of shallow and deep representations, but little use is made of the semantic formalisms created by theoretical linguists to represent meaning. In this paper, we explore the use of the underspecified semantic formalism LRS, which combines the capability of precisely representing semantic distinctions with the robustness and modularity needed to represent meaning in real-life applications. We show that a content-assessment approach built on LRS outperforms a previous approach on the CREG data set, a freely available corpus of answers to reading comprehension exercises by learners of German. The use of such a formalism also readily supports the integration of notions building on semantic distinctions, such as the information structuring in discourse, which we show to be useful for content assessment. Introduction There is range of systems for the evaluation of short answers. While the task is essentially about evaluating sentences based on their meaning, the approaches typically use a combination of shallow and deep representations, but little use is made of the semantic formalisms created by theoretical linguists to represent meaning. One of the reasons for this is that semantic structures are difficult to derive because of the complex compositionality of natural language. Another difficulty is that form errors in the input create problems for deep processing, which is required for extracting semantic representations. On the other hand, semantic representations have the significant advantage that they on the one hand abstract away from variation in the syntactic realization of the same meaning and on the other hand clearly expose those distinctions which do make a difference in meaning. For example, the difference between dog bites man and man bites dog is still present in deeper syntactic or semantic representations, while semantic representations abstract way from meaning-preserving form variation, such as the active-passive alternation (dog bites manman was bitten by dog). This suggests that sufficiently robust approaches using appropriate semantic formalisms can be useful for the evaluation of short answers. In this paper, we explore the use of Lexical Resource Semantics (Richter and Sailer, 2003) , one of the underspecified semantic formalisms combining the capability of precisely representing semantic distinctions with the robustness and modularity needed to represent meaning in real-life applications. Specifically, we address the task of evaluating the meaning of answers to reading comprehension exercises. We will base our experiments on the freely available data set used for the evaluation of the CoMiC-DE system (Meurers et al., 2011) , which does not use semantic representations. The data consists of answers to reading comprehension exercise written by learners of German together with questions and corresponding target answers. Related Work There are several systems which assess the content of short answers. Mitchell et al. (2002) use handcrafted patterns which indicate correct answers to a question. Similarly, Nielsen et al. (2009) use manually annotated word-word relations or \"facets\". Pulman and Sukkarieh (2005) use machine learning to automatically find such patterns. Other systems evaluate the correctness of answers by comparing them to one or more manually annotated target answers. C-Rater (Leacock and Chodorow, 2003) and the system of Mohler et al. (2011) compare the syntactic parse to the parse of target answers. A comparison of a range of content assessment approaches can be found in Ziai et al. (2012) . The work in this paper is most similar to a line of work started by Bailey and Meurers (2008) , who present a system for automatically assessing answers to reading comprehension questions written by learners of English. The basic idea is to align the student answers to a target answer using a parallel approach with several levels on which words or chunks can be matched to each other. Classification is done by a machine learning component. The CoMiC-DE system for German is also based on this approach (Meurers et al., 2011) . In terms of broader context, the task is related to the research on Recognizing Textual Entailment (RTE) (Dagan et al., 2006) . In particular, alignment (e.g., MacCartney et al., 2008 , Sammons et al., 2009) and graph matching approaches (Haghighi et al., 2005 , Rus et al., 2007) are broadly similar to our approach. 3 General Setup Empirical challenge: CREG Our experiments are based on the freely available Corpus of Reading comprehension Exercises in German (CREG, Ott et al., 2012) . It consists of texts, questions, target answers, and corresponding student answers written by learners of German. For each student answer, two independent annotators evaluated whether it correctly answers the question. Answers were only assessed with respect to meaning; the assessment is in principle intended to be independent of grammaticality and orthography. The task of our system is to decide which answers correctly answer the given question and which do not. Formal basis: Lexical Resource Semantics Lexical Resource Semantics (LRS) (Richter and Sailer, 2003) is an underspecified semantic formalism which embeds model-theoretic semantic languages like IL or Ty2 into constraint-based typed feature structure formalisms as used in HPSG. It is formalized in the Relational Speciate Reentrancy Language (RSRL) (Richter, 2000) . While classical formal semantics uses fully explicit logical formulae, the idea of underspecified formalisms such as LRS is to derive semantic representations which are not completely specified and subsume a set of possible resolved expressions, thus abstracting away from ambiguities, in particular, but not exclusively, scope ambiguities. As an example for the representations, consider the ambiguous example (1) from the CREG corpus. The LRS representation of ( 1 ) is shown in Figure 1 , where INCONT (INTERNAL CONTENT) encodes the core semantic contribution of the head, EXCONT (EXTERNAL CONTENT) the semantic representation of the sentence, and PARTS is a list containing the subterms of the representation. \uf8ee \uf8ef \uf8ef \uf8ef \uf8ef \uf8ef \uf8ef \uf8ef \uf8ef \uf8ef \uf8f0 INCONT haben(e) EXCONT A PARTS A, haben(e), \u2200x 1 (B \u2192 C), zimmer(x 1 ), \u2203x 2 (D \u2227 E), \u00ac F, dusche(x 2 ), subj(e,x 1 ), obj(e,x 2 ) \u2203e(haben(e) \u2227 subj(e,x 1 ) \u2227 obj(e,x 2 ) The representation also includes a set of subterm constraints, visualized as a dominance graph at the bottom of the figure. The example (1) has several readings, which is reflected in the fact that the relative scope of the two quantifiers and the negation is not specified. The different readings of the sentence can be obtained by identifying each of the meta-variables A, . . . , F with one of the subformulas. Meta-variables are labels that indicate where a formula can be plugged in; they are only part of the underspecified representation and do not occur in the resolved representation. \uf8f9 \uf8fa \uf8fa \uf8fa \uf8fa \uf8fa \uf8fa \uf8fa \uf8fa \uf8fa \uf8fb E x2(D & E) (haben ( This illustrates the main strengths of an underspecified semantic formalism such as LRS for practical applications. All elements of the semantic representation are explicitly available on the PARTS list, with dominance constraints and variable bindings providing separate control over the structure of the representation. The underspecified nature of LRS also supports partial analyses for severely ill-formed input or fragments, which is problematic for classical approaches to semantic compositionality such as Montague semantics (Montague, 1973) . Another advantage of LRS as an underspecified formalism is that it abstracts away from the computationally costly combinatorial explosion of possible readings of ambiguous sentences, yet it also is able to represent fine-grained semantic distinctions which are difficult for shallow semantic methods to capture. Our general approach In a first step, LRS representations for the student answer, the target answer, and the question are automatically derived on the basis of the part-of-speech tags assigned by TreeTagger (Schmid, 1994) and the dependency parses by MaltParser (Nivre and Hall, 2005) in the way discussed in Hahn and Meurers (2011) . In this approach, LRS structures are derived in two steps. First, surface representations are mapped to syntax-semantics-interface representations, which abstract away from some form variation at the surface. In the second step, rules map these interface representations to LRS representations. The approach is robust in that it always results in an LRS structure, even for ill-formed sentences. Our system then aligns the LRS representations of the target answer and the student answer to each other and also to the representation of the question. Alignment takes into account both local criteria, in particular semantic similarity, and global cri-teria, which measure the extent to which the alignment preserves structure on the level of variables and dominance constraints. The alignments between answers and the question are used to determine which elements of the semantic representations are focused in the sense of Information Structure (von Heusinger, 1999; Kruijff-Korbayov\u00e1 and Steedman, 2003; Krifka, 2008) , an active field of research in linguistics addressing the question how the information in sentences is packaged and integrated into discourse. Overall meaning comparison in our approach is then done based on a set of numerical scores computed from potential alignments and their quality. Given its LRS basis, we will call the system CoSeC-DE (Comparing Semantics in Context). Aligning Meaning Representations The alignment is done on the level of the PARTS lists, on which all elements of the semantic representation are available: Definition 1. An alignment a between two LRS representations S and T with PARTS lists p n 1 and q m 1 is an injective partial function from {1,...,n} to {1,...,m}. Requiring a to be injective ensures that every element of one representation can be aligned to at most one element of the other representation. Note that this definition is symmetrical in the sense that the direction can be inverted simply by inverting the injective alignment function. To automatically derive alignments, we define a maximization criterion which combines three factors measuring different aspects of alignment quality. In addition to i) the similarity of the alignment links, the quality Q of the alignment a takes into account the structural correspondence between aligned elements by evaluating the consistency of alignments ii) with respect to the induced variable bindings \u03b8 and, and iii) with respect to dominance constraints: Q(a, \u03b8|S, T ) = linksScore(a|S, T ) \u2022 variableScore(\u03b8) \u2022 dominanceScore(a|S, T ) (1) The approach thus uses a deep representation abstracting away from the surface, but the meaning comparison approach on this deep level is flat, yet at the same time is able to take into account structural criteria. In consequence, the approach is modular because it uses the minimal building blocks of semantic representations, but is able to make use of the full expressive power of the semantic formalism. Evaluating the Quality of Alignment Links The quality of an alignment link between two expressions is evaluated by recursively evaluating the similarity of their components. In the base case, variables can be matched with any variable of the same semantic type: sim(x \u03c4 , y \u03c4 ) = 1 Meta-variables can be matched with any metavariable of the same semantic type: sim(A \u03c4 , B \u03c4 ) = 1 For predicates with arguments, both the predicate name and the arguments are compared: sim(P 1 (a k 1 ), P 2 (b k 1 )) = sim(P 1 , P 2 ) \u2022 k i=1 sim(a i , b i ) (2) If the predicates have different numbers of arguments, similarity is zero. Linguistically well-known phenomena where the number of arguments of semantically similar predicates differ do not cause a problem for this definition, because semantic roles are linked to the verbal predicate via grammatical function terms such as subj and obj predicating over a Davidsonian event variable, as in Figure 1 . 1  For formulas with generalized quantifiers, the quantifiers, the variables, the scopes and the restrictors are compared: sim(Q 1 x 1 (\u03c6 \u2022 \u03c8), Q 2 x 2 (\u03c3 \u2022 \u03c4 )) = sim(Q 1 , Q 2 ) \u2022 sim(x 1 , x 2 ) \u2022sim(\u03c6, \u03c3) \u2022 sim(\u03c8, \u03c4 ) (3) Lambda abstraction is dealt with analogously. The similarity sim(P 1 , P 2 ) of names of predicates and generalized quantifiers takes into account several sources of evidence and is estimated as the maximum of the following quantities: As a basic similarity, the Levenshtein distance normalized to the interval [0,1] (with 1 denoting identity and 0 total dissimilarity) is used. This accounts for the high frequency of spelling errors in learner language. Synonyms in GermaNet (Hamp and Feldweg, 1997) receive the score 1. For numbers, the (normalized) difference |n 1 \u2212n 2 | max(n 1 ,n 2 ) is used. For certain pairs of dissimilar elements which belong to the same category, constant costs are defined. This encourages the system to align these elements, unless the structural factors, i.e., the quality of the unifier and the consistency with dominance constraints, discourage this. Such constants are defined for pairs of grammatical function terms. Other constants are defined for pairs of numerical terms and for pairs of terms encoding affirmative and negative natural language expressions and logical negation. Having defined how to compute the quality for single alignment links, we still need to define how to compute the combined score of the alignment links, which we define to be the sum of the qualities of the links: linksScore(a|p n 1 , q m 1 ) = n k=1 sim(p k , q a(k) ) if a(k) is defined, \u00b5 N U LL else. (4) The quality of a given overall alignment thus is determined by the quality of the alignment links of the PARTS elements which are aligned. For those PARTS elements not aligned, a constant cost \u00b5 N U LL must be paid, which, however, may be smaller than a costly alignment link in another overall alignment. Evaluating Unifiers Alignments between structurally corresponding semantic elements should be preferred. For situations in which they structurally do not correspond, this may have the effect of dispreferring the pairing of elements which in terms of the words on the surface are identical or very similar. Consider the sentence pair in (2), where Frau in (2a) syntactically corresponds to Mann in (2b). On the level of the semantic representation, this is reflected in the correspondence between the variables x 1 and y 1 , both of which occur as arguments of subj, as shown in Figure 2 . Our solution to capture this distinction is to use the concept of a unifier, well-known from logic programming. A unifier for terms \u03c6, \u03c8 is a substitution \u03b8 such that \u03c6\u03b8 = \u03c8\u03b8. Every alignment induces a unifier, which unifies all variables which are matched by the alignment. The alignment in Figure 2 (without the dotted links) induces the unifier \u03b8 1 = [(x 1 , y 1 ) \u2192 z 1 ; (x 2 , y 2 ) \u2192 z 2 ]. If links between the matching predicates mann and frau, respectively, are added, one also has to unify x 1 with y 2 and x 2 with y 1 and thus obtains the unifier \u03b8 2 = [(x 1 , x 2 , y 1 , y 2 ) \u2192 z]. Intuitively, a good unifier unifies only variables which correspond to the same places in the semantic structures to be aligned. In the case of Figure 2 , choosing an alignment including the dotted links results in the unifier \u03b8 2 which unifies x 1 and x 2 -yet they are structurally different, with one belonging to the subject and the other one to the object. In general, it can be expected that an alignment which preserves the structure will not unify two distinct variables from the same LRS representation, since they are known to be structurally distinct. So we want to capture the information loss resulting from unification. This intuition is captured by (5), which answers the following question: Given some variable z in a unified expression, how many additional bits do we need on average 2 to encode the original pair of variables x, y in the PARTS lists p and q, respectively? H(\u03b8) = 1 Z p,q z\u2208Ran(\u03b8) W \u03b8 (z) log(W \u03b8 (z)) (5) where W \u03b8 (z) = |{x \u2208 V ar(p)|x\u03b8 = z}| \u2022 |{y \u2208 V ar(q)|y\u03b8 = z}| (6) Z p,q = |V ar(p)| \u2022 |V ar(q)| (7) The value of a unifier \u03b8 is then defined as follows: variableScore(\u03b8) = 1 \u2212 H(\u03b8) \u0124 k ( 8 ) where k is a numerical parameter with 0 \u2264 k \u2264 1 and \u0124 is a (tight) upper bound on H(\u03b8) obtained by evaluating the worst unifier, i.e., the unifier that unifies all variables \u0124 = log(Z p,q ). Evaluating consistency with dominance constraints While evaluating unifiers ensures that alignments preserve the structure on the level of variables, it is also important to evaluate their consistency with the dominance structure of the underspecified semantic representations, such as the one we saw in Figure 1 . Consider the following pair: ( While the words and also the PARTS lists of the sentences are identical, they clearly differ in meaning. Figure 3 on the next page shows the LRS dominance graphs for the two sentences together with an alignment between them. The semantic difference between the two sentences is reflected in the position of the negation in the dominance graph: while it dominates kommen(e 2 ) \u2227 subj(e 2 ,hans) in (3a), it dominates kommen(f 1 ) \u2227 subj(f 1 ,peter) in (3b). To account for this issue, we evaluate the consistency of the alignment with respect to dominance constraints. An alignment a is optimally consistent with respect to dominance structure if it defines an isomorphism between its range and its domain with respect to the relation 'is dominated by'. Figure 3 shows an alignment which aligns all matching elements in (3b) and (3a). The link between the negations violates the isomorphism requirement: the negation dominates kommen(e 2 ) \u2227 subj(e 2 ,hans) in (3a), while it does not dominate the corresponding elements in (3b). An optimally consistent alignment will thus leave the negations unaligned. Unaligned negations can later be used in the overall meaning comparison as strong evidence that the sentences do not mean the same. dominanceScore measures how \"close\" a is to defining an isomorphism. We use the following simple score, which is equal to 1 if and only if a defines an isomorphism: dominanceScore(a|S, T ) = 1 1 + i,j\u2208Dom(a) \u03ba \uf8eb \uf8ec \uf8ec \uf8ed p i p j , p i p j , q a(i) q a(j) , q a(i) q a(j) \uf8f6 \uf8f7 \uf8f7 \uf8f8 (9) where \u03ba is a function taking four truth values as its arguments. It measures the extent to which the isomorphism requirement is violated by an alignment. \u03ba(t 1 , t 2 , t 1 , t 2 ) is defined as 0 because there is no violation if the dominance relation between p i and p j is equal to that between the elements they are aligned with, q a(i) and q a(j) . For other combinations of truth values, \u03ba should be set to values greater than zero, empirically determined on a development set. Finding the best alignment Because of the use of non-local criteria in the maximization criterion Q(a, \u03b8|S, T ) defined in equation ( 1 ), an efficient method is needed to find the alignment maximizing the criterion. We exploit the struc-ture inherent in the set of possible alignments to apply the A* algorithm (Russel and Norvig, 2010) . We first generalize the notion of an alignment. Definition 2. A partial alignment of order i is an index i together with an alignment which does not have alignment links for any p j with j > i. A partial alignment can be interpreted as a class of alignments which agree on the first i elements. Definition 3. The refinements \u03c1(a) of the partial alignment a (of order i) are the partial alignments b such that (1) b is of order i + 1, and (2) a and b agree on {1, ..., i}. Intuitively, refinements of an alignment of order i are obtained by deciding how to align element i + 1. \u03c1 induces a tree over the set of partial alignments, whose leaves are exactly the complete alignments. A simple optimistic estimate for the value of all complete descendants of an alignment a of order i is given by the following expression: optimistic(a, \u03b8|S, T ) = variableScore(\u03b8) \u2022dominanceScore(a, S, T ) \u2022(linksScore i (a, \u03b8|p, q)+ n k=i+1 heuristic(k, a, p n 1 , q m 1 )) (10) where linksScore i is the sum in (4) restricted to 1 \u2264 k \u2264 i, and heuristic(k, a, p n 1 , q m 1 ) is 0 if p k is aligned and a simple, optimistic estimate for the quality of the best possible alignment link containing p k if p k is unaligned. It is estimated as the maximum of \u00b5 N U LL and max{sim(p k , q j ) | q j unaligned}. The estimate in ( 10 ) is optimistic in the sense that it provides an upper bound on the values of all complete alignments below a. It defines a monotone heuristic and thus allows complete and optimal search using the A* algorithm. To obtain an efficient implementation, additional issues such as the order of elements in the PARTS lists were taken care of. As they do not play a role for the conceptualization of our approach, they are not discussed here. The crucial part at this point of the discussion is that the A* search can determine the best alignment between two PARTS lists. As mentioned in the overview in section 3.3, we compute three such (F & G) E e2 (C & D) E e1 kommen(e1) subj(e1,peter) kommen(e2) subj(e2,hans) A & B E (M & N) E f2 (K & L) E f1 kommen(f1) subj(f1,peter) kommen(f2) subj(f2,hans) H & I J Figure 3 : Alignment between the dominance graphs of (3a) and (3b). The red dotted link violates isomorphism. alignments: between the student and the target answer, between the question and the student answer, and between the question and the target answer. From Alignment to Meaning Comparison Based on the three alignments computed using the just discussed algorithm, we now explore different options for computing whether the student answer is correct or not. We discuss several alternatives, all involving the computation of a numerical score based on the alignments. For each of these scores, a threshold is empirically determined, over which the student answer is considered to be correct. Basic Scores The simplest score, ALIGN, is computed by dividing the alignment quality Q between the student answer and the target answer as defined in equation ( 1 ) by the number of elements in the smaller PARTS list. Two other scores are computed based on the number of alignment links between student and target answer, which for the EQUAL-Student score is divided by the number of elements of the PARTS list of the student answer, and for the EQUAL-Target score by those of the target answer. For dealing with functional elements, i.e., predicates like subj, obj, quantifiers and the lambda operator, we tried out three options. The straight case is the one mentioned above, treating all elements on the PARTS list equally (EQUAL). As a second option, to see how important the semantic relations between words are, and how much is just the effect of the elements themselves, we defined a score which ignores functional elements (IGNORE). A third possibility is to weight elements so that functional and non-functional ones differ in impact (WEIGHTED). Each of the three scores (EQUAL, IGNORE, WEIGHTED) is either divided by the number of elements of the PARTS list of the student answer or the target, resulting in six scores. In addition, three more scores result from computing the average of the student and target answer scores. Information Structure Scores Basing meaning comparison on actual semantic representation also allows us to directly take into account Information Structure as a structuring of the meaning of a sentence in relation to the discourse. Bailey and Meurers (2008) , Meurers et al. (2011), and Mohler et al. (2011) showed that excluding those parts of the answer which are mentioned (given) in the question greatly improves classification accuracy. Meurers et al. (2011) argue that the relevant linguistic aspect is not whether the material was mentioned in the question, but the distinction between focus and background in Information Structure (Krifka, 2008) . The focus essentially is the information in the answer which selects between the set of alternatives that the question raises. This issue becomes relevant, e.g., in the case of 'or' questions, where the focused information determining whether the answer is correct is explicitly given in the question. This is illustrated by the question in ( 4 ) with target answer (5a) and student answer (5b), from the CREG corpus. While all words in the answers are mentioned in the question, the part of the answers which actually answer the question are the focused elements shown in boldface. Neubau. new.building To realize a focus-based approach, one naturally needs a component which automatically identifies the focus of an answer in a question-answer pair. As a first approximation, this currently is implemented by a module which marks the elements of the PARTS lists of the answers for information structure. Elements which are not aligned to the question are marked as focused. Furthermore, in answers to 'or' questions, it marks as focused all elements which are aligned to the semantic contribution of a word belonging to one of the alternatives. 'Or' questions are recognized by the presence of oder ('or') and the absence of a wh-word. While previous systems simply ignored all words given in the question during classification, our system aligns all elements and recognizes givenness based on the alignments. Therefore, givenness is still recognized if the surface realization is different. Furthermore, material which incidentally is also found in the question, but which is structurally different, is not assumed to be given. Scores using information structure were obtained in the way of the BASIC scores but counting only those elements which are recognized as focused (FOCUS). For comparison, we also used the same scores with givenness detection instead of focus detection, i.e., in these scores, all elements aligned to the question were excluded (GIVEN) . Annotating semantic rather than surface representations for information structure has the advantage that the approach can be extended to cover focusing of relations in addition to focusing of entities. The general comparison approach also is compatible with more sophisticated focus detection techniques capable of integrating a range of cues, including syntactic cues and specialized constructions such as clefts, or prosodic information for spoken language answers -an avenue we intend to pursue in future research. Dissimilar score We also explored one specialized score paying particular attention to dissimilar aligned elements, as mentioned in section 4.1. Where a focused number is aligned to a different number, or a focused polarity expression is aligned to the opposite polarity, or a logical negation is not aligned, then 0 is returned as score, i.e., the student answer is false. In all other cases, the DISSIMILAR score is identical to the WEIGHTED-Average FOCUS score, i.e., the score based on the average of the student and target scores with weighting and focus detection. Experiments Corpus We base the experiments on the 1032 answers from the CREG corpus which are used in the evaluation of the CoMiC-DE system reported by Meurers et al. (2011) . The corpus is balanced, i.e., the numbers of correct and of incorrect answers are the same. It contains only answers where the two human annotators agreed on the binary label. Setup The alignment algorithm contains a set of numerical parameters which need to be determined empirically, such as \u00b5 N U LL and the function \u03ba. In a first step, we optimized these parameters and the weights used in the WEIGHTED scores using grid search on a development set of 379 answers. These answers are from CREG, but do not belong to the 1032 answers used for testing. We used the accuracy of the DISSIMILAR score as performance metric. In our experiment, we explored each score separately to predict which answers are correct and which not. For each score, classification is based on a threshold which is estimated as the arithmetic mean of the average score of correct and the average score of incorrect answers. Training and testing was performed using the leave-one-out scheme (Weiss and Kulikowski, 1991) . When testing on a particular answer, student answers answering the same question were excluded from training. Results Figure 4 shows the accuracy results obtained in our experiments together with the result of CoMiC-DE on the same dataset. With an accuracy of up to 86.3%, the WEIGHTED-Average FOCUS score outperform the 84.6% reported for CoMiC-DE (Meurers et al., 2011) on the same dataset. This is remarkable given that CoMiC-DE uses several (but comparably shallow) levels of linguistic abstraction for finding alignment links, whereas our approach is exclusively based on the semantic representations.  The fact that WEIGHTED-Average outperforms the IGNORE-Average scores shows that the inclusion of functional element (i.e., predicates like subj, obj), which are not available to approaches based on aligning surface strings, improves the accuracy. 3  On the other hand, the lower performance of EQUAL shows that functional elements should be treated differently from content-bearing elements. Of the 13.7% answers misclassified by WEIGHTED-Average FOCUS, 53.5% are false negatives and 46.5% are false positives. We also investigated the impact of grammaticality on the result by manually annotating a sample of 220 student answers for grammatical well-formedness, 66% of which were ungrammatical. On this sample, grammatical and ungrammatical student answers were evaluated with essentially the same accuracy (83% for ungrammatical answers, 81% for grammatical answers). The decrease in accuracy of the COMBINED score over the best score can be traced to some yes-noquestions which have an unaligned negation but are correct. On the other hand, testing only on answers with focused numbers results in an accuracy of 97%. The performance of GIVEN and FOCUS scores compared to BASIC confirms that information structuring helps in targeting the relevant parts of the answers. Since CoMiC-DE also demotes given material, the better GIVEN results of our approach must result from other aspects than the information structure awareness. Unlike previous approaches, the FO-CUS scores support reference to the material focused in the answers. However, since currently the FOCUS scores only differs from the GIVEN scores for alternative questions, and the test corpus only contains seven answers to such 'or' questions, we see no serious quantitative difference in accuracy between the FOCUS and GIVENNESS results. While the somewhat lower accuracy of the score ALIGN shows that the alignment scores are not sufficient for classification, the best-performing scores do not require much additional computation and do not need any information that is not in the alignments or the automatic focus annotation. Future Work The alert reader will have noticed that our approach currently does not support many-to-many alignments. As is known, e.g., from phrase-based machine translation, this is an interesting avenue for dealing with non-compositional expressions, which we intend to explore in future work. The alignment approach can be adapted to such alignments by adding a factor measuring the quality of many-tomany links to linkScore (4) and optimistic (10). Conclusion We presented the CoSeC-DE system for evaluating the content of answers to reading comprehension questions. Unlike previous content assessment systems, it is based on formal semantics, using a novel approach for aligning underspecified semantic representations. The approach readily supports the integration of important information structural differences in a way that is closely related to the information structure research in formal semantics and pragmatics. Our experiments showed the system to outperform our shallower multi-level system CoMiC-DE on the same CREG-1032 data set, suggesting that formal semantic representations can indeed be useful for content assessment in real-world contexts. Acknowledgements We are grateful to the three anonymous BEA reviewers for their very encouraging and helpful comments.",
    "abstract": "There is a rise in interest in the evaluation of meaning in real-life applications, e.g., for assessing the content of short answers. The approaches typically use a combination of shallow and deep representations, but little use is made of the semantic formalisms created by theoretical linguists to represent meaning. In this paper, we explore the use of the underspecified semantic formalism LRS, which combines the capability of precisely representing semantic distinctions with the robustness and modularity needed to represent meaning in real-life applications. We show that a content-assessment approach built on LRS outperforms a previous approach on the CREG data set, a freely available corpus of answers to reading comprehension exercises by learners of German. The use of such a formalism also readily supports the integration of notions building on semantic distinctions, such as the information structuring in discourse, which we show to be useful for content assessment.",
    "countries": [
        "Germany"
    ],
    "languages": [
        "German",
        "English"
    ],
    "numcitedby": "34",
    "year": "2012",
    "month": "June",
    "title": "Evaluating the Meaning of Answers to Reading Comprehension Questions: A Semantics-Based Approach"
}