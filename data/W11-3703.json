{
    "article": "Most recent studies on emotion analysis and detection focus on how writers express their emotions through textual information. In this paper, we model emotion generation on the Plurk microblogging platform from both writer and reader perspectives. Support Vector Machine (SVM)-based classifiers are used for emotion prediction. To better model emotion generation on such a social network, three types of non-linguistic features are used: social relation, user behavior, and relevance degree, along with textual features. We found that each of the non-linguistic features can be combined with linguistic features to achieve higher performance. In fact, the combination of linguistic, social, and behavioral features performs the best. Introduction Emotions express humans' feeling and experiences on some subject matters. They are typically recognized in text, speech, body gestures, and some visual information. Emotion mining is crucial for many applications, including customer care (Gupta, Gilbert, and Fabbrizio 2010) , sale prediction (Liu, et al. 2007 ), game animation (Bernhaupt et al. 2007) , and robot simulation (Becker, Kopp, and Wachsmuth 2004) . Capturing people's feelings, predicting their reactions to events, and generating suitable emotions are typical tasks in emotion mining. Emotion-tagged corpora are indispensable for emotion modeling. Recently, the social media known as weblogs, or blogs, encourage users to share their emotions through writing. For example, bloggers regularly use emoticons to express personal feelings in their written posts. To encourage increased reader interaction, some news media, e.g., Yahoo! Kimo News, provide a vot-ing mechanism for news readers to express their feelings about news articles they've just read. The collection of blogger posts and news reader responses forms writer and reader emotiontagged corpora, respectively, facilitating writer emotion and reader emotion mining. Previous studies (e.g., Yang, Lin, and Chen 2007a; Yang, Lin, and Chen 2007b; Yang, Lin, and Chen 2008) have used an emotion-tagged weblog corpus to investigate the ways in which people express their emotions, trying to detect writers' affective status with textual contents they have written. While these studies aimed to perform emotion analysis and detection from the writer's perspective, a few papers have studied reader emotion generation (Lin, Yang, and Chen 2007; Lin and Chen 2008; Lin, Yang, and Chen, 2008 ) using an emotion-tagged news corpus, modeling how readers react to articles on news websites. To study how writer emotion affects readers' feelings, Yang, Lin and Chen (2009) used the Yahoo! Kimo Blog and Yahoo! Kimo News to produce a dataset annotated with both writer and reader emotions. They constructed a documentlevel reader-emotion classifier using the Yahoo! Kimo News corpus, and applied the resulting classifier on the Yahoo! Kimo Blog corpus. In this way, a new blog corpus labeled with both writer and reader emotions was obtained. The major problem with the above approach is that the reader emotion tagging on the writer corpus depends on classification performance. Plurk, a unique social network and microblogging platform, provides a new opportunity in which a dialogue consists of posts and corresponding replies. A poster begins by publishing a post along with an emotion, then a replier responds to the post and labels it with an emotion symbol. The replier serves as a reader, and also as a writer when the reply has been attached. Therefore, the original poster has only a writer emotion, but the replier has both a writer emotion and a reader emotion. In this paper, we model emotion mining from the writer perspective, reader perspective, and the combined writer and reader perspective. To collect data including both writers' and readers' emotional information, we extracted messages from Plurk, ending up with 50,000 conversations in the dataset. Support Vector Machine (SVM) was chosen as classifiers to predict repliers' emotion. Like other related studies, this experiment included textual features for training and testing. Since the conversations collected present communication and interaction between social network users, some non-linguistic features were taken into account. As a result, 4 types of features are used, including linguistic features, social relation, user behavior, and relevance degree. The rest of this paper is organized as follows. Section 2 discusses previous work related to emotion studies. Section 3 introduces the Plurk social network and describes the extraction of the dataset. Section 4 discusses how emotions from reader and writer perspectives are analyzed. Section 5 describes the SVM classifier, along with the feature set. Section 6 details the performance of the prediction tasks, and discusses and compares the usefulness of different types of features. The final section concludes the paper. Mishne (2005) adopts mood taggings in Live-Journal articles to train a mood classifier on document-level with SVM. Mishne and Rijke (2006) use a blog corpus to identify the intensity of community mood during some given time intervals. Jung, Choi, and Myaeng (2007) also focus on the mood classification problem in LiveJournal. Related Work Yang, Lin, and Chen (2007a) use Yahoo! Kimo Blog as corpora to build emotion lexicons. A collocation model is proposed to learn emotion lexicons from weblog articles. Emotion classification at sentence level is experimented by using the mined lexicons to demonstrate their usefulness. Yang, Lin, and Chen (2008) further investigate the emotion classification of weblog corpora using SVM and conditional random field (CRF) machine learning techniques. The emotion classifiers are trained at the sentence level and applied to the document level. Their experiments show that CRF classifiers outperform SVM classifiers. Lin, Yang and Chen (2007) pioneer reader emotion analysis with an emotion-tagged Yahoo! Kimo news corpus. They classify documents into reader emotion categories with SVM and Na\u00efve Bayes classifiers (Lin, Yang and Chen, 2008) . Besides classification, Lin and Chen (2008) propose pairwise loss minimization (PLM) and emotional distribution regression (EDR) to rank reader emotions. They show that EDR is better at predicting the most popular emotion, but PLM produces ranked lists that have higher correlation with the correct lists. Yang, Lin, and Chen (2009) further introduce the application of emotion analysis from both the writer's and reader's perspectives. The relationships between writer and reader emotions are discussed in their works. Besides long articles, some studies also deal with emotion detection of short messages from microblogs and news headlines. Strapparava and Mihalcea (2007) focus on the emotion classification of news headlines. Go, Huang, and Bhayani (2009) use distant supervision for sentiment classification of Twitter messages. In their study, SVM outperforms Na\u00efve Bayes and Maximum Entropy, and has the accuracy of 82.2%. Sun et al. (2010) focus on the Plurk microblogging platform, using text content and the NTU Sentiment Dictionary to build their feature set. These studies all focus on writer's emotions rather than reader's emotions. Our contributions are different from the others. We employ the emotion tagging of both posters and repliers in Plurk and investigate reader and writer emotion analysis with both linguistic and non-linguistic features using a machine learning approach. The Plurk Dataset The Plurk Social Network Plurk is a web-based social network that allows users to post short messages limited to 140 characters. From this viewpoint, Plurk is similar to Twitter and other microblogging platforms. Unlike Twitter, however, Plurk also acts like an instant messaging system because a user can see replies as soon as they are sent by another user. A post and its replies are grouped within a box on the screen, indicating that they are messages from the same conversation. Every post can be given an optional \"qualifier,\" which is a oneword verb indicating the poster's action or feeling. There are 18 qualifiers, including Loves, Likes, Shares, Gives, Hates, Wants, Wishes, Needs, Will, Hopes, Asks, Has, Was, Wonders, Feels, Thinks, Says, and Is. Figure 1 shows a typical conversation on Plurk. In this conversation, the first line was entered by a poster. He chose \"loves\" as the qualifier, stating that he \"loves the iPod.\" The other messages were entered by other users as replies to the poster. Their messages are followed by graphic emoticons that express their emotions. Plurk provides 78 basic graphic emoticons, and these emoticons are commonly used in users' messages. We choose 35 of the emoticons and categorize them into the positive and negative group. The other 43 are either neutral or cannot be clearly categorized, so we exclude them to minimize uncertainty. Dataset We prepare our dataset from the Plurk platform. In this dataset, there are 50,000 conversations dating from Jun 21, 2008 to Nov 7, 2009, and each of them consists of a post with or without emoticon and a corresponding reply with an emoticon. All the replies have to be the first reply to a post, because this can help us make sure the reply is a response to the original post rather than to other responses. All messages are in Traditional Chinese. We filter out some messages by their qualifiers. For example, we filter out the messages with the \"share\" qualifier, because most \"shares\" are website links or images rather than general text messages. If a message contains an emoticon that is not shown in Figure 2 , it will also be filtered out. Such an emoticon does not present obvious positive or negative emotion, and will not be used in our study. In the dataset, there are 42,115 conversations with a positive reply and 7,885 conversations with a negative reply. These conversations are obtained randomly from the Plurk website, and we think this should reflect their actual distribution on Plurk. For this reason we use this dataset without adjusting the proportion of the two emotion types. The proportion of positive conversations (84.23%) is used as baseline. Reader/Writer Perspective Most related studies focus on the analysis and detection of writer's emotion, since a writer's content has a more direct link to his emotion, and corpora containing writer's emotion are easier to find on the Web. In this paper, we try to model the generation of reader's emotion, and this kind of emotion can be related to the content written by poster, replier, or both. Depending on different perspectives, we have 3 types of models: reader model, writer model, and reader + writer model. Figure 4 shows important components in the modeling: a poster pt and the text T(pt) that pt posts; a replier rp, the text T(rp) used by rp to reply to pt and rp's emotion E(rp); S(pt,rp) denotes the social relationship between pt and rp; B(rp) denotes the behavior of rp; and R(T(pt),T(rp)) denotes the relevance between post T(pt) and reply T(rp). The uses of the components will be discussed in detail in the following. Reader Perspective By looking at a replier's emotion from reader perspective, we can build a reader model. In this model, we assume a replier's emotion is directly generated by reading the poster's message, and then the replier expresses his emotion by using an emoticon in his reply. It is indicated by the model M reader-replier in Figure 4 . That is, E(rp)=M reader-replier (T(pt)), where M reader-replier is a function that maps T(pt) into an emotion. Besides T(pt), we can consider social relationship between rp and pt, and the behavior of rp such that E(rp)=M reader-replier (T(pt), S(pt,rp), B(rp)). Writer Perspective In a conversation, both the poster and the replier produce textual contents. To model emotion generation from writer's perspective, we assume users' emotions are related to their own contents. Thus, we have two types of writer model: poster's writer model and replier's writer model. In our study, we mostly deal with replier's writer model, while poster's writer model is listed for comparison. For replier's writer model, a replier's content is used to predict his own emotion. The model M writer-replier in Figure 4 indicates the generation of a replier's emotion from writer's perspective. That is, E(rp)=M writer-replier (T(rp)), where M writer-replier is a function that maps T(rp) into an emotion. Besides T(rp), we can consider social relationship between rp and pt, and the behavior of rp such that E(rp)=M writer-replier (T(rp), S(pt,rp), B(rp)). For poster's writer model, a post's content is used to predict his emotion. That is, E(pt)=M writer-poster (T(pt)). Reader and Writer Perspective We combine both reader and writer perspectives, and assume a replier's emotion is related to both poster's content and the replier's own content. Thus, a replier's emotion is predicted using poster's and replier's texts. In this case, E(rp)=M reader-writer (T(pt), T(rp), R(T(pt),T(rp))), where M reader-writer is a function maps T(pt), T(rp), R(T(pt),T(rp)) into an emotion. Besides textual information, we can also introduce social relationship between rp and pt, and the behavior of rp into this function. Emotion Modeling SVM is adopted as classifiers to predict emotion from reader and/or writer perspectives. Besides textual features, we also incorporate non-textual features such as social relation, user behavior, and relevance degree. Text Features (T) Since about 70% of Chinese words are disyllabic, and new words and slangs are commonly used in social media, we use bigrams instead of words as features. Chinese character bigrams in all poster's and/or replier's messages are extracted. We model the relationship between a bigram w and an emotion e as probability P(w|e). A training set is composed of conversations between posters and repliers. A conversation scenario between a poster and a replier is as fol-  In this way, we have three data sets D writer-poster , D reader-replier , and D writer-replier . Here, D writer-poster is composed of all the messages of posters along with their emotions. D reader-replier consists of all the messages which repliers read and emotions they express. D writer-replier denotes a set of messages and emotions that repliers make. These three data sets are used to train P writer-poster , P readerreplier , and P writer-replier , respectively. To apply SVM in the experiments, libSVM is used as the classification tool (Chang and Lin 2001) . The libSVM parameter selection tool found that C=3 and gamma=0.13 yielded the best results. Social Relation (S) The text-based emotion model does not consider the personalization issue. Intuitively, each replier has his own preference. Social relationship between a poster and a replier is the first cue. We measure the social relationship between two users with their interaction degree. The following three features are proposed. S 1 defines an interaction degree between users u 1 and u 2 as their total number of interactions. where D is a multiset of conversations (u 1 , u 2 ), and u 1 and u 2 are poster and replier in the conversation. Feature S 2 considers how often user u 1 posts messages. (2) Where start and end denote the starting day and the ending day of the interaction between user u 1 and u 2 . Here S 2 equals to S 1 divided by the frequency of posts by poster u 1 . We also consider how often a replier posts a reply. S 3 defined as follows captures this idea. (3) User Behavior (B) Individual user behavior is another feature. It models the subjective tendency of a user. The history of a specific replier shows which emotions he tends to express often. defines the negative tendency of user u. (4) where u is a replier, E(u) is the replier's emotion with a value 0 (negative) or 1 (positive). C is the frequency of This indicator does not take the interaction with posters into account. We also consider how often he expresses his positive emotion to a specific poster. This feature is called interactive behavior (B +int ) and is defined as follows. (5) In some cases, replier's behavior history is not available. We use back-off smoothing to deal with this issue. Interactive user behavior after smoothing (B s ) is defined as: (6) where rp is a replier, pt is a poster, and RP is a set of all repliers. We set K 1 and K 2 to 1 in the experiments. Relevance Degree (R) Although a post and its reply are in the same conversation, they are not necessarily on the same topic or fully related to each other. This may affect the use of emoticons, so we also deal with relevance degree. R(T(pt), T(rp)) is defined as follows: R(T(pt), T(rp))= (7) If there exists an anaphoric element or a conjunction in replier's message, then we say the conversation is related and assign relevance degree to 1. Nine anaphoric elements and 43 conjunctions are adopted. Otherwise, we check if the post and the reply overlap. More overlapped words mean more related. We assume the post and the reply have some basic relationship, so (1) that the default relevance degree is set to 0.5. In current design, although the relevance degree is measured based on some linguistic markers, we still call it a non-linguistic feature for comparison with Text feature. Normalization The size of the linguistic feature set is much larger than the three non-linguistic feature sets, so we apply the following vector normalization method to deal with the issue: (8) (9) (10) F is a vector representing a feature set with n features f 1 , f 2 , f 3 , \u2026, f n . To get the normalized F, each f value is divided by the length of F. Thus, we have the normalized F, which is defined as NF above, with features nf 1 , nf 2 , nf 3 , \u2026, nf n. Results and Discussion Classifiers were trained and tested with 10-fold cross-validation. In this section, the results of the models from the three perspectives are shown and discussed. First, we use an individual feature set at a time to compare their performance. The linguistic feature set (T) is used to model replier's emotion generation from three different perspectives. Text Features (T) When performing the prediction task with the reader model and the writer model, 3,000 bigrams from either poster's or replier's messages were used, respectively. For performing the task with the reader + writer model, all the bigrams from both the reader and writer models were used, for a total of 6,000 features. Table 1 shows that the writer model and the reader+writer model achieved much higher performance than the reader model. The performance of the writer model is slightly higher than that of the reader+writer model, but the t-test shows that the difference is insignificant. The performance of the writer model and the read-er+writer model is higher than the baseline (84.23%), while the performance of the reader model is lower than that of the baseline. Interactive user behavior (B +int ) outperformed non-interactive user behavior (B -int ), and achieved performance (86.25%) higher than the baseline. After applying back-off smoothing, the interactive user behavior (B s ) proved to achieve even higher performance (86.93%), which is the best among all non-linguistic feature sets. Social relation (S) and relevance degree (R) performed lower than the baseline, with relevance degree (R) performing the worst. Most replies should be related to their posts since they are in a conversation, and because participants are usually friends. However, 85.27% of conversations have a relevance degree of 0.5, the lowest value, which means there were not anaphoric elements, conjunctions, and overlaps. Relevance is not easy to be measured accurately between two short messages. In summary, when each of the non-linguistic feature sets is used individually, the following results are seen: B s > B +int > B -int > S > R. For the behavior feature set, back-off smoothing is useful. In addition, the behavior pattern in response to a specific poster is more useful than to all posters, suggesting that the affective interaction between two given users may be based on a certain pattern. Combination of Feature Sets Experimentation with some combinations of different feature sets was also conducted. Table 2 shows the results of these combinations, from reader, writer, or reader and writer perspectives. Writer models still outperformed reader models, and are slightly better than reader+writer models for all feature combinations except for the SVM model with the T + B s + S combination. When combined with textual features, the behavioral feature set was still more powerful than social relation and relevance degree. However, all these 3 feature sets are helpful since paired ttests show that the differences between T and T + B s , T and T + S, and T and T + R to be significant (p < 0.05).  Because B s is most useful when used with textual features, T + B s with T + B s + S and T + B s + R were compared to see how S and R can improve performance. For the reader models with SVM, the difference between T + B s and T + B s + S was significant (p < 0.05), but the difference between T + B s and T + B s + R was insignificant. This shows that T + B s + S is a more useful combination than T + B s + R. For writer and reader + writer models, T + B s + S still outperformed T + B s + R. Although each of the 3 non-linguistic features can improve performance, combining all of them (T + B s + S + R) does not achieve the highest performance. The highest performance is achieved by the combination of T + B s + S, regardless of which perspective is used. According to results from the paired t-test, the difference between T + B s + S + R and T + B s + S is insignificant for the reader model and the writer model. This shows that that although adding R to the combination does not decrease the performance significantly, it is also not helpful. The reasons for this may be the following: both social relation and interactive behavior are related to interaction between two specific users, so their effects may overlap; only 14.73% of conversations have a relevance value higher than 0.5. Different Perspectives For all feature set combinations, the writer models and the reader+writer models achieve better performance than the reader models. These differences are significant according to the paired ttests, which suggests that for predicting a replier's emotion, the message generated by the replier him-or herself contains more useful infor-mation than the message generated by the poster and then read by the replier. When using the textual feature set only, the reader model's SVM performance (80.67%) was much lower than the writer model's (88.75%) and that of the reader+writer model (88.71%). When T is used with B s and S, in contrast, the SVM performance of the reader model is 88.42%, only slightly lower than the performance of the writer model (91.60%) and the reader+writer mode (91.61%). This indicates that when modeling emotion generation on a social network, nonlinguistic features play more important roles. The performance of textual feature set for the writer model with SVM is 88.75%, slightly higher than that for the reader+writer model (88.71%). According to results of the paired t-test, the difference between them is insignificant. For the T + B s + S combination, the performance of the reader+writer model (91.61%) is slightly higher than the performance of the writer model (91.60%), though the difference is also insignificant. Thus, it makes little difference in performance whether emotion generation is modeled from writer perspective or both reader and writer perspectives. In this series of experiments, 91.61% was the highest accuracy achieved. Writer Model As mentioned in the Section 4, another kind of writer model exists, for which the content is written by the poster, of which was also included as experiment with poster's writer model. In this case, only the linguistic feature set can be used. Results seen included an accuracy of 89.19%. Results of t-test for the posters' and repliers' writer model showed the difference as insignificant (p<0.082). However, it is important to note that the dataset used for the posters' writer model differs from the one used for the repliers' writer model, so this comparison is for reference only. Conclusion To better model emotion generation on a microblogging platform with social network characteristics, different models from the reader and/or writer perspectives were included in the experiment, and showed their differences. Discoveries included that predicting emotion from the reader perspective is more challenging than from the writer perspective. In addition, using nonlinguistic features with linguistic features for emotion prediction resulted in discovering that each of the non-linguistic feature sets is useful. In this study, the combination of all feature sets did not achieve the best performance. In future work, the weights and combination methods of different feature sets will need to be further studied. Additional efforts will also be needed to precisely represent the characteristics of user interaction and message contents. The relevance degree used in this study, for example, deals with only anaphoric elements, conjunctions, and overlapped bigrams in this study. Other factors and resources also will be needed to more effectively determine the relevance of two messages. As this paper suggests, a writer model is different from a reader model. The same bigrams or words can have different effects on writers' and readers' emotional expression. For example, greetings can cause a positive reader response even if the writer uses a negative emoticon and shows some negative feelings. Thus, these findings suggest that reader emotion be further explored in future studies. The models presented in this paper are useful for a wide range of applications, especially those related to conversation and interaction between humans and machines. They can also help improve the performance of automated customer service and writing assistance systems, in which readers' emotional responses are important. Different types of features can be used for different application domains. The behavioral feature, for example, can be used when a user's conversation history is available.",
    "abstract": "Most recent studies on emotion analysis and detection focus on how writers express their emotions through textual information. In this paper, we model emotion generation on the Plurk microblogging platform from both writer and reader perspectives. Support Vector Machine (SVM)-based classifiers are used for emotion prediction. To better model emotion generation on such a social network, three types of non-linguistic features are used: social relation, user behavior, and relevance degree, along with textual features. We found that each of the non-linguistic features can be combined with linguistic features to achieve higher performance. In fact, the combination of linguistic, social, and behavioral features performs the best.",
    "countries": [
        "Taiwan"
    ],
    "languages": [
        "Chinese"
    ],
    "numcitedby": "19",
    "year": "2011",
    "month": "November",
    "title": "Emotion Modeling from Writer/Reader Perspectives Using a Microblog Dataset"
}