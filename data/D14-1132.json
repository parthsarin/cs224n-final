{
    "article": "Recent work by Cherry (2013) has shown that directly optimizing phrase-based reordering models towards BLEU can lead to significant gains. Their approach is limited to small training sets of a few thousand sentences and a similar number of sparse features. We show how the expected BLEU objective allows us to train a simple linear discriminative reordering model with millions of sparse features on hundreds of thousands of sentences resulting in significant improvements. A comparison to likelihood training demonstrates that expected BLEU is vastly more effective. Our best results improve a hierarchical lexicalized reordering baseline by up to 2.0 BLEU in a single-reference setting on a French-English WMT 2012 setup. Introduction Modeling reordering for phrase-based machine translation has been a long standing problem. Contrary to synchronous context free grammarbased translation models (Wu, 1997; Galley et al., 2004; Galley et al., 2006; Chiang, 2007) , phrasebased models (Koehn et al., 2003; Och and Ney, 2004) have no in-built notion of reordering beyond what is captured in a single phrase pair, and the first phrase-based decoders simply scored interphrase reorderings using a restricted linear distortion feature, which scores a phrase reordering proportionally to the length of its displacement. While phrase-based models allow in theory completely unrestricted reordering patterns, movements are generally limited to a finite distance for complexity reasons. To address this limitation, extensive prior work focused on richer feature sets, in particular on lexicalized reordering mod-els trained with maximum likelihood-based approaches (Tillmann, 2003; Xiong et al., 2006; Galley and Manning, 2008; Nguyen et al.,2009; \u00a72) . More recently, Cherry (2013) proposed a very effective sparse ordering model relying on a set of only a few thousand indicator features which are trained towards a task-specific metric such as BLEU (Papineni et al., 2002) . These features are simply added to the log-linear framework of translation that is trained with the Margin Infused Relaxed Algorithm (MIRA; Chiang et al., 2009) on a small development set of a few thousand sentences. While simple, the approach outperforms the state-of-the-art hierarchical reordering model of Galley and Manning (2008) , a maximum likelihood-based model trained on millions of sentences to fit millions of parameters. Ideally, we would like to scale sparse reordering models to similar dimensions but recent attempts to increase the amount of training data for MIRA was met with little success (Eidelman et al., 2013) . In this paper we propose much larger sparse ordering models that combine the scalability of likelihood-based approaches with the higher accuracy of maximum BLEU training ( \u00a73). We train on the output of a hierarchical reordering model-based system and scale to millions of features learned on hundreds of thousands of sentences ( \u00a74). Specifically, we use the expected BLEU objective function (Rosti et al., 2010; Rosti et al., 2011; He and Deng, 2012; Gao and He, 2013; Gao et al., 2014; Green et al., 2014) which allows us to train models that use training data and feature sets that are two to three orders of magnitudes larger than in previous work ( \u00a75). Our models significantly outperform the state-of-the-art hierarchical lexicalized reordering model on two language pairs and we demonstrate that richer feature sets result in significantly higher accuracy than with a feature set similar to Cherry (2013) . We also demonstrate that our approach greatly benefits from more training data than is typically used for maximum BLEU training. Previous work concluded that sparse reordering models perform better than maximum entropy models, however, the two approaches do not only differ in the objective function but also the type of training data (Cherry, 2013) . Our analysis isolates the objective function and shows that expected BLEU optimization is the most important factor to train accurate ordering models. Finally, we compare expected BLEU training to pair-wise ranked optimization (PRO) on a feature set similar to Cherry (2013; \u00a77) . Reordering Models Reordering models for phrase-based translation are typically part of the log-linear framework which forms the basis of many statistical machine translation systems (Och and Ney, 2004) . Formally, we are given K training pairs D = (f (1) , e (1) )...(f (K) , e (K) ), where each f (i) \u2208 F is drawn from a set of possible foreign sentences, and each English sentence e (i) \u2208 E(f (i) ) is drawn from a set of possible English translations of f (i) . The log-linear model is parameterized by m parameters \u03b8 where each \u03b8 k \u2208 \u03b8 is the weight of an associated feature h k (f, e) such as a language model or a reordering model. Function h(f, e) maps foreign and English sentences to the vector h 1 (f, e)...h m (f, e), and we usually choose translations \u00ea according to the following decision rule: \u00ea = arg max e \u2208 E(f ) \u03b8 T h(f, e) (1) In practice, computing \u00ea exactly is intractable and we resort to an approximate but more efficient beam search (Och and Ney, 2004) . Early phrase-based models simply relied on a linear distortion feature, which measures the distance between the first word of the current source phrase and the last word of the previous source phrase (Koehn et al., 2003; Och and Ney, 2004) . Unfortunately, this approach is agnostic to the actual phrases being reordered, and does not take into account that certain phrases are more likely to be reordered than others. This shortcoming led to a range of lexicalized reordering models that capture exactly those preferences for individual phrases (Tillmann, 2003; Koehn et al., 2007) . Reordering models generally assume a sequence of English phrases e = {\u0113 1 , . . . , \u0113n } cur-rently hypothesized by the decoder, a phrase alignment a = {a 1 , . . . , a n } that defines a foreign phrase fa i for each English phrase \u0113i , and an orientation o i which describes how a phrase pair should be reordered with respect to the previous phrases. There are typically three orientation types and the exact definition depends on the specific models which we describe below. Orientations can be determined during decoding and from wordaligned training corpora. Most models estimate a probability distribution p(o i |pp i , a 1 , . . . , a i ) for the i-th phrase pair pp i = \u0113i , fa i and the alignments a 1 , . . . , a i of the previous target phrases. Lexicalized Reordering. This model defines the three orientation types based only on the position of the current and previously translated source phrase a i and a i\u22121 , respectively (Tillmann, 2003; Koehn et al., 2007) . The orientation types generally are: monotone (M), indicating that a i\u22121 is directly followed by a i . swap (S) assumes that a i precedes a i\u22121 , i.e., the two phrases swap places. Finally, discontinuous (D) indicates that a i is not adjacent to a i\u22121 . The probability distribution over these reordering events is based on a maximum likelihood estimate: p(o|pp, a i\u22121 , a i ) = cnt(o, pp) cnt(pp) (2) where o \u2208 {M, S, D} and cnt returns smoothed frequency counts over a word-aligned corpus. Hierarchical Reordering. An extension of the lexicalized reordering model better handles longdistance reordering by conditioning the orientation of the current phrase on a context larger than just the previous phrase (Galley and Manning, 2008) . In particular, the hierarchical reordering model does so by building a compact representations of the preceding context using an efficient shiftreduce parser. During translation new phrases get moved on a stack and are then combined with any previous phrase if they are adjacent. Figure 1 shows an illustrative example: when the decoder shifts phrase pp 8 onto the stack, this phrase is then merged with pp 7 (reduce operation), which then can be merged with previous phrases to finally form a hierarchical block h 1 . These merge operations stop once we reach a phrase (here, pp 3 ) that is not contiguous with the current block. Then, as another phrase (pp 9 ) is hypothesized, the decoder uses the hierarchical block at the top of the stack (h 1 ) to determine the orientation of the current  Figure 1 : The hierarchical reordering model (HRM) analyzes a non-local context to determine the orientation of the current phrase. For example, the phrase pair pp 9 has a swap orientation (o 9 = S) with respect to a hierarchical block (h 1 ) that comprises the five preceding phrase pairs. phrase pp 9 , which in this case is a swap (S) orientation. 1 The model has the advantage that the orientations computed are more robust to derivational ambiguity of the underlying translation model. A given surface translation may be derived through different phrases but the shift-reduce parser combines them into a single representation which is more consistent with the orientations observed in the word-aligned training data. Maximum Entropy-based models. The statistics used to estimate the lexicalized and the hierarchical reordering models are based on very sparse estimates, simply because certain phrases are not very frequent. Maximum entropy models address this problem by estimating Eq. 2 through sparse indicator features over phrase pairs instead, but prior work with such models still relies on word aligned corpora for estimation (Xiong et al., 2006; Nguyen et al., 2009) . However, recent evaluations of the approach show little gain over the simpler frequency-based estimation method (Cherry, 2013) . Sparse Hierarchical Reordering model. All of the models so far are trained to maximize the likelihood of reordering decisions observed in word aligned corpora. Cherry (2013) argues that it is probably too difficult to learn human reordering patterns through noisy word alignments that were generated by unsupervised methods. Instead, he proposes to learn a discriminative reordering model based on the outputs of the actual machine translation system, adjusting the feature weights to maximize a task-specific objective, which is BLEU in their case. Their model is based on a set of sparse features derived from the hierarchical reordering model which we scale to millions of features ( \u00a76). A Simple Linear Reordering Model Our reordering model is defined as a simple linear model over the basic orientation types, similar to Cherry (2013) . In particular, our model defines score s \u03c6 (o, e, f ) over orientations o = {M, S, D}, and a sentence pair {e, f, a} with alignment a as a linear combination of weighted indicator features: s \u03c6 (o, e, f, a) = \u03c6 T u(o, e, f, a) = I i=1 \u03c6 T u(o, pp i , c i ) = I i=1 s \u03c6 (o, pp i , c i ) (3) where \u03c6 is a vector of weights, {pp i } I i=1 is a set of phrases that decompose the sentence pair {e, f, a}, and u(o, pp i , c i ) is a function that maps orientation o, phrase pair pp i and local context c i to a sparse vector of indicator features. The local context c i represents information used by the model that is in addition to the phrase pair. For example, the features of Cherry (2013) condition on the top-stack of the hierarchical shift reduce parser, information that is non-local with respect to the phrase pair. In our experiments, we use features that go beyond the top-stack, in order to condition on various parts of the source and target side contexts ( \u00a77). Model Training Optimization of our model is based on standard stochastic gradient descent (SGD; Bottou, 2004) with an expected BLEU loss l(\u03c6) which we detail next ( \u00a75). The update is: \u03c6 t = \u03c6 t\u22121 \u2212 \u00b5 \u2202l(\u03c6 t\u22121 ) \u2202\u03c6 t\u22121 (4) where \u03c6 t and \u03c6 t\u22121 are model weights at time t and t \u2212 1 respectively, and \u00b5 is a learning rate. We add the model as a small number of dense features to the log-linear framework of translation (Eq. 1). Specifically, we extend the m baseline features by a set of new features h m+1 , . . . , h m+j , where each represents a linear combination of sparse indicator features corresponding to one of the orientation types. Exposing each orientation as a separate dense feature within the log-linear model is common practice for lexicalized reordering models (Koehn et al., 2005) : h m+j = s \u03c6 (o j , e, f, a) where o j \u2208 {M, S, D}. The translation model is then parameterized by both \u03b8, the log-linear weights of the baseline features, as well as \u03c6, the weights of the reordering model. The reordering model is learned as follows (Gao and He, 2013; Gao et al., 2014) : 1. We first train a baseline translation system to learn \u03b8, without the discriminative reordering model, i.e., we set \u03b8 m+1 = 0, . . . , \u03b8 m+j = 0. 2. Using these weights, we generate n-best lists for the foreign sentences in the training data using the setup described in the experimental section ( \u00a77). The n-best lists serve as an approximation to E(f ), the set of possible translations of f , used in the next step for expected BLEU training of the reordering model ( \u00a75). 3. Next, we fix \u03b8, set \u03b8 m+1 = 1, . . . \u03b8 m+j = 1 and optimize \u03c6 with respect to the loss function on the training data using stochastic gradient descent. We found that re-optimizing \u03b8 after a few iterations of stochastic gradient descent in step 3 did not improve accuracy. Expected BLEU Objective Function The expected BLEU objective (Gao and He, 2013; Gao et al., 2014) allows us to efficiently optimize a large scale discriminative reordering model towards the desired task-specific metric, which in our setting is BLEU. Formally, we define our loss function l(\u03c6) as the negative expected BLEU score, denoted as xBLEU(\u03c6), for a given foreign sentence f and a log-linear parameter set \u03b8: l(\u03c6) = \u2212 xBLEU(\u03c6) = \u2212 e\u2208E(f ) p \u03b8,\u03c6 (e|f ) sBLEU(e, e (i) ) (5) where sBLEU(e, e (i) ) is a smoothed sentencelevel BLEU score with respect to the reference translation e (i) , and E(f ) is the generation set approximated by an n-best list. In our experiments we use n-best lists with unique entries and therefore our definitions do not take into account multiple derivations of the same translation. Specifically, our n-best lists are generated by choosing the highest scoring derivation \u00ea amongst string identical translations e for f . We use a sentencelevel BLEU approximation similar to Gao et al. (2014) . 3 Finally, p \u03b8,\u03c6 (e|f ) is the normalized probability of translation e given f , defined as: p \u03b8,\u03c6 (e|f ) = exp{\u03b3\u03b8 T h(f, e)} e \u2208E(f ) exp{\u03b3\u03b8 T h(f, e )} (6) where \u03b8 T h(f, e) includes the discriminative reordering model h m+1 (e, f ), . . . , h m+j (e, f ) parameterized by \u03c6, and \u03b3 \u2208 [0, inf) is a tuned scaling factor that flattens the distribution for \u03b3 < 1 and sharpens it for \u03b3 > 1 (Tromble et al., 2008) . 4  Next, we define the gradient of the expected BLEU loss function l(\u03c6). To simplify our notation we omit the local context c in s \u03c6 (o, pp, c) (Eq. 3) from now on and assume it to be part of pp. Using the observation that the loss does not explicitly depend on \u03c6, we get: \u2202l(\u03c6) \u2202\u03c6 = o,pp \u2202l(\u03c6) \u2202s \u03c6 (o, pp) \u2202s \u03c6 (o, pp) \u2202\u03c6 = o,pp \u2212\u03b4 o,pp u(o, pp) where \u03b4 o,pp is the error term for orientation o of phrase pair pp: \u03b4 o,pp = \u2212 \u2202l(\u03c6) \u2202s \u03c6 (o, pp) The error term indicates how the expected BLEU loss changes with the reordering score which we derive in the next section. Finally, the gradient of the reordering score s \u03c6 (o, pp) with respect to \u03c6 is simply given by this: \u2202s \u03c6 (o, pp) \u2202\u03c6 = \u2202\u03c6 T u(o, pp) \u2202\u03c6 = u(o, pp) 5.1 Derivation of the Error Term \u03b4 o,pp We rewrite the loss function (Eq. 5) using Eq. 6 and separate it into two terms G(\u03c6) and Z(\u03c6): l(\u03c6) = \u2212xBLEU(\u03c6) = \u2212 G(\u03c6) Z(\u03c6) (7) = \u2212 e\u2208E(f ) exp{\u03b3\u03b8 T h(f, e)} sBLEU(e, e (i) ) e \u2208E(f ) exp{\u03b3\u03b8 T h(f, e )} Next, we apply the quotient rule of differentiation: \u03b4 o,pp = \u2202xBLEU(\u03c6) \u2202s \u03c6 (o, pp) = \u2202(G(\u03c6)/Z(\u03c6)) \u2202s \u03c6 (o, pp) = 1 Z(\u03c6) \u2202G(\u03c6) \u2202s \u03c6 (o, pp) \u2212 \u2202Z(\u03c6) \u2202s \u03c6 (o, pp) xBLEU(\u03c6) The gradients for G(\u03c6) and Z(\u03c6) with respect to s \u03c6 (o, pp) are: \u2202G(\u03c6) \u2202s \u03c6 (o, pp) = e\u2208E(f ) sBLEU(e, e (i) ) \u2202 exp{\u03b3\u03b8 T h(f, e)} \u2202s \u03c6 (o, pp) \u2202Z(\u03c6) \u2202s \u03c6 (o, pp) = e\u2208E(f ) \u2202 exp{\u03b3\u03b8 T h(f, e)} \u2202s \u03c6 (o, pp) By using the following definition: U (\u03c6, e) = sBLEU(e, e (i) ) \u2212 xBLEU(\u03c6) together with the chain rule, Eq. 6 and Eq. 7, we can rewrite \u03b4 o,pp as follows: \u03b4 o,pp = 1 Z(\u03c6) e\u2208E(f ) \u2202 exp{\u03b3\u03b8 T h(f, e)} \u2202s \u03c6 (o, pp) U (\u03c6, e) = e\u2208E(f ) p \u03b8,\u03c6 (e|f ) \u2202\u03b3\u03b8 T h(f, e) \u2202s \u03c6 (o, pp) U (\u03c6, e) Because \u03c6 is only relevant to the reordering model, represented by h m+1 , . . . , h m+j , we have: \u2202\u03b3\u03b8 T h(f, e) \u2202s \u03c6 (o, pp) = \u03b3\u03bb k \u2202h k (e, f ) \u2202s \u03c6 (o, pp) = \u03b3\u03bb k N (o, pp, e, f ) 1: function TRAINSGD(D, \u00b5) 2: t \u2190 0 3: for all (f (i) , e (i) ) in D do 4: xBLEU = 0 Compute xBLEU 5: for all e in E(f (i) ) do 6: wBLEU \u2190 p \u03b8,\u03c6t (e|f ) sBLEU(e, e (i) ) 7: xBLEU \u2190 xBLEU + wBLEU 8: end for 9: for all e in E(f (i) ) do for all o, pp in e, f (i) do 12: N = N (o, pp, e, f ) 13: \u03b4 o,pp = p \u03b8,\u03c6t (e|f (i) )\u03b3\u03bb k N D 14: \u03c6 t+1 = \u03c6 t \u2212 \u00b5\u03b4 o,pp u(o, pp)) 15: end for 16: end for 17: t \u2190 t + 1 18: end for 19: end function This simplifies the error term to: \u03b4 o,pp = e\u2208E(f ) p \u03b8,\u03c6 (e|f )\u03b3\u03bb k N (o, pp, e, f )U (\u03c6, e) (8) where \u03bb k is the weight of the dense feature summarizing orientation o in the log-linear model. We use Eq. 8 in a simple algorithm to train our model (Figure 2 ). Our SGD trainer uses a mini-batch size of a single sentence ( \u00a77) which entails all hypothesis in the n-best list for this sentence and the parameters are updated after each mini-batch. Feature Sets Our features are inspired by Cherry (2013) who bases his features on the local phrase-pair pp = \u0113, f as well as the top stack of the shift reduce parser of the baseline hierarchical ordering model. We experiment with these variants and extensions: \u2022 SparseHRMLocal: This feature set is exclusively based on the local phrase-pair and consists of features over the first and last word of both the source and target phrase. 5  We use four different word representations: The word identity itself, but only for the 80 most common source and target language words. The three other word representations are based on Brown clustering with either 20, 50 or 80 classes (Brown et al., 1992) . There is one feature for every orientation type. \u2022 SparseHRM: The main feature set of Cherry (2013) . This is an extension of SparseHRM-Local adding features based on the first and last word of both the source and the target of the hierarchical block at the top of the stack. There are also features based on the source words in-between the current phrase and the hierarchical block at the top of the stack. \u2022 SparseHRM+UncommonWords: This set is identical to SparseHRM, except that wordidentity features are not restricted to the 80 most frequent words, but can be instantiated for all words, regardless of frequency. \u2022 SparseHRM+BiPhrases: This augments SparseHRM by phrase-identity features resulting in millions of instances compared to only a few thousand for SparseHRM. We add three features for each possible phrase pair: the source phrase, the target phrase, and the whole phrase pair. The baseline hierarchical lexicalized reordering model is most similar to SparseHRM+BiPhrases feature set since both have parameters for phrase, orientation pairs. 6 The feature set closest to Cherry (2013) is SparseHRM. However, while Cherry had to severely restrict his features for batch lattice MIRA-based training, our maximum expected BLEU approach can handle millions of features. Experiments Baseline. We experiment with a phrase-based system similar to Moses (Koehn et al., 2007) , 5 Phrase-local features allow pre-computation which results in significant speed-ups at run-time. Cherry (2013) shows that local features are responsible for most of his gains. 6 Although, our model is likely to learn significantly fewer parameters since many phrase, orientation pairs will only be seen in the word-aligned data but not in actual machine translation output. scoring translations by a set of common features including maximum likelihood estimates of source given target phrases p M LE (e|f ) and vice versa, p M LE (f |e), lexically weighted estimates p LW (e|f ) and p LW (f |e), word and phrasepenalties, as well as a linear distortion feature. The baseline uses a hierarchical reordering model with five orientation types, including monotone and swap, described in \u00a72, as well as two discontinuous orientations, distinguishing if the previous phrase is to the left or right of the current phrase. Finally, monotone global indicates that all previous phrases can be combined into a single hierarchical block. The baseline includes a modified Kneser-Ney word-based language model trained on the target-side of the parallel data, which is described below. Log-linear weights are estimated with MERT (Och, 2003) . We regard the 1-best output of the phrase-based decoder with the hierarchical reordering model as the baseline accuracy. Evaluation. We use training and test data from the WMT 2012 campaign and report results on French-English and German-English translation (Callison-Burch et al., 2012) . Translation models are estimated on 102M words of parallel data for French-English and 91M words for German-English; between 7.5-8.2M words are newswire, depending on the language pair, and the remainder are parliamentary proceedings. All discriminative reordering models are trained on the newswire subset since we found this portion of the data to be most useful in initial experiments. We evaluate on six newswire domain test sets from 2008, 2010 to 2013 as well as the 2010 system combination test set containing between 2034 to 3003 sentences. Log-linear weights are estimated on the 2009 data set comprising 2525 sentences. We evaluate using BLEU with a single reference. Discriminative Reordering Model. We use 100best lists generated by the phrase-based decoder to train the discriminative reordering model. The n-best lists are generated by ten systems, each trained on 90% of the available data in order to decode the remaining 10%. The purpose of this procedure is to avoid a bias introduced by generating n-best lists for sentences on which the translation model was previously trained. 7 1 ). mentioned, we train our reordering model on the news portion of the parallel data, corresponding to 136K-150K sentences, depending on the language pair. We tuned the various hyper-parameters on a held-out set, including the learning rate, for which we found a simple setting of 0.1 to be useful. To prevent overfitting, we experimented with 2 regularization, but found that it did not improve test accuracy. We also tuned the probability scaling parameter \u03b3 (Eq. 6) but found \u03b3 = 1 to be very good among other settings. We evaluate the performance on a held-out validation set during training and stop whenever the objective changes less than a factor of 0.0003. For our PRO experiments, we tuned three hyper-parameters controlling 2 regularization, sentence-level BLEU smoothing, and length. The latter is important to eliminate PRO's tendency to produce too short translations (Nakov et al., 2012) . Scaling the Feature Set We first compare our baseline, a likelihood trained hierarchical reordering model (HRM; Galley & Manning, 2008) , to various expected BLEU trained models, starting with SparseHRMLocal, inspired by Cherry (2013) and compare it to SparseHRM+BiPhrases, a set that is three orders of magnitudes larger. Our results on French-English translation (Table 1) and German-English translation (Table 2 ) show that the expected BLEU trained models scale to millions of features and that we outperform the baseline by up to 2.0 BLEU on newstest2012 for French-English and by up to 1.1 BLEU on new-stest2011 for German-English. 8 Increasing the size of the feature set improves accuracy across the board: The average accuracy over all test sets improves from 1.0 BLEU for the most basic feature set to 1.5 BLEU for the largest feature set on French-English and from 0.3 BLEU to 0.8 BLEU on German-English. 9 The most comparable setting to Cherry (2013) is the feature set SparseHRM, which we outperform by up to 0.5 BLEU on French-English and by 0.3 BLEU on average on both language pairs, demonstrating the benefit of being able to effectively train large feature sets. Furthermore, the increase in the number of features does not affect runtime, since most features can be pre-computed and stored in the phrase-table, only requiring a constant time tablelookup, similar to traditional reordering models. Another appeal of our approach is that training is very fast given a set of n-best lists for the training data. The SparseHRM model with 4,407 features is trained in only 26 minutes, while the SparseHRM+BiPhrases model with over three million parameters can be trained in just over two hours (136K sentences and 100 epochs in both cases). We attribute this to the training regime ( \u00a74), which does not iteratively re-decode the training data for expected BLEU training. 10 Varying Training Set Size Previous work on sparse reordering models was restricted to small data sets (Cherry, 2013) due to the limited ability of standard machine translation optimizers to handle more than a few thousand sentences. In particular, recent attempts to scale the margin-infused relaxation algorithm, a variation which was also used by Cherry (2013) , to larger data sets showed that more data does not necessarily help to improve test set accuracy for large feature sets (Eidelman et al., 2013) . In the next set of experiments, we shed light on the advantage of training discriminative reordering models with expected BLEU on large training sets. Specifically, we start off by estimating a reordering model on only 2,000 sentences, similar to the size of the development set used by Cherry (2013) , and incrementally increase the amount of training data to nearly three hundred thousand sentences. To avoid overfitting to small data sets we experiment with our most basic feature set SparseHRM-Local, comprising of just over 4,400 types. For this experiment only, we measure accuracy in a re-ranking framework for faster experimentation where we use the 100-best output of the baseline system relying on a likelihood-based hierarchical reordering model. We re-estimate the log-linear weights by running a further iteration of MERT on the n-best list of the development set which is augmented by scores corresponding to the discriminative reordering model. The weights of those features are initially set to one and we use 20 random restarts for MERT. At test time we rescore the 100-best list of the test set using the new set of log-linear weights learned previously. Figure 3 confirms that more training data increases accuracy and that the best model requires a substantially larger amount of training data than what is typically used for maximum BLEU training. We expect an even steeper curve for larger feature sets where more parameters need to be estimated and where the amount of training data is likely to have an even larger effect. Likelihood versus BLEU Optimization Previous research has shown that directly training a reordering model for BLEU can vastly outperform a likelihood trained maximum entropy reordering model (Cherry, 2013) . However, the two approaches do not only differ in the objectives used, but also in the type of training data. The maximum entropy reordering model is trained on a word-aligned corpus, trying to learn human reordering patterns, whereas the sparse reordering model is trained on machine translation output, trying to learn from the mistakes made by the actual system. It is therefore not clear how much either one contributes to good accuracy. Our next experiment teases those two aspects apart and clearly shows the effect of the objective function. Specifically, we compare the traditionally used conditional log-likelihood (CLL) objective to expected BLEU on the French-English translation task in a small feature condition (SparseHRM) of about 9K features and a large feature setting of over 3M features (SparseHRM+BiPhrases). In the CLL setting, we maximize the likelihood of the hypothesis with the highest BLEU score in the n-best list of each training sentence. Our results (Table 3 ) show that CLL training achieves only a fraction of the gains yielded by the expected BLEU objective. For SparseHRM, CLL improves the baseline by less than 0.2 BLEU on average across all test sets, whereas expected BLEU achieves 1.2 BLEU. Increasing the number of features to 3M (SparseHRM+BiPhrases) results in a slightly better average gain of 0.3 BLEU for CLL but but expected BLEU still achieves a much higher improvement of 1.5 BLEU. Because our gains with likelihood training are similar to what Cherry (2013) reported for his maximum entropy model, we conclude that the objective function is the most important factor to achieving good accuracy. Comparison to PRO In our final experiment we compare expected BLEU training to pair-wise ranked optimization (PRO), a popular off the shelf trainer for machine translation models with large feature sets (Hopkins and May, 2011). 11 Previous work has shown that PRO does not scale to truly large feature sets with millions of types (Yu et al., 2013) and we therefore restrict ourselves to our smallest 11 MIRA is another popular optimizer but as previously mentioned, even the best publicly available implementation does not scale to large training sets (Eidelman et al., 2013) . set (SparseHRMLocal) of just over 4.4K features. We train PRO on the development set comprising of 2,525 sentences, a setup that is commonly used by standard machine translation optimizers. In this setting, PRO directly learns weights for the baseline features ( \u00a77) as well as the 4.4K indicator features corresponding to the sparse reordering model. For expected BLEU training we use the full 136K sentences from the training data. The results (Table 4 ) demonstrate that expected BLEU outperforms a typical setup commonly used to train large feature sets. Conclusion and Future Work The expected BLEU objective is a simple and effective approach to train large-scale discriminative reordering models. We have demonstrated that it scales to millions of features, which is orders of magnitudes larger than other modern machine translation optimizers can currently handle. Empirically, our sparse reordering model improves machine translation accuracy across the board, outperforming a strong hierarchical lexicalized reordering model by up to 2.0 BLEU on a French to English WMT2012 setup, where the baseline was trained on over two million sentence pairs. We have shown that scaling to large training sets is crucial to good performance and that the best performance is reached when hundreds of thousands of training sentences are used. Furthermore, we demonstrate that task-specific training towards expected BLEU is much more effective than optimizing conditional log-likelihood as is usually done. We attribute this to the fact that likelihood is a strict zero-one loss that does not assign credit to partially correct solutions, whereas expected BLEU does. In future work we plan to extend expected BLEU training to lattices and to evaluate the effect of estimating weights for the dense baseline features as well. Our current training procedure (Gao and He, 2013; Gao et al., 2014) decodes the training data only once. In future work, we would like to compare this to repeated decoding as done by conventional optimization methods as well as other large-scale discriminative training approaches (Yu et al., 2013) . We expect this to yield additional accuracy gains. Acknowledgements We would like to thank Arul Menezes and Xiaodong He for helpful discussion related to this work and the three anonymous reviewers for their comments.",
    "abstract": "Recent work by Cherry (2013) has shown that directly optimizing phrase-based reordering models towards BLEU can lead to significant gains. Their approach is limited to small training sets of a few thousand sentences and a similar number of sparse features. We show how the expected BLEU objective allows us to train a simple linear discriminative reordering model with millions of sparse features on hundreds of thousands of sentences resulting in significant improvements. A comparison to likelihood training demonstrates that expected BLEU is vastly more effective. Our best results improve a hierarchical lexicalized reordering baseline by up to 2.0 BLEU in a single-reference setting on a French-English WMT 2012 setup.",
    "countries": [
        "United States"
    ],
    "languages": [
        "English",
        "German",
        "French"
    ],
    "numcitedby": "20",
    "year": "2014",
    "month": "October",
    "title": "Large-scale Expected {BLEU} Training of Phrase-based Reordering Models"
}