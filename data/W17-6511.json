{
    "article": "Word embeddings induced from large amounts of unannotated text are a key resource for many NLP tasks. Several recent studies have proposed extensions of the basic distributional semantics approach where words form the context of other words, adding features from e.g. syntactic dependencies. In this study, we look in a different direction, exploring models that leave words out entirely, instead basing the context representation exclusively on syntactic and morphological features. Remarkably, we find that the resulting vectors still capture clear semantic aspects of words in addition to syntactic ones. We assess the properties of the vectors using both intrinsic and extrinsic evaluations, demonstrating in a multilingual parsing experiment using 55 treebanks that fully delexicalized syntax-based word representations give a higher average parsing performance than conventional word2vec embeddings. Introduction The recent resurgence of interest in neural methods for natural language processing involves a particular focus on neural approaches to inducing representations of words from large text corpora based on distributional semantics approaches (Bengio et al., 2003; Collobert et al., 2011) . The methods introduced by Mikolov et al. (2013a) and implemented in their popular word2vec tool have been proven both effective and a good foundation for further exploration. In addition to representing word contexts as sliding windows of words in linear sequence, recent work has included efforts of building the word vectors using dependency-based approaches (Levy and Gold-berg, 2014) , where the context is based on nearby words in the syntactic tree. In this paper, we set out to study dependencybased contexts further, exploring word embeddings derived from fully delexicalized syntactic contexts, and in particular the degree to which models induced using such context representations are dependent on word forms. Methods Our study builds on the seminal work introducing word2vec and later efforts generalizing it from a linear representation of context words to arbitrary contexts. We next present these methods and our proposed formulation of delexicalized syntaxbased word embeddings. Word2vec embeddings The word2vec tool 1 implements two related approaches for inducing word representations -continuous bag-of-words (CBOW) and skip-grams -as well as a number of ways to train and parametrise them (Mikolov et al., 2013a; Mikolov et al., 2013b) . Of these variants, the skip-gram with negative sampling (SGNS) model has been shown to be particularly effective and has become a de facto standard for neural word vector induction and the basis for many recent studies in the field. While the original work of Mikolov et al. explored different model architectures and approaches to learning, they all shared the property that the contexts of words in the model consisted of words. Dependency-based word embeddings Observing that the SGNS model is not inherently restricted to working with contexts consisting of words, Levy and Goldberg (2014) extended the model to work with arbitrary contexts, focusing in particular on dependency-based contexts consisting of combinations of a neigbouring word in the dependency graph and its dependency relation to the target word (e.g. scientist/nsubj). Compared to embeddings based on linear contexts of words, they showed dependency-based embeddings to emphasize functional over topical similarity and to have benefits in distinguishing word relatedness from similarity. Levy and Goldberg released their generalized version of word2vec allowing arbitrary contexts as word2vecf. 2 Delexicalized syntax-based embeddings Although the context definition of Levy and Goldberg incorporates dependency information, it remains lexicalized, including also the surface form of the dependent or head word. Here, we consider whether it is possible to induce useful word embeddings with delexicalized contexts that omit the word form entirely. Specifically, we define the context of a target word as 1) the set of all dependency relations headed by the target word, 2) the relation where the target word is the dependent, marked to differentiate it from those in set 1), 3) the part-of-speech tag of the target word, and 4) the set of morphological features assigned to the target word. This context definition is illustrated in Figure 1 . We use the word2vecf implementation to create embeddings using this context definition. Experimental setup We next present the sources of the unannotated texts and their syntactic analyses used as input and the methods and resources applied to create word embeddings and evaluate them. Texts and dependency analyses The texts used to induce word vectors are derived from the multilingual text collection recently introduced by Ginter et al. (2017) plain texts, the resource provides also full syntactic analyses following Universal Dependencies (UD) (Nivre et al., 2016) version 2.0 guidelines, including tokenization, lemmatization, full morphological analyses and parses produced with the UDPipe pipeline (Straka et al., 2016) . We note that even though many languages in the UD collection are covered by more than one treebank (and analyses may differ across treebanks for a single language), only one set of automatic analyses are provided per language in this resource. Embeddings We use the word2vec embeddings provided together with the CoNLL 2017 Shared Task automatically analyzed corpora (Ginter et al., 2017) as a baseline in our experiments. These models are trained on tokenized and lowercased text using the SGNS approach with a window size of 10, minimum word frequency count 10, and 100-dimensional vectors. Our new delexicalized word2vecf embeddings are created using the same, identically tokenized and lowercased texts, where the UDPipe morphological and syntactic analyses are used to generate our syntax-based contexts. We use the same minimum word frequency count 10 and vector dimensionality of 100 for our word2vecf models. 2016 )) and we agree with the criticism that they are frequently poor indicators of the merits of representations, we include this common form of intrinsic evaluation here for reference purposes. We provide results using a comprehensive collection of English datasets annotated for word similarity and relatedness. Specifically, we used the evaluation service introduced by Faruqui and Dyer (2014) to evaluate on the 13 datasets available on the service 3 at the time of this writing. The datasets are summarized below in Table 3 . Extrinsic evaluation Our primary evaluation is based on dependency parsing, where we evaluate parsing accuracy using different pre-trained word embeddings during parser training. We use the UDPipe pipeline 4 for tokenizing, tagging, lemmatizing and parsing Universal Treebanks (Straka et al., 2016) . In all experiments, we use system parameters optimized on baseline models separately for each treebank, 5 keeping the parameters fixed in the comparative evaluations of the different word representations. We note that any possible bias introduced by this parameter selection strategy would favour the baseline model rather than one using the delexicalized syntax-based representations proposed here. Parsing results are reported for all UD v2.0 treebanks in the CoNLL 2017 Shared Task release 6 that have a separate development set which can be used for testing and raw data for training embeddings. Of the 64 treebanks in the release, 9 do not fulfill these criteria (French-ParTUT, Galician-TreeGal, Irish, Kazakh, Latin, Slovenian-SST, Ukrainian and Uyghur do not have development data, Gothic does not have raw data) and are not included in the evaluation. Models are trained on the training section of a treebank and tested on the development section. 7 Results We next informally illustrate the characteristics of the English word vectors using nearest neighbours and give the intrinsic evaluation results for these vectors before presenting the results of our primary multilingual parsing experiments. Nearest neighbours Table 1 shows nearest neighbours in the conventional word2vec embeddings using the cosine similarity metric for a somewhat arbitrary selection of English words. 8 As has been well established in previous work, near words in word2vec representations are commonly (near) synonyms (e.g. jesus/christ, scratched/scuffed), cohyponyms (france/belgium, xbox/playstation), or topically related (france/paris, scratched/sandpaper). We expected that the use of delexicalized with little semantic coherence. However, by contrast, all ten words nearest to france are countries, the neighbours of jesus are first names, nine out of ten nearest to reddish have the form colorish, and megabits is nearest ten different units. This unexpected result suggests that the syntactic structures and morphological features associated with a word can generate surprisingly useful word representations even in the absence of any lexical information. We also note the concerning (and systematic) tendency for nearest neighbours to end with the same characters (e.g. 8/10 nearest xbox in x). Although this may seem very surprising, we ruled out the possibility of leaking any word-suffix information by obtaining the same results when only word hashes were used during the model training. Our explanation is to note that the effect is strongest for rare words and that the parses are generated with a complex statistical model with access to word surface forms which are indirectly reflected in the predicted morphological and syntactic structures. In particular, the POS and morphological tagger naturally uses word suffix information, and we hypothesize that the vector model is able to pick this weak signal from the output of the morphological tagger and syntactic parser. Intrinsic evaluation results The results for the intrinsic evaluation based on the comparison of word pair similarity ranking with human judgments on 13 datasets are summarized in Table 3 . The correlations seen for the word2vec embeddings are in line with those for previously released representations generated using the algorithm (e.g. (Mikolov et al., 2013a) ), confirming that the texts used to induce these representations are appropriate for generating highquality word embeddings. The results for the delexicalized syntax-based embeddings are, as expected, much lower and far from competitive on any of the datasets. Nevertheless, the correlations remain positive in all 13 evaluations, providing support for the proposition that delexicalized contexts representations can identify similarities in word meaning. Dependency parsing results Parsing performance for the 55 treebanks is summarized in Table 4 . We report labeled attachment scores evaluated using gold standard word segmentation with predicted part-of-speech tags and morphological features for parsers trained using three different pre-trained word embeddings: word2vec embeddings trained on the texts of the manually annotated UD treebanks (baseline), word2vec embeddings trained on the large unannotated corpora, and our delexicalized syntax-based embeddings trained on the automatically analyzed corpora. word2vec embeddings trained on the large unannotated corpora yield on average a +0.16% point improvement over the baseline model. Somewhat surprisingly, incorporating standard word2vec embeddings trained on the larger cor-  pora produces notably worse results compared to the baseline model for a number of languages. For Old Church Slavonic, the over 2% point drop in performance can likely be attributed to the modest size of the unannotated corpus available for that language: only 29,000 words are available in the raw data collection, compared to 37,500 words in the treebank training set. Otherwise, the differences range between -1.55% points and +6.28% points, with 31 treebanks showing positive results and 23 negative results. While some of these negative effects may be attributable to domain mismatches between the treebanks and the web-crawled and Wikipedia-derived texts, further study is required to analyze these findings in detail. The delexicalized syntax-based embeddings yield an average 0.88% point improvement. Excluding Old Church Slavonic, which behaves similarly as with word2vec embeddings, the difference to the baseline ranges between -0.80% points and +7.30% points, with 45 treebanks showing a positive effect and 9 negative results. Overall, our results indicate the surprising conclusion that delexicalized syntactic embeddings lead to higher performance than conventional word2vec embeddings as well as generalize better across languages when evaluated in this closely related task. Analysis Given the positive effects of delexicalized syntaxbased embeddings on the parsing task, it is natural to ask how the baseline parser performance affects the quality of the word embeddings. We set out to test this on Finnish, where our syntax-based embeddings have a clear positive effect compared to conventional word2vec embeddings and where our baseline parser accuracy is relatively low compared to the state-of-the-art parsers. We first study whether the better parsing model showing a 1.65% point improvement in labeled attachment score can be used in a bootstrapping setup to generate yet better embeddings and parsers. We parsed the Finnish raw data with this better model, induced word vectors on the newly parsed data, and trained a UDPipe parsing model with the newly created word vectors. The results of this experiment are shown in Table 5 . In terms of LAS, the second iteration model is +0.23% points better than the model from the first iteration. We note that UDPipe may not be the optimal parsing pipeline for this experiment: our syntaxbased embeddings are trained using both morphological features and syntactic trees, but while the UDPipe parser (Parsito (Straka et al., 2015) ) uses pre-trained embeddings, the morphological tagger (MorphoDiTa (Strakov\u00e1 et al., 2014) ) does not, thus leaving part-of-speech tags and morphological features intact in newly parsed data. This means that the difference between old and new vector training data is relatively small. A second consideration is that the 75.7% accuracy of the baseline parser used is not competitive with state-of-the-art parsers, where best reported labeled attachment scores for Finnish are in the range of 83-84% (Alberti et al., 2017; Bohnet et al., 2013) . To investigate the effect of using higher-quality parses, we trained our syntaxbased embeddings on the Finnish Internet Parsebank (Luotolahti et al., 2015) , a 3.6 billion token collection of web crawled data. Finnish Internet Parsebank is analyzed with the Finnish de-  pendency parsing pipeline 9 trained on the UD Finnish treebank (Pyysalo et al., 2015) version 1.2. The Finnish parsing pipeline uses the OMorFi rule-based morphological analyzer (Pirinen, 2008) converted to the UD scheme, the Marmot tagger (M\u00fcller et al., 2013) and the graph-based dependency parser of Bohnet (2010) . The labeled attachment score of the pipeline is estimated to be 82% based on the experiments reported in Pyysalo et al. (2015) . Interestingly, when the UDPipe parser was trained with syntax-based word embeddings induced from Finnish Internet Parsebank, UDPipe performance improved to the general level of the original parser used, giving a LAS of 82.21%. It must be noted that this number is not comparable to our main parsing results as the version of the UD Finnish treebank is different (version 1.2 compared to version 2.0), and the raw text collection more than three times bigger. With UDPipe using standard word2vec pre-trained embeddings trained on the same Finnish Internet Parsebank data, parsing accuracy was 78.35%. These preliminary results are very promising and indicate that with good pre-trained word embeddings, we are able to improve a fast and comparatively simple feedforward parser near the numbers of the new DRAGNN-based SyntaxNet (Kong et al., 2017; Alberti et al., 2017 ) parser, which is more complex and much slower. Currently, we were only able to \"mimic\" the numbers of a good parser as we needed a high-quality parsebank to achieve these results, and the question whether similar results could be obtained without the near state-of-the-art parser remains open. Conclusions and Future Work In this work, we proposed a fully delexicalized context representation for inducing word vectors using the Levy and Goldberg (2014) generalization of the word2vec skip-gram with negative sampling (SGNS) model. Building on a recently developed large-scale multilingual re-9 https://github.com/TurkuNLP/ Finnish-dep-parser source of texts automatically annotated with Universal Dependencies, we created delexicalized syntax-based word embeddings for 45 different languages. Examination of nearest neighbours and evaluation against 13 English datasets annotated for human judgments of word similarity suggested that the embeddings retained a substantial degree of information on not only the syntactic and morphological aspects of words but also on aspects of their meaning despite being induced through a process with no access to lexical information. An extensive extrinsic evaluation using the UDPipe parser and 55 CoNLL 2017 shared task corpora demonstrated that the addition of our syntax-based embeddings not only substantially improved the performance of the baseline UDPipe model on average, but also that this improvement was greater than when using standard word2vec SGNS embeddings. A detailed analysis on Finnish showed potential additional promise from approaches using bootstrapping as well as combinations of embeddings induced using parses generated using complex models in simpler and faster parsers. Our initial exploration suggests that fully delexicalized syntax-based embeddings have intriguing properties and show promise for use in practical applications. In future work, we will further explore how delexicalized context representations can capture aspects of word meaning -both in terms of degree and mechanism -as well as explore their use in improving mono-and multilingual parsing performance in combination with state-of-the-art models."
}