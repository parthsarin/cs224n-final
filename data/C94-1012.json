{
    "article": "In an interlingual knowledge-based machine translation system, ambiguity arises when the source 1.qnguage analyzer produces more than one interlingua expression for a source sentence. This can have a negative impact on translation quality, since a target sentence may be produced from an unintended meaning. In this paper we describe the ,nethods nsed in the KANT machine translation system to reduce or eliminate ambiguity in a large-scale application domain. We also test these methods on a large corpus of test sentences, in order to illustrate how the different disambiguation methods redtuce the average number of parses per sentence, Introduction The KANT system [Mitamura etal., 1991] is a system for Knowledge-basexl, Accurate Natural-language Translation. The system is used in focused technical domains for multilingual translation of controlled source language documents. KANT is an interlingua-based system: the sonrce language analyzer produces an interlingua expression for each source sentence, and this interlingua is processed to produce the corresponding target sentence. The problen3 el' ambiguity arises when the system produces more that~ ()tie interlingua representation for a single input sentence. If the goal is to automate translation and produce output that does not require post-editing, then the presence of ambiguity has a negative impact on translation quality, since a target sentence may he produced from an unintended meaning. When it is possible to limit tile interpretations of a sentence to just those that are coherent in the translation domain, then the accuracy of the MT system is enhanced. Ambiguity can occnr at different levels of processing in source analysis. In this paper, we describe how we cope with ambiguity in the KANT controlled lexicon, grammar, and semantic domain model, and how these :ire designed to reduce or eliminate ambiguity in a given translation domain. Constraining the Source Text The KANT domain lexicon and grammar are a constrained subset of the general source language lexicon and gra,nmar. The strategy of constraining the source text has three main I I l-:igurc 1: The KANT System goals. First, it encourages clear and direct writing, which is beneficial to both the reader of tile source text and to the translation process. Second, it facilitates consistent writing among tile many authors who use the system and across all document types. And third, the selection of unambiguous words :111(I constructions to be used during authoring reduces the necessity for ambiguity resolution during the auto,natic stages of processing. It is important to reduce the processing overhead associaled wilh amhiguity resolution in order tokeep tile system fast enough for on-line use. The l)omain Lexicml The domain lexicon is built using corpt, s analysis. Lists of terms, arranged by part of speech, are automatically extracted from the corpus [Mitamura etal., 1993] . \"File lexicon consists of closed-class general words, open-class general words, idioms, and nomenclature phrases. Closed-class general words (e.g. the, with. should) are taken from general English. Open-class general words (e.g. drain, run, hot) are limited in the lexicon to one sense per part of speech with some exceptions ~. Idioms (e.g. on and off) and nomencl> tnre phrases (e.g. summing valve) are domain-specilic and are limited to those phrases identilied in the domain corpus. Phrases, too, are delined with a single sense. Special vncabt Far example, in the heavy-equipment lexicon, there are a few hundred terms out of 60,000 which have more than one sense per part of speech. ulary items, including symbols, abbreviations, and the like, ,are restricted in use and are chosen for the lexicon in collaboration with domain experts. Senses for prepositions, which are highly ambiguous and context-dependent, are determined (luring processing using the semantic domain model (of. Section 4). Nominal compounds in the domain may be several words long. Because of the potential ambiguity associated wit h compositional parsing of nominal compounds, non-productive nominal compounds are listed explicitly ill tile lexicon as idioms or nomenclature phrases. Controlled Grammar Some constructions in the general source l,'nlgtmge that arc inherently ambiguous are excluded from the restricted grammar, since they may l~td to multiple analyses during processing: \u00ae Conjunction of VPs, ADJs, or ADVs e.g. *Extend and retract the cylinder. \u2022 Pronominal reference, e.g. *Start the engine and keel) it running. \u2022 Ellipsis, e.g. reduced relative clauses: *the tools !~t for the procedure \u2022 Long-distance dependencies, snch as interrogatives and object-gap relative clauses, e.g. The parts which the service representative ordered. \u2022 Nominal compounding which is not explicitly coded in the phrasal lexicon. On the other h,'md, tim grammar inchules the following constructions: \u2022 Active, passive and imperative sentences, e.g. Start the engine. \u2022 Conjunction of NPs, PPs or Ss. Sentences may be conjoined using coordinate or subordinate con jr, notions, e.g. If you are on the last parameter, ~zen lhe program proceeds to the lop. \u2022 Subject-gap relative clauses, e.g. The service representative can determine the parts which are faulty. Tile recommendations in tile controlled grammar include guidelines for authoring, such as how to rewrile a text from general English into the domain language. Authors are ad-'vised, for example, to choose the most concise terms available in the lexicon and to rewrite long, conjoined sentences into short, simple ones. The parser in KANT is based on the \"Universal Parser\" [Tonfita and Carbonell, 19871 . \"File gramnmr consists of context-free rules that define tile input's constitt,ent structure (c-structure) and these rules are annotated with constraint equations that define the input's functional structure (f-structure). 'l'omita's parser compiles the gratnnmr into an l.R-table, and the constraint equations into Lisp code. Although this compilation results in f.'lst run-time parsing, the need to minimize ambiguity still exists. One source of ambiguity is the attachment site for a prepositional phrase, llowever, many of the PP attachments are encoded directly.in the gramma,\" because tile syntactic context indicates an unanfl)iguous attaclunent site. For example: + A partitive where the PP attaches to the noun: a gallon of antifreeze. ) )) \u2022 A pre-sentential I P where tile I [ attaches to the sentence: For this test, ensttre thor a signal line is connected from lhe pump outpul to the pump compensator. \u2022 A PI' attaches to the verb be when there is no predicale adjective: The trm:'k is in the shop. \u2022 A ditransitive verb where the PP attaches to the verb: Give your suggestions to tile dealer. ,, A stand-alone PP inside ;m SGML tag such as QUAL-II\"IER where tile PP attaches to tile MDLDESC tag contents: Inspect <mdldesc> all track-type tractors <qualifier> with hydraulic heads </qualifier> </mdldesc>. 3.1 l'assive vs. Cnpt,l'lr with Participial? There are many adjectives in English that have tile same form . as ,'m -ed participle, l:or example: 7\"tie radius is poorly formed. (adjective) The calibration mode is enabled by moving the rocker switch. (participle) i \"R} distinguish the qdjectival from the participial form we have added two heuristics to tile constraint rules of the grammar. The litst is to use verb class mapping information, If the verb is classified as being more active than stative, then tile passive reading is preferred. So, for example, an intransitive verb would indicate an adjectival reading: The display is faded. (adjective) The second heuristic uses the notion of \"quasi-agents\". There are several prepositions that can introduce \"quasiagents\" [Quirk et al., 197211, such as: about, at, over, to, with. If the domain model indicates that the -ed verb is a possible attachment site for a prepositional phrase occurring in the sentence, then the passive reading is preferred. These two heuristics are incorporated into tile constraints of rules involving predicate adjectives. If the -ed feral is classified as active, or if there is at PP in the sentence that can attach to the -ed verb form, tfien tile adjectival reading is ruled out. In the constraints of rules for the passive, tim passive reading is ruled out if the -ed form is classified as smtive. Adverb or Adjective? For tile most part, eacfi word in the system is limited to one meaning per part of speeclt. So while we have nearly eliminated one source of lexical ambiguity, there is still the l)roblem of ambiguity between the various parts of speech for a particuhlr word. While ambiguity between, lbr example, a noun and a verb is usually resolved by the syntactic context, parts of speech that participate in similar contexts are still a problem. For example, the content of the SGML tag, POSITION, can be an adjective or adverb phrase and \"as [ <adj >l<ad v >] as\" can contain either an adjective or an adverb. This means that an input such as \"as fast as\" would have two analyses. We Imve found witll our domain that tile COtTeCt thing to do is to prefer the adverb reading. We put this preference directly into the constraints of rules involvingadjectives for which the same context allows an adverb. If the word is also an adverb then tim adjective rule will fail. This allows tile adverb reading to be preferred. Semantic Donmin Model We have implemented a practical method for integrating semantic rules intoan LR parser. The resulting system combines the merits of a semantic domain nlodel with the generality and wide coverage of syntactic parsing, and is fast and efficient enough to remain practical. Interleaved vs. Sentence-final Constraints Some previous knowledge-l)ased natural hmglmge analysis systems have constructed tile semantic represent'ilion for the sentence in tandem with syntactic parsing, lit this schenle semantic constr;fints from tile domain model filter out semantically ill-lormed representations and kill tile associated pro'sing path. Examples include AIISITY tHirst, 19861 and KBMT-89 [Goodman anti Nireuburg, 1991] . Other inevious systems have delayed semantic interpretation and al)plicalion of semantic well-formedness constraints until after tile syntactic parse. Both of these schemes entail performance problems. The solution to this probleln lies ill importing the right type and right amount of semantic information into syntactic lmrsing. Iu KANT, the relevant knowledge sonrces are reorganized into data structures that arc optimized for ambiguity resolution during parsing. Example of Attachment Ambiguity Using Semantics in tile Syntax In order tO keel) parsing traclable, the domain model is consuited at the earliest possible stage during parsing. Every grannnar rule that involves an attachment decision that is subject to knowledge-based disamhigv'ltion calls a function that consults the domain model, and allows the gramn/ar rule to succeed only if the attachmcut is sclnantically licensed. The grammar formalism allows procedural calls to be made directly fron/tim gramnmr rules. The function that performs or deuies attachment based on the domaiu model is called sere-attach. The inpttts to the sem-att ach function are the functiomll structures (f-strttcturcs) lk)r the potential attachment site, tile structure to be attached, and the type of attachment (e.g., PP = t:'repositional Phrase). sere-attach consults inlbrm,'ltion from the domain model to decide whether the attachment is semantically licensed. This process is described in the next subsection. Steps in Sem,'mtle Disaml)iguation I There are three main steps in selnanlic disambiguation of possib]e syntactic attachments: (1) mapping from syntax to semantic concepts using tile lexical mappiug rules; (2) checking inform,'ttkm from the domain model; and (3) determining semantic roles using tile semantic interpretation rules. Eflicient Run-time Use. In order to make this process as efticient as possible, aml to minimize delays during parsing, the knowledge described in this section is reorganized offline I)cfore parsing. The result of this reorganization are data strtletnres known as S&*;'lalllic\" restrictors. The SelllLIIlliL' restrictors have three main properties: ?7 v :iiii 1. They are indexed by head concept, and provide a list of all approl)riate modiiiers. 2. All inheritance in the Domain Model is performed offline, so that the restrictors contain all necessary informa.. tion. 3. The semantic restrictors are stored in a Slmce-efficient structure+shared manne, +. S Author l)isambiguatiot! Once KANT has analyzed a source sentence and all l)OSsine disambiguations h;tve been performed, there may still be more than one interlingua representation for tim sentence. This occurs when the sentence is truly ambiguous, i.e., it hns more than one acceptable domain interpretation. In this case, KANT makes use of disambiguation by the author --tile ambiguity is described to the author and the author is then pmml)ted to select the desired interpretation. The choice is \"remembered\" by placing extra in fomuttion into tile input text at the point of alnbiguity. There are two types of ambiguity cnrrently addressed by author disambit~uation: \u2022 Lexical Ambiguity. When more than one interlingua is produced because a certain word or phrase ean be in terpreted in more than one way (iv. as two different concepts), then the author is prompted to select the desired meaning. * Structural kmbigt.tity. When more than one attachment site is possible for a phrase like a prel)o~ilional phrase, the different attachments are glossed for tile :luther, who is then prompted to select tile desired inteq)retation. Since author disambiguation is utilized only when the sentence cannot I)c disambiguated by other nteans, it will not occur very frequently once tile system is complete. On tile other hand, having such a mech,'mism available during system development is very helpful, since it helps to point out where there is residu-d ambiguity left to be addressed by knowledge St} tlrce ieli neltlent. 6 Testing l)isamlfigualion Methods When disambiguation methods are int,oduced, the number of parses per sentence can be reduced dramatically. If we use a general lexicon and grammar to parse texts lro[n ~. 1 specialized dolnain corpus (rather than a general corpus), then more lmrses will be assigned than those thai are desired in the dOlnain. Figure 6 illustrates how the successive introduction of disambiguation ntethods reduces the set of l)ossiblc parses to just those desired in tile domain. The smallest set of interpretations is that remaining after tile controlled lexicon, gla[nllrar, seln[illlic restrictions, and author disambigtmtion have [)cell applied; in practice this sel ,,viii contain just one interpretation, since the author will select only the intended interpretation. Wc have experimented with tile KANT analyzer in order to determine the effects of the different disambiguation strategies mentioned above. We used a test suite containing 891 sentences which is used fo, regression testing during system development. The sentences in the test suite range in lenglh fronl t word to over 25 words. General lexicon entries were derived automatically from the online version of Wcbster's 7th dictionary. Webster's includes 55,000 reels that are in at least one open class category (verh, ram,, adjective, adverb) . One diclionary entry was created for each sense of one of these dalegories, This resulted in 117,000 lexicon entries. The constrained lexicon consists of 10,000 words and 50,000 phrases talk)red to the application 9.3 domain. For the results listed below, the \"general lexicon\" consists of the constrained lexicon plus the general entries from Webster's. The constrained grammar has been tailored to the restricted source language for the domain (of. Section 2). In ,'tddition, it includes a number of constraint annotations and parse preferences that limit the number of ambiguous parses (cf. Section 3). A general grammar was derived from the constrained grammar by removing most restrictions and constraints on specific rules, leaving only the most general constraints such as subject-verb agreement. When noun-noun compounding is allowed, sequences of nouns may form NPs even if they ~u'e not listed as nomenclature phrases in the lexicon. Each such sequence is only parsed one way; the parser does not build different smmtures for the sequence of nouns, but just reads them into a list. In order to reduce the exponential complexity of some of the longer sentences, all test results were produced using the \"shared packed forest\" method of ambiguity packing for ambiguity internal to a sentence [Tomita, 1986] . The results for \"parses per sentence\" is simply the average for all the sentences.  The results of this testing ~u'e shown in Figure 7 . Test 1 is the baseline result for parsing with a general lexicon, general grammar, noun-noun compounding and no semantic restrictions. As expected, the average number of parses per sentence is quite high (27.0). Limiting noun-noun compounding ('lest 2) cuts this number by more than hal f, yielding 1(/.2 parses per sentence. Note that a similar effect is achieved if we run the test with a controlled grammar and noun-noun compounding (Test 3, 8.4 parses per sentence). Test Constraining the lexicon seems to achieve the largest reduction in the average number of parses per sentence (Tests 4, 5, 6), with elimination of noun-notre compounding yielding only slight improvements when the lexicon has already been restricted. As expected, the best results are achieved when the system is run with constrained lexicon and grammar, no nounnoun compounding, and semantic restriction with a domain model (Test 6). We expect that tile primary reason wily tile addition of semantic restrictions from a domain model does not have a greater impact is due to tile incomplete natttre of the domain model we used in the experiment. The domain model used in the experiment captures the domain relationships associated with prepositional phrase attachment to VP and object N1; lint there are several areas of the domain model still under development. When complete, these will further reduce ambiguity by placing additional limitations on the following: \u2022 The semantic classification of words inside particular SGML tags; ,, Attachment of prepositional phrases to suhject NP; \u2022 Attachment of inlinitive clauses; ,, Attachment of relative clauses. This testing has proved extremely useful ill prioritizing the level of effort expended oil different disambiguation methods dnring system development. As is often the case, theoretically interesting or difticult issues (such as noun-noun componnding) are reduced in effect when other domain-related restrictions are put in place (such as a controlled lexicon). On the other hand, this type of testing can also identify Ihe areas of the system (such as the semantic domain model) which are not reducing ambiguity as much as expected. In our ongoing work, we will complete the domain model for the KANT he,'tvy-eqtfipment application in those areas mentioned above; in the process, we expect to rednce the average number of parses per sentence in the most constrained ease. Acl(nowledgements We would like to thank Jaime Carbonell, Radha Rao, and Todd Kaufinann, ,'rod all of ottr colleagttes on the KANT project, inchtding James Altucher, Nicholas Brownlow, Mildred Galarza, Sue Hohn, Kathi lannamico, Kevin 1(eck, Marion Kee, Sarah Law, John Leavitt, Daniela Lonsdale, Deryle Lonsdale, Jeanne Mier, Venkatesh Narayan, Amalio Nieto, and Will Walker, our sponsors at Caterpillar Inc., and onr colleagues at Carnegie Group.",
    "abstract": "In an interlingual knowledge-based machine translation system, ambiguity arises when the source 1.qnguage analyzer produces more than one interlingua expression for a source sentence. This can have a negative impact on translation quality, since a target sentence may be produced from an unintended meaning. In this paper we describe the ,nethods nsed in the KANT machine translation system to reduce or eliminate ambiguity in a large-scale application domain. We also test these methods on a large corpus of test sentences, in order to illustrate how the different disambiguation methods redtuce the average number of parses per sentence,",
    "countries": [
        "United States"
    ],
    "languages": [
        "English"
    ],
    "numcitedby": "37",
    "year": "1994",
    "month": "August",
    "title": "Coping With Ambiguity in a Large-Scale Machine Translation System"
}