{
    "article": "This paper demonstrates two annotation tools related to Propbank: Cornerstone and Jubilee. Propbank is a corpus in which the arguments of each verb predicate are annotated with their semantic roles. Propbank annotation also requires the choice of a sense id for each predicate, defined in the corresponding frameset file. Jubilee expedites the annotation process by displaying several resources of syntactic and semantic information simultaneously; easy access to each of these resources allows the annotator to quickly absorb and apply the necessary syntactic and semantic information pertinent to each predicate for consistent and efficient annotation. Cornerstone is a user-friendly xml editor, customized to allow frame authors to create and edit frameset files. Both tools have been successfully adapted to many Propbank projects; they run platform independently, are light enough to run as X11 applications and support multiple languages such as Arabic, Chinese, English, Hindi and Korean. Introduction Propbank is a corpus in which the arguments of each verb predicate are annotated with their semantic roles (Palmer et al., 2005) . Propbank annotation also requires the choice of a sense id for each predicate. Thus, for each predicate in the Propbank, there exists a corresponding frameset file encompassing one or more senses of the predicate. All frameset files are written in xml, which is somewhat difficult to read and edit. Although there already exist many xml editors, most of them require some degree of knowledge of xml, and none of them are specifically customized for frameset files. This motivated the development of our own frameset editor, Cornerstone. Jubilee is a Propbank instance editor. For each verb predicate, we create a Propbank instance that consists of the predicate's sense id and its arguments labeled with semantic roles. Previously the allocation of tasks, the annotation of argument labels and the frameset tagging were all done as separate tasks. With Jubilee, the entire annotation procedure can be done using one tool that simultaneously provides rich syntactic information as well as comprehensive semantic information. Both Cornerstone and Jubilee are developed in Java (Jdk 6.0), so they run on any platform where the Java virtual machine is installed. They are light enough to run as X11 applications. This aspect is important because Propbank data are usually stored in a server, so annotators need to update them remotely (via ssh). One of the biggest advantages of using these tools is that they accommodate several languages; in fact, the tools have been used for Propbank projects in Arabic (M. Diab et al., 2008) , Chinese (Xue and Palmer, 2009) , English (Palmer et al., 2005) and Hindi, and have been tested in Korean (Han et al., 2002) . This demo paper details how to create Propbank framesets in Cornerstone, and how to annotate Propbank instances using Jubilee. There are two modes in which to run Cornerstone: multi-lemma and uni-lemma mode. In multilemma mode, a predicate can have multiple lem-mas, whereas a predicate can have only one lemma in uni-lemma mode. Jubilee also has two modes: normal and gold mode. In normal mode, annotators are allowed to view and edit only tasks that have been claimed by themselves or by one other annotator. In gold mode, adjudicators are allowed to view and edit all tasks that have undergone at least single-annotation. How to obtain the tools Cornerstone and Jubilee are available as an open source project on Google code. 1 The webpage gives detailed instructions of how to download, install and launch the tools (Choi et al., 2009a; Choi et al., 2009b) . Description of Cornerstone Multi-lemma mode Languages such as English and Hindi are expected to run in multi-lemma mode, due to the nature of their verb predicates. In multi-lemma mode, a predicate can have multiple lemmas (e.g., 'run', 'run out', 'run up'). The xml structure of the frameset files for such langauges is defined in a dtd file, frameset.dtd. Figure 1 shows what appears when you open a frameset file, run.xml, in multi-lemma mode. The window consists of four panes: the frameset pane, predicate pane, roleset pane and roles pane. The frameset pane contains a frameset note reserved for information that pertains to all predicate lemmas and rolesets within the frameset file. The predicate pane contains one or more tabs titled by predicate lemmas that may include verb particle constructions. The roleset pane contains tabs titled by roleset ids (e.g., run.01, run.02, corresponding to different senses of the predicate) for the currently selected predicate lemma (e.g., 'run'). The roles pane includes one or more roles, which represent arguments that the predicate requires or commonly takes in usage. Uni-lemma mode Languages such as Arabic and Chinese are expected to run in uni-lemma mode. Unlike multi-1 http://code.google.com/p/propbank/   button, Jubilee's main window will be prompted (Figure 4 ). There are three views available in the main window: the treebank view, frameset view and argument view. By default, the treebank view shows the first tree (in the Penn Treebank format (Marcus et al., 1993) ) in the selected task. The frameset view displays rolesets and allows the annotator to choose the sense of the predicate with respect to the current tree. The argument view contains buttons representing each of the Propbank argument labels. Demonstrations Cornerstone We will begin by demonstrating how to view frameset files in both multi-lemma and unilemma mode. In each mode, we will open an existing frameset file, compare its interface with the actual xml file, and show how intuitive it is to interact with the tool. Next, we will demonstrate how to create and edit a new frameset file either from scratch or using an existing frameset file. This demonstration will reflect several advantages of using the tool. First, the xml structure is completely transparent to the frame authors, so that no knowledge of xml is required to manage the frameset files. Second, the tool automates some of the routine work for the frame authors (e.g., assigning a new roleset/frameset id) and gives lists of options to be chosen (e.g., a list of function tags) so that frameset creation, and the entire annotation procedure in turn, become much faster. Third, the tool checks for the completion of required fields and formatting errors so that frame authors do not have to check them manually. Finally, the tool automatically saves the changes so the work is never lost. Jubilee For the treebank view, we will compare Jubilee's graphical representation of the trees with the parenthetical representation of former tools: the clear visual representation of the phrase structure helps the annotator to better understand the syntax of the instance and to annotate the appropriate node within the correct span. For the frameset view, we will detail what kind of semantic information it provides as you choose different rolesets. This will highlight how Jubilee's support of roleset id annotation not only speeds up the annotation process, but also ensures consistent annotation because the roleset information provides a guideline for the correct annotation of a particular verb sense. For the argument view, we will illustrate how to annotate Propbank arguments and use the operators for concatenations and links; thereby also demonstrating that having each of these labels clearly visible helps the annotator to remember and evaluate the appropriateness of each possible argument label. Finally, we will show how intuitive it is to adjudicate the annotations in gold mode. Future work Both Cornerstone and Jubilee have been successfully adapted to Propbank projects in several universities such as Brandeis University, the University of Colorado at Boulder, and the University of Illinois at Urbana-Champaign. We will continuously develop the tools by improving their functionalities through user-testing and feedback, and also by applying them to more languages. Acknowledgments Special thanks are due to Prof. Nianwen Xue of Brandeis University for his very helpful insights as well as Scott Cotton, the developer of RATS and Tom Morton, the developer of WordFreak, both previously used for PropBank annotation. We gratefully acknowledge the support of the National Science Foundation Grants CISE-CRI-0551615, Towards a Comprehensive Linguistic Annotation and CISE-CRI 0709167, Collaborative: A Multi-Representational and Multi-Layered Treebank for Hindi/Urdu, and a grant from the Defense Advanced Research Projects Agency (DARPA/IPTO) under the GALE program, DARPA/CMO Contract No. HR0011-06-C-0022, subcontract from BBN, Inc. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.",
    "abstract": "This paper demonstrates two annotation tools related to Propbank: Cornerstone and Jubilee. Propbank is a corpus in which the arguments of each verb predicate are annotated with their semantic roles. Propbank annotation also requires the choice of a sense id for each predicate, defined in the corresponding frameset file. Jubilee expedites the annotation process by displaying several resources of syntactic and semantic information simultaneously; easy access to each of these resources allows the annotator to quickly absorb and apply the necessary syntactic and semantic information pertinent to each predicate for consistent and efficient annotation. Cornerstone is a user-friendly xml editor, customized to allow frame authors to create and edit frameset files. Both tools have been successfully adapted to many Propbank projects; they run platform independently, are light enough to run as X11 applications and support multiple languages such as Arabic, Chinese, English, Hindi and Korean.",
    "countries": [
        "United States"
    ],
    "languages": [
        "Hindi",
        "Chinese",
        "English",
        "Arabic",
        "Korean"
    ],
    "numcitedby": "12",
    "year": "2010",
    "month": "June",
    "title": "Multilingual {P}ropbank Annotation Tools: Cornerstone and Jubilee"
}