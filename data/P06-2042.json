{
    "article": "Japanese dependency structure is usually represented by relationships between phrasal units called bunsetsus. One of the biggest problems with dependency structure analysis in spontaneous speech is that clause boundaries are ambiguous. This paper describes a method for detecting the boundaries of quotations and inserted clauses and that for improving the dependency accuracy by applying the detected boundaries to dependency structure analysis. The quotations and inserted clauses are determined by using an SVM-based text chunking method that considers information on morphemes, pauses, fillers, etc. The information on automatically analyzed dependency structure is also used to detect the beginning of the clauses. Our evaluation experiment using Corpus of Spontaneous Japanese (CSJ) showed that the automatically estimated boundaries of quotations and inserted clauses helped to improve the accuracy of dependency structure analysis. Introduction The \"Spontaneous Speech: Corpus and Processing Technology\" project sponsored the construction of the Corpus of Spontaneous Japanese (CSJ) (Maekawa et al., 2000) . The CSJ is the biggest spontaneous speech corpus in the world, consisting of roughly 7M words with the total speech length of 700 hours, and is a collection of monologues such as academic presentations and simulated public speeches. The CSJ includes transcriptions of the speeches as well as audio recordings of them. Approximately one tenth of the speeches in the CSJ were manually annotated with various kinds of information such as morphemes, sentence boundaries, dependency structures, and discourse structures. In Japanese sentences, word order is rather free, and subjects or objects are often omitted. In Japanese, therefore, the syntactic structure of a sentence is generally represented by the relationships between phrasal units, or bunsetsus in Japanese, based on a dependency grammar, as represented in the Kyoto University text corpus (Kurohashi and Nagao, 1997) . In the same way, the syntactic structure of a sentence is represented by dependency relationships between bunsetsus in the CSJ. For example, the sentence \"\u5f7c\u306f \u3086\u3063\u304f\u308a\u6b69\u3044\u3066\u3044\u308b\" (He is walking slowly) can be divided into three bunsetsus, \"\u5f7c\u306f, kare-wa\" (he), \"\u3086\u3063\u304f\u308a, yukkuri\" (slowly), and \"\u6b69\u3044\u3066 \u3044\u308b, arui-te-iru\" (is walking). In this sentence, the first and second bunsetsus depend on the third one. The dependency structure is described as follows. \u5f7c\u306f\u2500\u2500\u2500\u2500\u2500\u2510 (he) \u2502 \u3086\u3063\u304f\u308a\u2500\u2524 (slowly) \u6b69\u3044\u3066\u3044\u308b (is walking) In this paper, we first describe the problems with dependency structure analysis of spontaneous speech. We focus on ambiguous clause boundaries as the biggest problem and present a solution. Problems with Dependency Structure Analysis in Spontaneous Japanese There are many differences between written text and spontaneous speech, and consequently, problems peculiar to spontaneous speech arise in de-pendency structure analysis, such as ambiguous clause boundaries, independent bunsetsus, crossed dependencies, self-corrections, and inversions. In this study, we address the problem of ambiguous clause boundaries in dependency structure analysis in spontaneous speech. We treated the other problems in the same way as Shitaoka et al. (Shitaoka et al., 2004) . For example, inversions are represented as dependency relationships going in the direction from right to left in the CSJ, and their direction was changed to that from left to right in our experiments. In this paper, therefore, all the dependency relationships were assumed to go in the direction from left to right (Uchimoto et al., 2006) . There are several types of clause boundaries such as sentence boundaries, boundaries of quotations and inserted clauses. In the CSJ, clause boundaries were automatically detected by using surface information (Maruyama et al., 2003) , and sentence boundaries were manually selected from them (Takanashi et al., 2003) . Boundaries of quotations and inserted clauses were also defined and detected manually. Dependency relationships between bunsetsus were annotated within sentences (Uchimoto et al., 2006) . Our definition of clause boundaries follows the definition used in the CSJ. Shitaoka et al. worked on automatic sentence boundary detection by using SVM-based text chunking. However, quotations and inserted clauses were not considered. In this paper, we focus on these problems in a context of ambiguous clause boundaries. Quotations In written text, quotations are often bracketed by \u300c\u300d(angle brackets), but no brackets are inserted in spontaneous speech. ex) \"\u4e00\u5ea6\u3067\u3082\u3044\u3044\u304b\u3089\u884c\u3063\u3066\u307f\u305f\u3044\" (I want to go there at any rate) is a quotation. In the CSJ, quotations were manually annotated as follows. \u3053\u3053\u306f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 (here) \u6614\u304b\u3089\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 (since early times) \uff5b\u4e00\u5ea6\u3067\u3082\u2500\u2500\u2510 \u2502 (once) \u3044\u3044\u304b\u3089\u2500\u2524 \u2502 (at any rate) \u884c\u3063\u3066\u307f\u305f\u3044\uff5d\u3068\u2500\u2524 (want to go) \u601d\u3063\u3066\u3044\u305f\u3068\u3053\u308d\u3067\u3059 (is the place I think) Inserted Clauses In spontaneous speech, speakers insert clauses in the middle of other clauses. This occurs when speakers change their speech plans while produc- Dependency relationships are closed within a quotation or an inserted clause. Therefore, dependencies except the rightmost bunsetsu in each clause do not cross boundaries of the same clause, meaning no dependency exists between the bunsetsu inside a clause and that outside the clause. However, automatically detected dependencies often cross clause boundaries erroneously because sentences including quotations or inserted clauses can have complicated clause structures. This is one of the reasons dependency structure analysis of spontaneous speech has more errors than that of written texts. We propose a method for improving dependency structure analysis based on automatic detection of quotations and inserted clauses. Dependency Structure Analysis and Detection of Quotations and Inserted Clauses The outline of the proposed processes is shown in Figure 1 . Here, we use \"clause\" to describe a quotation and an inserted clause. Dependency Structure Analysis In this research, we use the method proposed by Uchimoto et al. (Uchimoto et al., 2000) to ana-lyze dependency structures. This method is a twostep procedure, and the first step is preparation of a dependency matrix in which each element represents the likelihood that one bunsetsu depends on another. The second step of the analysis is finding an optimal set of dependencies for the entire sentence. The likelihood of dependency is represented by a probability, using a dependency probability model. The model in this study (Uchimoto et al., 2000) takes into account not only the relationship between two bunsetsus but also the relationship between the left bunsetsu and all the bunsetsu to its right. We implemented this model within a maximum entropy modeling framework. The features used in the model were basically attributes related to the target two bunsetsus: attributes of a bunsetsu itself, such as character strings, parts of speech, and inflection types of a bunsetsu together with attributes between bunsetsus, such as the distance between bunsetsus, etc. Combinations of these features were also used. In this work, we added to the features whether there is a boundary of quotations or inserted clauses between the target bunsetsus. If there is, the probability that the left bunsetsu depends on the right bunsetsu is estimated to be low. In the CSJ, some bunsetsus are defined to have no modifiee. In our experiments, we defined their dependencies as follows. \u00afThe rightmost bunsetsu in a quotation or an inserted clause depends on the rightmost one in the sentence. \u00afIf a sentence boundary is included in a quotation or an inserted clause, the bunsetsu to the immediate left of the boundary depends on the rightmost bunsetsu in the quotation or the inserted clause. \u00afOther bunsetsus that have no modifiee depend on the next one. Detection of Quotations and Inserted Clauses We regard the problem of clause boundary detection as a text chunking task. We used Yam-Cha (Kudo and Matsumoto, 2001) as a text chunker, which is based on Support Vector Machine (SVM). We used the chunk labels consisting of three tags which correspond to sentence boundaries, boundaries of quotations, and boundaries of inserted clauses, respectively. The tag for sentence boundaries can be either E (the rightmost bunsetsu in a sentence) or I (the others). The tags for the boundaries of quotations and inserted clauses are shown in Table 1 . An example of chunk labels assigned to each bunsetsu in a sentence is as follows. ex) \"\u4e88\u7b97\u306e\u95a2\u4fc2\u3060\" (It is because of the budget) is a quotation, and \"\u4e88\u7b97\u306e\u95a2\u4fc2\u3060\u3068\u601d\u3044\u307e\u3059\u304c\" (which I think is because of the budget) is an inserted clause. For a chunk label, for example, the bunsetsu that the chunk label (I, B, B) is assigned to means that it is not related to a sentence boundary but is related to the beginning of a quotation and an inserted clause. (I,O,O) \u4eca\u306f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 (now) (I,B,B)( \uff5b\u4e88\u7b97\u306e\u2510 \u2502 (budget) (I,E,I) \u95a2\u4fc2\u3060\uff5d\u3068\u2510 \u2502 (because of) (I,O,E) \u601d\u3044\u307e\u3059\u304c) \u2502 (I think) (I,O,O) \u4e00\u590f\u306b\u2500\u2510 \u2502 (in summer) (I,O,O) \u4e09\u56de\u3050\u3089\u3044\u3057\u304b\u2500\u2500\u2524 (three times) (E,O,O) \u3084\u308a\u307e\u305b\u3093 (they do it) The three tags of each chunk label are simultaneously estimated. Therefore, the relationships between sentence boundaries, quotations, and inserted clauses are considered in this model. For instance, quotations and inserted clauses should not cross the sentence boundaries, and the chunk label such as (E,I,O) is never estimated because this label means that a sentence boundary exists within a quotation. We used the following parameters for YamCha. \u00afDegree of polynomial kernel: 3rd \u00afAnalysis direction: Right to left \u00afDynamic features: Following three chunk labels \u00afMulti-class method: Pairwise The chunk label is estimated for each bunsetsu, The features used to estimate the chunk labels are as follows. (1) word information We used word information such as character strings, pronunciation, part of speech, inflection type, and inflection form. Specific expressions are often used at the ends of quotations and inserted clauses. For instance, \"\u3068\u601d\u3046, to-omou\" (think) and \"\u3063\u3066\u8a00\u3046, tte-iu\" (say) are used at the ends of quotations. Expressions such as \"\u3067\u3059 \u304c, desu-ga\" and \"\u3051\u308c\u3069\u3082, keredo-mo\" are used at the ends of inserted clauses. (2) fillers and pauses Fillers and pauses are often inserted just before or after quotations and inserted clauses. Pause duration is normalized in a talk with its mean and variance. (3) speaking rate Inside inserted clauses, speakers tend to speak fast. The speaking rate is also normalized in a talk. Detecting the ends of clauses appears easy because specific expressions are frequently used at the ends of clauses as previously mentioned. However, determining the beginnings of clauses is difficult in a single process because all features mentioned above are local information. Therefore, the global information is also used to detect the beginning of the clauses. If the end of a clause is given, the bunsetsus to the left of the clause should satisfy the two conditions described in Figure 2 . Our method uses the constraint as global information. They are considered as additional features based on dependency probabilities estimated for the bunsetsus to the left of the clause. Thus, our chunking method has two steps. First, clause boundaries are detected based on the three types of features itemized above. Second, the beginnings of clauses are determined after adding to the features the following probabilities obtained by automatic dependency structure analysis. (4) probability that bunsetsu to left of target depends on bunsetsu inside clause (5) probability that bunsetsu to immediate left of target depends on bunsetsu to right of clause Figure 2 shows that the target bunsetsu is likely to be the beginning of the clause if probability ( 4 ) is low and probability (5) is high. For instance, the following example sentence has an inserted clause. In the first chunking step, the bunsetsu \"\u8a71\u306a\u3093\u3067\u3059\u3051\u3069\" (which is a story) is found to be the end of the inserted clause. ex) \"\u7236\u304b\u3089\u805e\u3044\u305f\u8a71\u306a\u3093\u3067\u3059\u3051\u3069\" (which is a story that I heard from my father) is an inserted clause. \u3053\u306e\u2500\u2510 (this) \u8fba\u308a\u306f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 (area) (\u7236\u304b\u3089\u2510 \u2502 (from my father) \u805e\u3044\u305f\u2500\u2510 \u2502 (heard) \u8a71\u306a\u3093\u3067\u3059\u3051\u3069)\u2502 (story) \u6614\u2500\u2500\u2500\u2500\u2500\u2500\u2524 (in the old days) \u305f\u3093\u307c\u3060\u3063\u305f\u3093\u3067\u3059 (was a rice field) The three bunsetsus \"\u8fba\u308a\u306f, atari-wa\", \"\u805e\u3044 \u305f, kii-ta\", and \"\u8a71\u306a\u3093\u3067\u3059\u3051\u3069, hanashi-nandesu-kedo\" are less likely to be the beginning of the inserted clause because in the three cases the bunsetsu to the immediate left depends on the target bunsetsu. On the other hand, the bunsetsu \"\u7236\u304b\u3089, chichi-kara\" is the most likely to be the beginning since the bunsetsu to its immediate left \"\u8fba\u308a\u306f, atari-wa\" depends on the bunsetsu to the right of the inserted clause \"\u7530\u3093\u307c\u3060\u3063\u305f\u3093\u3067\u3059, tanbo-datta-ndesu\". Experiments and Discussion For experimental evaluation, we used the transcriptions of 188 talks in the CSJ, which contain 6,255 quotations and 818 inserted clauses. We used 20 talks for testing. The test data included 643 quotations and 76 inserted clauses. For training, we used 168 talks excluding the test data to conduct the open test and all the 188 talks to conduct the closed test. First, we detected sentence boundaries by using the method (Shitaoka et al., 2004) and analyzed the dependency structure of each sentence by the method described in Section 3.1 without using information on quotations and inserted clauses. We obtained an F-measure of 85.9 for the sentence boundary detection, and the baseline accuracy of the dependency structure analysis was 77.7% for the open test and 86.5% for the closed test. (a) Results of clause boundary detection The results obtained by the method described in Section 3.2 are shown in Table 2 . The table shows five kinds of results: \u00afresults obtained without dependency structure (in the first chunking step) \u00afresults obtained with dependency structure analyzed for the open test (in the second chunking step) \u00afresults obtained with dependency structure analyzed for the closed test (in the second chunking step) \u00afresults obtained with manually annotated dependency structure (in the second chunking step) \u00afthe rate that the ends of clauses are detected correctly These results indicate that around 90% of quotations were detected correctly, and the boundary detection accuracy of quotations was improved by using automatically analyzed dependency structure. We found that features (4) and ( 5 ) in Section 3.2 obtained from automatically analyzed dependency structure contributed to the improvement. In the following example, a part of the quotation \"\u81ea\u5206\u306e\u3044\u3044\u9577\u6240\u3058\u3083\u306a\u3044\u304b\" (my good virtue) was erroneously detected as a quotation in the first chunking step. But, in the second chunking step, automatically analyzed dependency structure contributed to detection of the correct part \"\u3053\u308c\u306f\u81ea \u5206\u306e\u3044\u3044\u9577\u6240\u3058\u3083\u306a\u3044\u304b\" (this is my good virtue) as a quotation. \uff5b\u3053\u308c\u306f\u2500\u2500\u2500\u2500\u2500\u2510 (this) \u81ea\u5206\u306e\u2500\u2500\u2500\u2500\u2524 (my) \u3044\u3044\u2500\u2500\u2500\u2500\u2524 (good) \u9577\u6240\u3058\u3083\u306a\u3044\u304b\uff5d\u3068\u2500\u2510 (virtue) \u79c1\u306f\u2500\u2524 (I) \u601d\u3044\u307e\u3059 (think) We also found that the boundary detection accuracy of quotations was significantly improved by using manually annotated dependency structure. This indicates that the boundary detection accuracy of quotations improves as the accuracy of dependency structure analysis improves. By contrast, only a few inserted clauses were detected even if dependency structures were used. Most of the ends of the inserted clauses were detected incorrectly as sentence boundaries. The main reason for this is our method could not distinguish between the ends of the inserted clauses and those of the sentences, since the same words often appeared at the ends of both, and it was difficult  to learn the difference between them even though our method used features based on acoustic information. (b) Dependency structure analysis results We investigated the accuracies of dependency structure analysis obtained when the automatically or manually detected boundaries of quotations and inserted clauses were used. The results are shown in Table 3 . Although the accuracy of detecting the boundaries of quotations and inserted clauses using automatically analyzed dependency structure was not high, the accuracy of dependency structure analysis was improved by 0.7% absolute for the open test. This shows that the model for dependency structure analysis could robustly learn useful information on clause boundaries even if errors were included in the results of clause boundary detection. In the following example, for instance, \"\u9854\u631f\u3093\u3067\u5916\u306b\u51fa\u3066\u3057\u307e\u3046\" (to go out with its face stuck) was correctly detected as a quotation in the first chunking step. Then, the initial inappropriate modifiee \"\u899a\u3048\u3066\u304d\u3066, oboe-te-ki-te\" (learn) of the bunsetsu inside the quotation \"\u631f\u3093 \u3067, hasan-de\" (stick) was correctly modified to the bunsetsu inside the quotation \"\u51fa\u3066\u3057\u307e\u3046\u3068\u3044\u3046, de-te-shimau-to-iu\" (to go) by using the automatically detected boundary of the quotation. 4 and 5 , respectively. When correct sentence boundaries were given, the accuracy of clause detection and dependency structure analysis was improved significantly. Table 4 shows that the boundary detection accuracy of inserted clauses as well as that of quotations was significantly improved by using information of dependencies. Table 5 indicates that when using automatically detected clause boundaries, the accuracy of dependency structure analysis was improved by 0.7% for the open test, and it was further improved by using correct clause boundaries. These experimental results show that detecting the boundaries of quotations and inserted clauses as well as sentence boundaries is sensitive to the accuracy of dependency structure analysis and the improvements of the boundary detection of quotations and inserted clauses contribute to improvement of dependency structure analysis. Especially, the difference between Table3 and 5 shows that the sentence boundary detection accuracy is more sensitive to the accuracy of dependency structure analysis than the boundary detection accuracy of quotations and inserted clauses. This indicates that sentence boundaries rather than quotations and inserted clauses should be manually examined first to effectively improve the accuracy of dependency structure analysis in a semi-automatic way. Conclusion This paper described the method for detecting the boundaries of quotations and inserted clauses and that for applying it to dependency structure analysis. The experiment results showed that the automatically estimated boundaries of quotations and inserted clauses contributed to improvement of dependency structure analysis. In the future, we plan to solve the problems found in the experiments and investigate the robustness of our method when the  results of automatic speech recognition are given as the inputs. We will also study use of information on quotations and inserted clauses to text formatting, such as text summarization.",
    "abstract": "Japanese dependency structure is usually represented by relationships between phrasal units called bunsetsus. One of the biggest problems with dependency structure analysis in spontaneous speech is that clause boundaries are ambiguous. This paper describes a method for detecting the boundaries of quotations and inserted clauses and that for improving the dependency accuracy by applying the detected boundaries to dependency structure analysis. The quotations and inserted clauses are determined by using an SVM-based text chunking method that considers information on morphemes, pauses, fillers, etc. The information on automatically analyzed dependency structure is also used to detect the beginning of the clauses. Our evaluation experiment using Corpus of Spontaneous Japanese (CSJ) showed that the automatically estimated boundaries of quotations and inserted clauses helped to improve the accuracy of dependency structure analysis.",
    "countries": [
        "Japan"
    ],
    "languages": [
        "Japanese"
    ],
    "numcitedby": "1",
    "year": "2006",
    "month": "July",
    "title": "Detection of Quotations and Inserted Clauses and Its Application to Dependency Structure Analysis in Spontaneous {J}apanese"
}