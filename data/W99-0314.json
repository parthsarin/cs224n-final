{
    "article": "This paper describes how to automatically extract grounding features and segment a dialogue into discourse units, once the dialogue has been annotated with the DR/ backward-and forward-looking tags. Such an approach eliminates the need for separate annotation of grounding, making dialogue annotation quicker and removing a possible source of error. A preliminary test of the mapping against a human annotator is presented. Introduction The annotation scheme (AC97) developed by the Discourse Research Initiative's Backward-and Forward-Looking Group (henceforth referred to as the BF scheme) provides a set of tags that can be applied to individual utterances in a dialogue, describing the utterance's illocutionary force. The BF scheme provides a standard top-level tag set that allows researchers to reuse corpora that have been annotated for other projects, and also allows tags to be refined by individual projects to provide detail on particular phenomena being studied. There are a number of dialogue features that are of interest to researchers, and for which tagging schemes have been developed. One feature that we are concerned with is grounding, the mechanism by which dialogue participants augment their mutual beliefs. In his dissertation work (Tra94), Traum establishes a set of tags to describe grounding behavior, and then uses this taxonomy of grounding acts to describe a computational model of how dialogue participants achieve a state of mutual understanding. Traum's model describes how grounding acts can be combined to form discourse units, segments of a dialogue that correspond to individual contributions to the common ground. Clark and Schaefer define a contribution as the presentation of a proposition by one dialogue participant, as well as all subsequent related utterances until there is adequate evidence that the initial utterance was understood or abandoned (CS89). Discourse units are the level of granularity at which other dialogue tags, such as the problem-solving acts described in (SA97), are app!ied. Annotating dialogues can be a time-consuming and error-prone undertaking. To make the annotation process easier and more reliable, care should be taken to avoid manually tagging information that can be derived from other tags or that can be automatically extracted. This paper explores how we can automatically annotate dialogues with grounding tags, given a corpus that has been annotated with the BF tags. Once grounding has been marked, we can automatically segment the dialogue into discourse units, using Traum's model. In order to tag with BF tags or grounding tags, a dialog must be segmented into utterances, a problem that is discussed briefly in section 2. Section 3 gives an overview of the BF tags and grounding tags, section 4 discusses the mapping from BF tags to grounding tags, and section 5 presents a comparison of the automatic mapping to a human annotator. 2 Segmenting dialogues into utterances . . Dialogues need to be segmented into utterances before annotation with the BF tags. Unfortunately, there is no widely accepted criteria for identifying utterances. Traum's approach to utterance segmentation is to segment utterances based on the presence of prosodic evidence such as pauses and boundary tones, and on changes of speaker. The benefit of this approach is that it can be done automatically given prosodic annotation. However, we have found this approach to be somewhat problematic since very often the resulting utterance units need to be combined or split when assigning the BF tags. Traum uses a special grounding tag, CONTINUE, when a prosodically-segraented utterance is not an independent grounding act, but rather part of the same grounding act as a previous utterance by the same speaker. Another possible approach to utterance segmentation for BF tagging is to allow the annotator to segment the dialogue and label it for BF tags at the same time. The problem with this approach is that different annotators may segment the same dialogue differently, making it difficult to compare annotations. One way of dealing with this problem is to have subsequent annotators use the first annotator's segmentation. A drawback of this solution is that the first annotator's segmentation may influence subsequent BF labeling. Despite this drawback, we are assuming the second approach in order to avoid the need to split or join utterances, and therefore do not need Traum's CONTINUE tag. Overview of Tag Sets Table 1 shows the illocutionary act features included in the BF tagging scheme, along with the tags for each feature. Actions performed during the grounding process are shown in Response-to (any prior utt number) In this case, the dialogue participant is making an solicited repair. All utterances having a SIGNAL-NON-UNDERSTANDING BF tag receive a REQUEST-REPAIR grounding tag. An utterance is given a REQUEST-ACKNOWLEDGE grounding tag when it has either of the following patterns of BF tags: 1. The utterance is tagged as CHECK. These are check-questions, also known as tag-questions, and include examples such as we will take the top route right?. The reason that this case is somewhat problematic to our scheme is that it is not clear that utterance 2 should be tagged as an ACCEPT of utterance 1 in the BF scheme, and if the BF annotators fail to tag utterance 2 as an ACCEPT, it will not be identified as an ACKNOWLEDGE. (In the BF scheme, the Understanding feature is only tagged when an explicit acknowledgement or signal of non-understanding is made.) Evaluation In order to determine whether the mapping we propose here results in accurate grounding annotation, we wrote a Perl script to perform the mapping on SGML-format files containing dialogues annotated with the BF tags. We used the script on a set of four TRAINS-93 dialogues containing a total of 325 utterances, that had been previously tagged with BF tags (HA95; CA97). The procedure for tagging the dialogues with BF tags was to have an annotator segment and annotate the dialogue, pass the segmented (but untagged) dialogue to a second annotator to tag independently, and finally for the two annotators to meet and produce a reconciled version of the tagged dialogue. To evaluate the quality of the tags that were output by the script, we had a human annotator tag the Our grounding annotator is a computational linguist familiar with the concept of grounding but with no prior knowledge of Tranm's coding scheme, the BF coding scheme, or the mapping scheme we were using. Before performing the annotation task, the annotator read Traum's descriptions of the grounding tags, tagged a preliminary dialogue (found in Traum's dissertation), and compared the tags he assigned to those assigned by Traum. Tables 3 through 6 show the similarity of the human annotator's grounding tags to those automatically derived. The analysis is split into two parts to deal with the ability of annotators to give an utterance multiple labels. Tables 3 and 4 show a per tag analysis. If both the annotators (the human and the Perl script) gave a tag such as INIT to an utterance (in addition to possibly other tags) then it is counted as agreement with respect to the INIT tag. Table 3 shows the number of times a tag appeared and the number of times there was disagreement.  See (Car96; SC88) for more details on these measures and the significance levels listed. Table 5 presents the various combinations of grounding tags seen in the corpus. Disagreement is counted whenever two utterances do not have the same exact set of tags. Since the groups of tags are mutually exclusive, we can calculate PA, PE, and kappa over all the tag groups. If agree = utterances where annotators assigned the same set of tags, then PA = agree/N. If Cj is the number of times a set of tags such as CANCEL or INIT+ACK was assigned, then PE = ~' ~j15___ 1 ( Cj / 2N) e. The definition of kappa remains the same. Given these definitions, PA = 0.7477, PE = 0.2876, and kappa = 0.6458. To help determine where the disagreements occurred, a simple measure of PA was applied to the tag sets, if agreeonTag = cases where annotators agreed on a certain tag and NTag = occurences of tag, then in table 6, PA = agreeon Tag/ Ntag. The kappa of the \"All-or-nothing\" analysis is somewhat low compared with the 0.67 standard for tentative conclusions and the 0.8 standard for reliable results as reported in (Car96). The \"partial credit\" analysis is more favorable as the kappas for INIT and ACK are close to the 0.8 standard. The grounding tags are somewhat independent; an init always starts a new discourse unit whether or not it also acknowledges a previous discourse unit. Thus, the partial credit analysis is likely to be closer to the actual reliability we want to measure. The remaining \"partial credit\" kappas have low significance levels indicating that more examples are needed to calculate these measures. Another limitation of this study was that technical papers were used for annotator training rather than an annotation manual designed to explain how tags apply in different situations. This was especially problematic when several tags seemed to apply at once. The BF tags themselves were not perfect as explained in (CA97). Kappas for these annotations varied from the lowest at 0.15 to 0.77 for the highest. Given these limitations, the results of this experiment are promising. An annotation manual needs to be developed for labeling grounding and more dialogs need to be labeled. When these sources of confusion are addressed, analysis of remaining differences will reveal any minor changes necessary to the mapping. Conclusion We have presented an automatic mapping from DRI backward-and forward-looking tags to grounding features and discourse units. Our approach assumes simultaneous segmentation into utterance units and annotation of BF tags, which eliminates the need to split or join utterances. The mapping is still being tested but preliminary comparison with a human annotator was \u2022 promising. Automatic derivation of grounding tags will eliminate the need for separate annotation of grounding, making dialogue annotation quicker and removing a possible source of error. Acknowledgments This work was supported in part by DARPA grant 5-28838 and by National Science Foundation grants iRL9503312 and 5-28789.",
    "abstract": "This paper describes how to automatically extract grounding features and segment a dialogue into discourse units, once the dialogue has been annotated with the DR/ backward-and forward-looking tags. Such an approach eliminates the need for separate annotation of grounding, making dialogue annotation quicker and removing a possible source of error. A preliminary test of the mapping against a human annotator is presented.",
    "countries": [
        "United States"
    ],
    "languages": [
        ""
    ],
    "numcitedby": "5",
    "year": "1999",
    "month": "",
    "title": "Automatically Extracting Grounding Tags from {BF} Tags"
}