{
    "article": "In this paper we propose several novel approaches to improve phrase reordering for statistical machine translation in the framework of maximum-entropy-based modeling. A smoothed prior probability is introduced to take into account the distortion effect in the priors. In addition to that we propose multiple novel distortion features based on syntactic parsing. A new metric is also introduced to measure the effect of distortion in the translation hypotheses. We show that both smoothed priors and syntax-based features help to significantly improve the reordering and hence the translation performance on a large-scale Chinese-to-English machine translation task. Introduction Over the past decade, statistical machine translation (SMT) has evolved into an attractive area in natural language processing. SMT takes a source sequence, S = [s 1 s 2 . . . s K ] from the source language, and generates a target sequence, T * = [t 1 t 2 . . . t L ], by finding the most likely translation given by: T * = arg max T p(T |S) (1) In most of the existing approaches, following (Brown et al., 1993) , Eq. ( 1 ) is factored using the source-channel model into T * = arg max T p(S|T )p \u03bb (T ), (2) where the two models, the translation model, p(S|T ), and the language model (LM), p(T ), are es-timated separately: the former using a parallel corpus and a hidden alignment model and the latter using a typically much larger monolingual corpus. The weighting factor \u03bb is typically tuned on a development test set by optimizing a translation accuracy criterion such as BLEU (Papineni et al., 2002) . In recent years, among all the proposed approaches, the phrase-based method has become the widely adopted one in SMT due to its capability of capturing local context information from adjacent words. Word order in the translation output relies on how the phrases are reordered based on both language model scores and distortion cost/penalty (Koehn et al., 2003) , among all the features utilized in a maximum-entropy (loglinear) model (Och and Ney, 2002) . The distortion cost utilized during the decoding is usually a penalty linearly proportional to the number of words in the source sentence that are skipped in a translation path. In this paper, we propose several novel approaches to improve reordering in the phrase-based translation with a maximum-entropy model. In Section 2, we review the previous work that focused on the distortion and phrase reordering in SMT. In Section 3, we briefly review the baseline of this work. In Section 4, we introduce a smoothed prior probability by taking into account the distortions in the priors. In Section 5, we present multiple novel distortion features based on syntactic parsing. A new distortion evaluation metric is proposed in Section 6 and experimental results on a large-scale Chinese-English machine translation task are reported in Section 7. Section 8 concludes the paper. Previous Work Significant amount of research has been conducted in the past on the word reordering problem in SMT. In (Brown et al., 1993) IBM Models 3 through 5 model reordering based on the surface word information. For example, Model 4 attempts to assign target-language positions to source-language words by modeling d(j|i, K, L) where j is the targetlanguage position, i is the source-language position, K and L are respectively source and target sentence lengths. These models are not effective in modeling reordering because they do not have enough context and lack structural information. Phrase-based SMT systems such as (Koehn et al., 2003) move from using words as translation units to using phrases. One of the advantages of phrasebased SMT systems is that the local reordering is inherent in the phrase translations. However, phrasebased SMT systems capture reordering instances and not reordering phenomena. It has trouble to produce the right translation order if the training data does not contain the specific phrase pairs. For example, phrases do not capture the phenomenon that Arabic adjectives and nouns need to be reordered. Instead of directly modeling the distance of word movement, some phrase-level reordering models indicate how to move phrases, also called orientations. Orientations typically apply to the adjacent phrases. Two adjacent phrases can be either placed monotonically (sometimes called straight) or swapped (non-monotonically or inverted). In (Och and Ney, 2004; Tillmann, 2004; Kumar and Byrne, 2005; Al-Onaizan and Papineni, 2006; Xiong et al., 2006; Zens and Ney, 2006; Ni et al., 2009) , people presented models that use lexical features from the phrases to predict their orientations. These models are very powerful in predicting local phrase placements. In (Galley and Manning, 2008) a hierarchical orientation model is introduced that captures some non-local phrase reordering by a shift reduce algorithm. Because of the heavy use of lexical features, these models tend to suffer from data sparseness problems. Syntax information has been used for reordering, such as in (Xia and McCord, 2004; Collins et al., 2005; Wang et al., 2007; Li et al., 2007; Chang et al., 2009) . More recently, in (Ge, 2010) a proba-bilistic reordering model is presented to model directly the source translation sequence and explicitly assign probabilities to the reordering of the source input with no restrictions on gap, length or adjacency. The reordering model is used to generate a reordering lattice which encodes many reordering and their costs (negative log probability). Another recent work is (Green et al., 2010) , which estimates future linear distortion cost and presents a discriminative distortion model that predicts word movement during translation based on multiple features. This work differentiates itself from all the previous work on the phrase reordering as the following. Firstly, we propose a smoothed distortion prior probability in the maximum-entropy-based MT framework. It not only takes into account the distortion in the prior, but also alleviates the data sparseness problem. Secondly, we propose multiple syntactic features based on the source-side parse tree to capture the reordering phenomena between two different languages. The correct reordering patterns will be automatically favored during the decoding, due to the higher weights obtained through the maximum entropy training on the parallel data. Finally, we also introduce a new metric to quantify the effect on the distortions in different systems. The experiments on a Chinese-English MT task show that these proposed approaches additively improve both the distortion and translation performance significantly. Maximum-Entropy Model for MT In this section we give a brief review of a special maximum-entropy (ME) model as introduced in (Ittycheriah and Roukos, 2007) . The model has the following form, p(t, j|s) = p 0 (t, j|s) Z exp i \u03bb i \u03c6 i (t, j, s), ( 3 ) where s is a source phrase, and t is a target phrase. j is the jump distance from the previously translated source word to the current source word. During training j can vary widely due to automatic word alignment in the parallel corpus. To limit the sparseness created by long jumps, j is capped to a window of source words (-5 to 5 words) around the last translated source word. Jumps outside the window are treated as being to the edge of the window. In Eq. ( 3 ), p 0 is a prior distribution, Z is a normalizing term, and \u03c6 i (t, j, s) are the features of the model, each being a binary question asked about the source and target streams. The feature weights \u03bb i can be estimated with the Improved Iterative Scaling (IIS) algorithm. Several categories of features have been proposed: \u2022 Lexical features that examine source word, target word and jump; \u2022 Lexical context features that examine the previous and next source words, and also the previous two target words; \u2022 Segmentation features based on morphological analysis; \u2022 Part-of-speech (POS) features that collect the syntactic information from the source and target words; \u2022 Coverage features that examine the coverage status of the source words to the left and to the right. They fire only if the left source is open (untranslated) or the right source is closed. <=-5 -4 -3 -2 -1 1 2 3 4 >=5 jump Distortion Priors Generally the prior distribution in Eq. (3) can contain any information we know about the future. In (Ittycheriah and Roukos, 2007) , the normalized phrase count is utilized as the prior, i.e. <=-5 -4 -3 -2 -1 1 2 3 4 >=5 jump p 0 (t, j|s) \u2248 1 l p 0 (t|s) = C(s, t) l * C(s) (4) where l is the jump window size (a constant), C(s, t) is the co-ocurrence count of phrase pair (s, t), and C(s) is the source phrase count of s. It can be seen that distortion j is not taken into account in Eq. ( 4 ). The contribution of distortion solely comes from the features. In this work, we estimate the prior probability with distortion included, p 0 (t, j|s) = p 0 (t|s)p(j|s, t) where p(j|s, t) is the distortion probability for a given phrase pair (s, t). Due to the sparseness issue in the estimation of p(j|s, t), we choose to smooth it with the global distortion probability through p(j|s, t) = \u03b1p l (j|s, t) + (1 \u2212 \u03b1)p g (j), (6) where p l is the local distortion probability estimated based on the counts of jumps for each phrase pair in the training, p g is the global distortion probability estimated on all the training data, and \u03b1 is the interpolation weight. In this work, p g is estimated based on either source POS (if it's a single-word source phrase) or source phrase size (if it's more than one word long), as shown below. p g (j) = P g (j|P OS), if |s| = 1 P g (j||s|), if |s| > 1 (7) In this way, the system can differentiate the distortion distributions for single source words with different POS tags, such as adjectives versus nouns. And in the meantime, we also differentiate the distortion distribution with different source phrase lengths. We show several examples of the jump distributions in Fig. 1 and 2 collected from 1M sentence pairs in a Chinese-to-English parallel corpus with automatic parsing and word alignment. Fig. 1 shows the count histogram for single-word phrases with POS tag as NN. The distortion with j = 1, i.e. monotone, dominates the distribution with the highest count. The reordering with j = \u22121 has the second highest count. Such pattern is shared by most of the other POS tags. However, Fig. 2 shows that the distribution of jumps for NT is quite different from NN. The jump with j = \u22121 is actually the most dominant, with higher counts than monotone translation. This is due to the different order in English when translating Chinese temporal nouns. Distortion Features Although the maximum entropy translation model has an explicit indicator of distortion, j, built into the features, we discuss in this section some novel features that try to capture the distortion phenomena of translation. These features are questions about the parse tree of the source language and in particular about the local parse node neighborhood of the current source word being translated. Figure 3 shows an example sentence from the Chinese-English Parallel Treebank (LDC2009E83) and the source language parse is displayed on the left. The features below can be viewed as either being within a parse node or asking about the coverage status of neighborhood nodes. Since these features are asking about the current coverage, they are specific to a path in the search lattice during the decoding phase of translation. Training these features is done by evaluating on the path defined by the automatic word alignment of the parallel corpus sentence. Parse Tree Modifications The 'de' construction in Chinese is by now famous. In order to ask more coherent questions about the parse neighborhood, we modify the parse structures to \"raise\" the 'de' structure. The parse trees annotated by the LDC have a structure as shown in Fig. 4 . After raising the 'de' structure we obtain the tree in Fig. 5 The transformation has been applied to the example shown in Figure 3 . The resulting flat structure facilitates the parse sibling feature discussed below. Parse Coverage Feature The first set of new features we will introduce is the source parse coverage feature. This feature is interior to a source parse node and asks if the leaves under this parse node are covered (translated) or not so far. The feature has the following components: \u03c6 i (SourceWord, TargetWord, SourceParseParent, jump, Coverage). Unary parents in the source parse tree are excluded since the feature has no ambiguity in coverage. In Figure 3 , the 'PP' node above position 5 has two children, P, NP. When translating source position 6, this feature indicates that the PP node has a leaf that is already covered. Parse Sibling Feature The second set of new features is the source parse sibling feature. This feature asks whether the neigh- boring parse node has been covered or not. The feature includes two types: \u03c6 i (SourceWord, TargetWord, SourceParseSibling, jump, SiblingCoverage, SiblingOrientation) and \u03c6 i (SourcePOS, TargetPOS, SourceParseSibling, jump, SiblingCoverage, SiblingOrientation). Some example features for the first type are shown in Table 1 , where \u03b1 i = e \u03bb i . The coverage status (Cov) of the parse sibling node indicates if the node is covered completely (1), partially (2) or not covered (0). In order to capture the relationship of the neighborhood node, we indicate the orientation which can be either of {left (-1), right (1)}. Given the example shown in Figure 3 , at source position 10, the system can now ask about the 'CP' structure to the left and the 'QP' and 'NP' structures to the right. An \u03b1 i of greater than 1.0 (meaning \u03bb i > 0) indicates that the feature increases the probability of the related target block. From these examples, it's clear that the system prefers to produce an empty translation for the Chinese word \"de\" when the 'QP' and 'NP' nodes to the right of it are already covered (the first two features in Table 1 ) and when the 'CP' node to left is still uncovered (the third feature). The last feature in the table shows \u03b1 i for the case when 'CP' has already been covered. These features are able to capture neighborhoods that are much larger than the original baseline model which only asked questions about the immediate lexical neighborhood of the current source word. A New Distortion Evaluation Metric MT performance is usually measured by such metric as BLEU which measures the MT output as a whole including word choice and reordering. It is useful to measure these components separately. Unigram BLEU (BLEUn1) measures the precision of word choice. We need a metric for measuring reordering accuracy. The naive way of counting accuracy at every source position does not account for the case of the phrasal movement. If a phrase is moved to the wrong place, every source word in the phrase would be penalized whereas a more reasonable metric would penalize the phrase movement only once if the phrase boundary is correct. We propose the following pair-wise distortion metric. From an MT output, we first extract the source visit sequence: Hyp:{h 1, h 2, . . . h n } where h i are the visit order of the source sentence. From the reference, we extract the true visit sequence: Ref:{r 1, r 2, . . . r n } The Pair-wise Distortion metric PDscore can be computed as follows: P Dscore( \u2212 \u2192 H ) = n i=1 I(h i = r j \u2227 h i\u22121 = r j\u22121 ) n ( 8) It measures how often the translation output gets the pair-wise source visit order correct. We notice that an MT metric named LRscore was proposed in (Birch and Osborne, 2010) . It computes the distance between two word order sequences, which is different from the metric we proposed here. Experiments Data and Baseline We conduct a set of experiments on a Chinese-to-English MT task. The training data includes the UN parallel corpus and LDC-released parallel corpora, with about 11M sentence pairs, 320M words in total (counted at the English side). To evaluate the smoothed distortion priors and different features, we use an internal data set as the development set and the NIST MT08 evaluation set as the test set, which includes 76 documents (691 sentences) in newswire and 33 documents (666 sentences) in weblog, both with 4 sets of references for each sentence. Instead of using all the training data, we sample the training corpus based on the dev/test set to train the system more efficiently. The most recent and good-quality corpora are sampled first. For the given test set, we obtain the first 20 instances of n-grams (length from 1 to 15) from the test that occur in the training universe and the resulting sentences then form the training sample. In the end, 1M sentence pairs are selected for the sampled training for each genre of the MT08 test set. A 5-gram language model is trained from the English Gigaword corpus and the English portion of the parallel corpus used in the translation model training. The Chinese parse trees are produced by a maximum entropy based parser (Ratnaparkhi, 1997) . The baseline decoder is a phrase-based decoder that employs both normal phrases and also non-contiguous phrases. The value of maximum skip is set to 9 in all the experiments. The smoothing parameter \u03b1 for distortion prior is set to 0.9 empiri-cally based on the results on the development set. Distortion Evaluation We evaluate the MT distortion using the metric in Eq. ( 8 ) on two hand-aligned test sets. Test-278 includes 278 held-out sentences. Test-52 contains the first 52 sentences from the MT08 Newswire set, with the Chinese input sentences manually aligned to the first set of reference translations. From the hand alignment, we extract the true source visit sequence and this is the reference. The evaluation results are in Table 2 . It is shown that the smoothed distortion prior, parse coverage feature and parse sibling feature each provides improvement on the PDscore on Test-278 and Test-52. The final system scores are 2 to 3 points absolute higher than the baseline scores. The state visit sequence in the final system is closer to the true visit sequence than that of the baseline. This indicates the advantage of using both parse-based syntactic features and also the smoothed prior that takes into account of the distortion effect. We also provide an upper-bound in the last row by computing the PDscore between the first and second set of references for Test-52. The number shows the agreement between two human translators in terms of PDscore is around 71%. System Test Translation Results Translation results on the MT08 Newswire set and MT08 Weblog set are listed in Table 3 and Table 4 respectively. The MT performance is measured with the widely adopted BLEU and TER (Snover et al., 2006) SMT system (Koehn et al., 2003) that is trained on the same training data. The number of features used in the systems are listed in the tables. We start from the maximum-entropy baseline, a system implemented similarly as in (Ittycheriah and Roukos, 2007) . It utilizes multiple features as listed in Section 3, including lexical reordering features, and produces an already significantly better performance than the normal phrase-based MT system (PBT). It is around 2.5 points better in both BLEU and TER than the PBT baseline. By adding smoothed priors, parse coverage features or parse sibling features each separately, the MT performance is improved by 0.3 to 0.6. The parse sibling feature alone provides the largest individual contribution. When adding both types of new features, the improvement is around 0.6 to 0.8 on two genres. Finally, applying all three results in the best performance (the last row). On the Newswire set, the final system is more than 3 points better than the PBT baseline and 1 point better than the ME baseline. On the Weblog set, it is more than 3 points better than PBT and 0.8 better than the ME baseline. All the MT results above are statistically significant with p-value < 0.0001 by using the tool described in (Zhang and Vogel, 2004) . Analysis To better understand the distortion and translation results, we take a closer look at the parse-based features. In Table 5 , we list the most frequent parse sibling features that are related to the Chinese phrases with \"PP VV\" structures. It is known that in Chinese usually the preposition phrases (\"PP\") are written/spoken before the verbs (\"VV\"), with a different order from English. Table 5 shows how such reordering phenomenon is captured by the parse sibling features. Recall that when \u03b1 i is greater than 1, the system prefers the reordering with that feature fired. When \u03b1 i is smaller than 1, the system will penalize the corresponding translation order during the decoding search. When the coverage is equal to 1, it means \"PP\" has been translated before translating current \"VV\". As shown in the table, those features with coverage equal to 1 have \u03b1 i lower than 1, which will result in penalties on incorrect translation orders. In Fig. 6 , we show the comparison between the 67  ME baseline output and those from the improved system with the parse-based features and smoothed distortion priors. The differences are highlighted in bold for easy understanding. The first example shows that the new system fixes the order for \"PP VV\", while the second one shows the fix for the translation of \"CP de NP\". This is consistent with the features we showed in Table 1 and 5 . The new features help to translate the Chinese text in the right order. Conclusion In this paper we have presented several novel approaches that improved phrase reordering in the framework of maximum entropy based translation. A smoothed prior probability was proposed to take into account the distortions in the priors. Several novel distortion features were presented based on the syntactic parsing. A new metric PDscore was also introduced to measure the effect of distortion in the translation hypotheses. We showed that both smoothed prior and syntax-based features additively improved the distortion and also the translation performance significantly on a large-scale Chinese-English machine translation task. How to further take advantage of the syntactic information to improve the reordering in SMT will continue to be an interesting topic in the future. Acknowledgments We would like to acknowledge the support of DARPA under Grant HR0011-08-C-0110 for fund-68 ing part of this work. The views, opinions, and/or findings contained in this article/presentation are those of the author/presenter and should not be interpreted as representing the official views or policies, either expressed or implied, of the Defense Advanced Research Projects Agency or the Department of Defense.",
    "abstract": "In this paper we propose several novel approaches to improve phrase reordering for statistical machine translation in the framework of maximum-entropy-based modeling. A smoothed prior probability is introduced to take into account the distortion effect in the priors. In addition to that we propose multiple novel distortion features based on syntactic parsing. A new metric is also introduced to measure the effect of distortion in the translation hypotheses. We show that both smoothed priors and syntax-based features help to significantly improve the reordering and hence the translation performance on a large-scale Chinese-to-English machine translation task.",
    "countries": [
        "United States"
    ],
    "languages": [
        "Chinese",
        "English"
    ],
    "numcitedby": "11",
    "year": "2011",
    "month": "June",
    "title": "Improving Reordering for Statistical Machine Translation with Smoothed Priors and Syntactic Features"
}