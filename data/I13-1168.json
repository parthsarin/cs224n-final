{
    "article": "Incorporating semantic information in the Statistical Machine Translation (SMT) framework is starting to gain some popularity in both the semantics and translation communities. In this paper, we present encouraging results obtained from experiments conducted on English to Arabic SMT system using static, dynamic, and hybrid integration of fine-grained Multiword Expression (MWE). We achieve an improvement up to 0.82 absolute BLEU score by integrating MWEs over a vanilla SMT system. We empirically show that different MWE types require different integration methods in the SMT framework. Introduction Multiword expressions (MWEs) are roughly defined by (Sag et al., 2002) as \"idiosyncratic concepts that cross word boundaries (spaces).\" MWEs are widely used, 41% of the entries in WordNet 1.7 (Fellbaum, 1998) are MWEs, but unfortunately they have proved to be hard to model in natural language processing applications. Typical statistical machine translation (SMT) systems, in particular, do not explicitly model MWEs. This might indicate that state of the art SMT systems are doing well without having any knowledge of whether a given phrase is a multiword expression or not. However, recent research (Carpuat and Diab 2010 , Bouamor et al., 2012) show that explicitly modeling MWEs in the SMT framework yields non-negligible gains depending on the integration method. In this paper we study explicit modeling of the diverse kinds of MWEs in a phrase-based SMT framework for the English-Arabic language pair. This paper is organized as follows: section 2 overviews the different types of MWEs, section 3 reviews the previous work related to MWEs and SMT. Section 4 details our approach followed by the results in section 5. Our discussion of the results is presented in section 6 and finally the conclusions are in section 7. Multiword Expressions Classification According to (Sag et al., 2002) , MWEs are broadly classified into institutionalized phrases and lexicalized phrases based on the varying degree of lexical rigidity and semantic compositionality. Institutionalized phrases are conventionalized phrases that are syntactically and semantically compositional, but statistically idiosyncratic (e.g. \"traffic light\", \"to kindle excitement\".) Lexicalized phrases have at least in part idiosyncratic syntax or semantics. They can be further broken down into: (a) Fixed expressions which undergo neither morphosyntactic variation, nor internal modification (e.g. \"by and large\", \"every which way\") [AV, AJ], (b) Semi-fixed expressions such as (1) nondecomposable idioms (e.g. \"kick the bucket\") [VNC], (2) compound nominal (e.g. \"car park\", \"part of speech\") [NNC], and (3) proper names and named entities (e.g. \"New York\") [NE] . (c) Syntactically-flexible expressions such as (1) verb particle construction (e.g. \"write up\", \"look up\") [VPC], (2) light verb constructions (e.g. \"make a decision\") [LVC], and (3) decomposable idioms (e.g. \"sweep under the rug\") [VNC] . Related Work Previous work has focused on automatically learning and integrating translations of very specific MWE categories, such as, for instance, idiomatic Chinese four character expressions (Bai et al., 2009.) MWEs have also been defined not from a lexical semantics perspective but from a SMT error reduction perspective, as phrases that are hard to align during SMT training (Lambert and Banchs, 2005) . For each of these particular cases, translation quality improved by augmenting the SMT translation lexicon with the learned bilingual MWEs either directly or through improved word alignments. Ren et al. (2009) described a method integrating an in-domain bilingual MWE to Moses by introducing an additional feature that identifies whether or not a bilingual phrase contains bilingual MWEs. This approach was generalized in Carpuat and Diab (2010) who replaced the binary feature by a count feature representing the number of MWEs in the source language phrase. They present results on a large data set of English to Arabic SMT. They introduce two ways of integrating MWE knowledge in the SMT framework: Static and Dynamic integration. For Static integration, MWE tokens in the source data are grouped together with an underscore. While in Dynamic integration, the MWEs are identified in the phrase table and an additional weighted feature, as a soft constraint, is added to the phrase translation table. Carpuat and Diab (2010) focus only on MWEs as identified in WordNet (Fellbaum, 1998) with no explicit distinction between the different types of MWEs. Accordingly, the MWEs are considered a single type with no attention to various POS information. Our work here is taking a much fine grained approach and deeper study and analysis. Approach We adopt a Phrase-based SMT framework, Moses (Koehn et al., 2007) . In the following subsections, we address the issue of representation of MWE in our SMT pipeline and then we investigate the manner in which the MWE information is integrated in the SMT framework. Data Sets For training the translation models, we use LDC GALE newswire parallel Arabic-English corpus (LDC2007E103) (a total of 474299 sentence pairs / about 10M un-tokenized words / 12M tokenized words). The Log-Linear model features weights are tuned using the newswire part of NIST MT06 (765 sentence pairs) as the tuning dataset and BLEU (Papineni et al., 2002) as the objective function. For training the language model (LM), we use the LDC Arabic GIGAWORD 4th edition (LDC2009T30) (about 850M un-tokenized words). We use the newswire part of NIST-MT04 (707 sentences) as our development test-set to compare performance and select combinations of different conditions. We report results using two blind test-sets; NIST-MT05 (1056 sentences) and the newswire part of NIST-MT08 (813 sentences). These standard test sets are originally designed to test Arabic to English translation systems thus it consists of one Arabic source set and four English human reference translation sets. To use these test sets for testing English to Arabic translation systems, we created new test sets where the source set is constructed by concatenating the four English human translations of the original standard test set, and the reference set is constructed by duplicating the original standard test set Arabic source four times. This means that the new test sets have four times the number of sentences of the original standard test sets. Increasing the test set size enhances the reliability of the evaluation scores as reported by (Zhang and Vogel 2010) . MWEs lists We need a mechanism by which to identify MWE in the source English text. We rely on two identification sources depending on the type of MWE: an MWE list extracted from a wide coverage lexical database and a named entity recognition tool. As mentioned earlier in section 2, we consider several types of MWEs for this study: Verb-based MWEs (VNC, VPC, and LVC), Noun-based MWEs (NNC, and NE), Adjective (AJ) and Adverb (AV) based MWE. WordNet Extracted MWEs Lists: For the VPC, VNC, LVC, NNC and AJ and AV categories of MWE, we extract an extensive list from the wide coverage English WordNet database 3.0. (Fellbaum,1998) . Table 1 shows the number of MWEs extracted from WordNet 3.0 dictionaries. It is worth noting that the MWE.V list comprises all three types of verbal MWEs (VNC, VPC, LVC), moreover the MWE.N includes NNC and some NEs as listed in WordNet. MWE list # MWE types MWE.V 3, Named Entities Tagging: We consider Named Entities (NEs) as another type of MWE. To construct our NEs list, we exploit a named entity tagger, the Stanford NER [SNER] (Finkel et al., 2005) . SNER tags named entities in a given English text into three categories: 1) Person 2) Organization and 3) Location. Matching Algorithm: In order to identify the MWE in the source English side of the parallel data, we use a Maximum Forward Matching algorithm that finds the longest matching MWE in the text. The algorithm matches over the tokenized version of the data and if no match, it backs-off to the lemmatized version to account for the different inflectional forms of the MWE (e.g. \"take place\" and \"took place\".) Our current matching algorithm doesn't handle gap flexibility like in the phrasal verbs MWEs (i.e. \"break up\" is handled while \"break it up\" is not.) SMT System Data preprocessing and models generation: The Arabic side of the train, tune, development and test data sets and the language model training data sets are tokenized using AMIRA 2.1 toolkit (Diab 2009 , Diab et al., 2007) into the Arabic TreeBank tokenization scheme. The Arabic side of the training data is further processed to generate a lemmatized version used in the alignment stage of the SMT pipeline. We use the undiacritized version (both tokenized and lemmatized) in all our experiments. The English side is tokenized using Tree Tagger (Schmid, 1994) . It is then tagged using the selected MWE list according to the condition under investigation. The English lemmatized version of the training data is also generated for use in alignment. We used SRILM toolkit (Stolcke, 2002) to create a 5-gram Arabic LM modified using Kneser-Ney smoothing. In all our experimental conditions, the parallel corpus is word-aligned using GIZA++ in both translation directions using the lemmatized version of both sides to decreases data sparseness, and phrase translations of up to 10 words are extracted from the tokenized version of both sides using the grow-diag-final-and heuristic (Koehn et al., 2007) . We optimized log-linear model feature weights using Minimum Error Rate Training (MERT) (Och, 2003) . To account for the instability of MERT, we run the tuning step three times per condition with different random seeds and use the optimized weights that give the median score. Integration Methods: (a) Static Integration (S) In Static integration of MWEs in SMT, MWEs in English training, tuning and testing data are underscored as a preprocessing step based on a pattern match to the WN list entries and NER results. Hence static integration is a manipulation on the data representation, the SMT system is kept intact. (b) Dynamic Integration (D) Dynamic integration is a soft constraint strategy that adds a new feature into the log linear model of phrase-based SMT. It is a count feature indicating the number of MWEs in the English phrase in the phrase table, thereby biasing the system, at decoding time, towards using phrases that do not break MWEs. The training, tuning, development and test data do not undergo any MWEs annotation (no underscoring). (c) Zone Integration (Z) We define constrained reordering zones for all MWEs found in the test data and the decoder is forced to respect these boundaries while constructing the translation hypothesis. This is easily represented using XML tags in the system input to Moses decoder (Koehn and Haddow, 2009) . It is worth noting that words within a zone are not necessarily translated as a single phrase and can be reordered; input phrases that cross zone boundaries can be used in translation hypotheses without breaking the reordering constraint. (d) Hybrid Integration Motivated by the development-set results of the previous integration methods and MWEs schemes, we carried out a set of experiments investigating combining the best performing conditions. MWEs Schemes: We created 7 MWEs schemes combining the various types of WordNet-based MWE lists and NEs list. They are listed in Table 3 , along with the number of types and tokens of MWEs found in the training data according to each of the MWE Schemes. We combine MWEs schemes and integration methods to get the different experimental conditions listed in Table 4 . Here is some example input preprocessing for the same sentence according to different conditions: -Baseline (and all dynamic integration): invading iraqis kurdistan is no longer an easy task . -S_VAA 1 : invading iraqis kurdistan is no_longer an easy task . -S_NN: invading iraqis_kurdistan is no longer an easy task . -Z_VAA+NN: invading <zone> iraqis kurdistan </zone> is <zone> no longer </zone> an easy task . Evaluation Results We used four standard MT metrics 2 ; BLEU (Papineni et al., 2002) , NIST (Doddington, 2002) , METEOR 3 (Banerjee and Lavie, 2005) , and TER (Snover et al., 2006) , to report and compare performance of different experimental conditions. Table 4 , summarizes the results. The results show that, for the three integration methods (S, D and Z), the only conditions that help across all test-sets are S_VAA and D_VAA. S_VAA gives the best results except for METEOR where D_NN and D_NE are outperforming S_VAA. 1 We use the convention: IntegrationMethod_MWEScheme [-IntegrationMethod_MWEScheme]* to label different conditions: e.g \"S_VAA-D_NE+NN\" refers to a hybrid integration where the \"VAA\" MWEs are statically integrated and the \"NE+NN\" MWEs are dynamically integrated. 2 We report case-sensitive scores as our system output is in Buckwalter transliteration. 3 For METEOR scores, we used \"exact\" module only. We want to investigate which part of the SMT pipeline does S_VAA condition help, so we carried another experiment (A_VAA) where the VAA is used in the alignment stage of the pipeline only. We simply removed underscores from the input phrases in the phrase table and the lexical reordering table and used the new tables as A_VAA tables. The tune and test data-sets are the same as the normal baseline (no underscoring). The results show that the major part of the S_VAA configuration enhancement is actually coming from the alignment stage. Motivated by the development set results of S_VAA, A_VAA and the enhancement of METEOR scores by D_NN and D_NE, we carried out a couple of experiments investigating hybrids of the integration methods. S_VAA-*: In these configurations we use static integration for VAA and dynamic integration for NE and/or NN. For example, for S_VAA-D_NE the input phrases in the phrase table have VAA MWEs underscored and the probabilities have the added extra feature counting NEs in the input phrase. The train, tune and test data for this configuration has VAA MWEs underscored. A_VAA-*: In these configurations we use the phrase tables of the S_VAA and remove underscores from the input phrases. We then add the extra feature indicating the counts of the NE and/or NN MWEs found in the input phrase. Table 4 shows that A_VAA-D_NE+NN gives the best overall consistent performance with absolute BLEU score improvement of 0.63 for MT04-NW, 0.82 for MT05 and 0.45 for MT08-NW. Discussion Static integration mainly helps when the MWE is a fixed expression (AV, AJ) that needs to be translated as a whole non-compositionally. That's why we see the VAA condition (more than half of its list is fixed MWEs) giving the best results. Static integration also helps for semi-fixed expressions (VNC, NNC and NEs) conditioned by having enough training samples otherwise we increase OOV. If we look at table 3, we can see that the average number of tokens per type for all NE conditions is very low. This is mainly due to the huge number of NE types. That's why NEs schemes do not show any improvement using static integration. On the other hand, S_NN shows some inconsistent improvements depending on the data sparsity. For example, in our sample test sentence, S_NN condition created the new token \"iraqis_kurdistan\" which is not in the training data. Dynamic integration helps solving this data sparsity issue by introducing a new feature that is weighted globally using all evidences belonging to the same category to favor phrase pairs with unbroken MWE of that category. That's why we see some improvements for NEs and NNs in addition to VAA. Zone integration is not helping (except nonsignificantly 5 for NEs on MT08-NW), this is due to the fact that marking MWEs as zones and enforcing decoder to respect these zones does not prevent the decoder from translating MWEs compositionally. While the decoder is not allowed to translate out of zone phrases unless it fully finishes translating the words in the zone, it is permissible to divide the zone into any combination of phrases and translate these phrases individually and in any order. MWE Following are the translation of our sample test sentence for selected conditions: -Ref: vm An gzw krdstAn AlErAq lm yEd mhmp shlp . -Baseline: gzw ErAqy krdstAn lm yEd shlA . -S_VAA: gzw ErAqy krdstAn lys mhmp shlp . -S_NN: gzw iraqis_kurdistan lm yEd shlA . -S_VAA+NN: gzw iraqis_kurdistan lm tEd mhmp shlp . -Z_VAA+NN: gzw ErAqy krdstAn lm yEd shlA . Conclusion Our study indicates that, at least for our language pair, different MWE types require different integration methods in the SMT pipeline where the more flexible an MWE is, the more the dynamic the integration needs to be. Therefore, for NE and NN, dynamic integration yields the best results. While for VAA, which tend to be more rigid, we gain the most from static integration. Our results strongly suggest that explicit modeling for MWE and their various types definitely impact SMT performance positively. This is important since the number of MWE (VAA+NN+NE) tokens in the text only amounts to a total of 5.3% of the data, even though in terms of type ratio, MWEs (VAA+NN+NE) account for 46% of the types (indicating that we see a lot of variability in type but with very low frequency), yet we see gains of up to 0.82 absolute BLEU points (for A_VAA-D_NE+NN MT05). We anticipate such effects to be even 5 Statistical significance tests use bootstrapping methods as detailed in (Zhang and Vogel, 2010) more pronounced in other more nuanced data sets such as blogs and broadcast conversations where the use of MWEs is pervasive compared to Newswire. For future work, we plan to extend our matching algorithm to account for syntactically flexible MWEs by allowing gaps within MWE. We also plan to enhance feature engineering of the dynamic integration by assigning each MWE type a dedicated feature in the model. Finally we plan to extend our study to different language pairs and for MWEs in both source and target languages. Acknowledgments We would like to thank the feedback provided by three anonymous reviewers. This work was partially supported by the DARPA BOLT program.",
    "abstract": "Incorporating semantic information in the Statistical Machine Translation (SMT) framework is starting to gain some popularity in both the semantics and translation communities. In this paper, we present encouraging results obtained from experiments conducted on English to Arabic SMT system using static, dynamic, and hybrid integration of fine-grained Multiword Expression (MWE). We achieve an improvement up to 0.82 absolute BLEU score by integrating MWEs over a vanilla SMT system. We empirically show that different MWE types require different integration methods in the SMT framework.",
    "countries": [
        "United States"
    ],
    "languages": [
        "English",
        "Arabic"
    ],
    "numcitedby": "16",
    "year": "2013",
    "month": "October",
    "title": "Multiword Expressions in the Context of Statistical Machine Translation"
}