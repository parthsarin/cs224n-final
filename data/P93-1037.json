{
    "article": "This paper presents a cooperative consultation system on a restricted domain. The system builds hypotheses on the user's plan and avoids misunderstandings (with consequent repair dialogues) through clarification dialogues in case of ambiguity. The role played by constraints in the generation of the answer is characterized in order to limit the cases of ambiguities requiring a clarification dialogue. The answers of the system are generated at different levels of detail, according to the user's competence in the domain. INTRODUCTION This paper presents a plan-based consultation system for getting information on how to achieve a goal in a restricted domain, l The main purpose of the system is to recognize the user's plans and goals to build cooperative answers in a flexible way [Allen, 83] , [Carberry, 90] . The system is composed of two parts: hypotheses construction and response generation. The construction of hypotheses is based on Context Models (CMs) [Carberry, 90] . Carberry uses default inferences [Carberry, 90b] to select a single hypothesis for building the final answer of the system and, in case the choice is incorrect, a repair dialogue is started. Instead, in our system, we consider all plausible hypotheses and if the ambiguity among them is relevant for the generation of the response, we try to solve it by starting a clarification dialogue. According to [van Beek and Cohen, 91] , clarification dialogues are simpler for the user than repair ones, because they only involve yeshlo questions on the selected ambiguous plans. Furthermore, repair dialogues generally require a stronger participation of the user. Finally, if the misunderstanding is not discovered, the system delivers information that is not proper to the user's case. For these reasons, it is preferable to solve the runbiguity a priori, by asking the user information on his intentions. In van Beek and Cohen's approach cl,'wification dialogues are started, even in case the answers associated with the plausible hypotheses are distinguished by features that could dhectly be managed in the answer. We avoid this by identifying the constraints relevant for a clarification dialogue and those which can be mentioned in the answer. In this way, the friendliness of the system is improved lThe system is concerned with information about a CS Deparunent. and the number and the length of the clarification dialogues are reduced. In the perspective of generating flexible cooperative answers, it is important to differentiate their detail level by adapting them to the user's competence in the domain. In our work, we want to study how to embed information obtained from a user model component in the system. As a first step in this direction, we introduce a preliminary classification of users in three standard levels of competence corresponding to the major users' prototypes the system is devoted to. Then, in order to produce differentiated answers, the hypotheses are expanded according to the user's competence level. The knowledge about actions and plans is stored in a plan library structured on the basis of two main hierarchies: the Decomposition Hierarchy (DH) and the Generalization Hierarchy (GH) [Kautz and Allen, 86] . The first one describes the plans associated with the actions and is used for explaining how to execute a complex action. The second one expresses the relation among genera/and specific actions (the major specificity is due to additional restrictions on parameters). It supports an inheritance mechanism and a top-down form of clarification dialogue. THE ALGORITHM The algorithm consists of two parts: a hypotheses construction and a response generation phase. \u2022 111 the hypotheses construction phase the following steps are repeated for each sentence of the user: 1-Action identification: on the basis of the user's utterance, a set of candidate actions is selected. 2-Focusing: CMs built after the analysis of the previous sentences are analyzed to find a connection with any candidate action identified in step 1 and, for each established connection, a new CM is built. (At the beginning of the dialogue, from each candidate action a CM is created). 3-Upward expansion along the DH: each CM is expanded (when possible) by appending it to the more complex action having the root of the CM itself in its decomposition. 111 this way we get a higher lever description of the action that the user wants to pursue. 4-Weighted expansion along the DH: for each CM, its actions are repeatedly decomposed in more elementary ones, until all the steps of the CM are sufficiently simple for the user's competence level in the domain. In this way, the information necessary to generate an answer suitable to the user is collected. 5-Weighted expansion backward through enablement links: each CM is expanded in order to include the actions necessary for satisfying the preconditions which the user is supposed not to be able to plata by himself (according to his competence level). \u2022 In the response generation phase, the ambiguity among the hypotheses is evaluated. If it is relevant, a top-down clarification dialogue guided by the GH is started up. Finally, the answer is extracted from the CMs selected through the clarification dialogue. THE REPRESENTATION OF GOALS, PLANS AND ACTIONS The basic elements of representation of the domain knowledge are goals and actions. Actions can be elementary or complex and in the second case one or more plans (decompositions) can be associated with them. All these plans share the same main effect. Each action is characterized by the preconditions, constraints, restrictions on the action parmneters, effects, associated plans mid position in the GH. The restrictions specify die relationship among the par,'uneters of the main action and diose of the action substeps. During the response generation phase, if the value of some parameters is still unknown, their referent can be substituted in die answer by a linguistic description extracted from the restrictions, so avoiding further questions to the user. For example, if the user says that he wants to talk to the advisor for a course plan, but he does not specify which (so it is not possible to determine the name of the advisor), still the system may suggest: \"talk with the advisor for the course plan you are interested in\". The GH supports an inheritance mechanism in the plan library. Moreover, it allows to describe the decomposition of an action by means of a more abstract specification of some of its substeps when no specific information is available. For exainple, a step of die action of getting information on a course plan is to talk with the curriculum advisor, that can be \u2022 specialized in different ways according to the topic of the conversation (talking by phone and talking face to face). If in a specific situation the actual topic is unknown, it is not possible to select one possibility. So, the more general action of talking is considered. In order to support the two phases of weighted expansion, information about the difficulty degree of the actions is embedded in the plan library by labelling them with a weight that is a requested competence threshold (if the user is expert for an action, it is taken as elementary for him, otherwise its steps must be specified). Preconditions are labelled in an analogous way, so as to specify which users know how to plan them by themselves and which need an exph'mation. THE CONSTRUCTION OF THE HYPOTHESES In the action identification phase a set of actions is selected from the plan library, each of them possibly repl~esenting the aspect of the task on which the user's attention is currently focused. The action identification is accomplished by means of partially ordered rules (a rule is more specific than another one if it imposes greater constraints on the structure of the logical form of the user's utterance). Restrictions on the pmameters of conditions and actions are used to select the most specific action from the plan library that is supported by the user's utterance. In the focusing phase the set of CMs produced by the analysis of the previous sentences and the set of candidate actions selected in the action identification phase are considered. A new set of CMs is built, all of which are obtained by expanding one of the given CMs so as to include a candidate action. CMs for which no links with the candidate actions have been found are discarded. The expansion of the CMs is similar to that of Carberry. However, because of our approach to the response generation, when a focusing rule fires, the expansion is tried backward through the enablement links and along the DH and the GH, so to find all the connections with the candidate actions without preferring any possibility. If a heuristic rule suggests more than one connection, a new CM is generated for each one. After the focusing phase, a further expansion up through tim DH is provided for each CM whose root is part of only one higher-level plan. In the weighted expansion along the DH, for each CM, every action to be included in the answer is expanded with its decomposition if it is not elementary for the user's competence level. Actually, only actions with a single decomposition are expanded 2 The expansion is performed until the actions to be mentioned in the answer are not decomposable or they suit the user's competence level. In the weighted expansion backward through enablement links, for each CM, preconditions whose planning is not immediate for the user are expanded by attaching to their CMs the actions having them as effects. When a precondition to be expanded is of the form \"Know(IS, x)\" and the system knows the value of \"x\", it includes such information in the response; so, the expansion is avoided. While in the previous phase the expansion is performed recursively, here it is not, because expanding along the enablement chain extends the CM far from the current focus. THE RESPONSE GENERATION In the relevance evaluation phase, the ambiguity among candidate hypotheses filtered out in the focusing phase is considered. The notion of relevance defined by van Beek and Cohen is principally based on the conditions (corresponding to our constraints) associated with the selected plans. We further specify this notion in two ways, in order to avoid a clarification dialogue when it is not necessary because a more structured answer is sufficient for dealing with the ambiguity. First we classify constraints into three categories: those with a value known to the system, that are the only to be used in order to evaluate the relevance of ambiguity; those that involve information peculiar to the user (e.g. if he is a studen0, that can be mentioned in the answer as assumptions for its validity; finally, those with a value unknown to both the user and the system, but that the user can verify by himself (e.g. the availability of books in the library). Also constraints of the last category should be included in the answer providing a recormnendation to check them. Second, clarification dialogues can be avoided even when the ambiguity is relevant, but all the selected hypotheses are invalidated by some false constraints whose truth value does not cllange in the considered situation; hence, a definitive negative answer can be provided. Clarification dialogues are organized in a top-down way, along the GH. In our approach, answers should include not only information about the involved constraints, but also about the specific description of how the user should accomplish his task. For this reason, we consider a clarification dialogue based on constraints as a first step towards a more complex one, that takes into account the ambiguity among sequences of steps as well. In the future work, we are going to complete the answer generation phase by developing tiffs part, as well as the proper answer generation part. AN EXAMPLE Let us suppose that a CM produced in the previous analysis is composed by tile action Get-info-oncourse-plan (one of whose steps is the Talk-prof action) and the user asks if Prof. Smith is in his office. The action identification phase selects the Talk-byphone and Meet actions, that share tile constraint that the professor is ill his office. Since the two actions are decompositions of tile Talk-prof action, the focusing phase produces two CMs from the previous one. If tile user is expert on the domain, no further expansion of the CMs is needed for the generation of the answer, that could be \"Yes, he is; you can phone him to number 64 or meet him in office 42\". On tile other hand, if the user has a lower degree of competence, tile steps difficult for him are expanded. For example, the Talkby-phone action is detailed by specifying: \"To phone him go to the internal phone in tile entrance\". In order to show one of the cases that differentiate van Beek and Cohen's approach from ours, suppose to add to the action Meet the constraint Is-meeting-time and that the user asks his question when the professor is not in the office and it is not his meeting time. In this case, the false constraint Is-meeting-time causes the ambiguity to be relevant for van Beek and Cohen; on the other hand, our system provides the user with a unique negative answer, so avoiding any clarification dialogue. CONCLUSIONS The paper presented a plan-based consultation system whose main purpose is to generate cooperative answers on the basis of recognition of the user's plans and goals. In the system, repair dialogues due to misunderstandings of the user's intentions are prevented through a possible clarification dialogue. In order to enhance the flexibility of the system, different detail levels have been provided for the answers, according to the competence of the various users. This has been done by specifying the difficulty degree of the various components of the plan library and by expanding the CMs until the information provided for the generation of an answer is suitable for the user. Van Beek and Cohen' notion of the relevance of ambiguity has been refined on the basis of the characteristics of the constraints present in the plans. In the future work, we are going to refine the notion of relevance of ambiguity in order to deal with the presence of different sequences of actions in the possible answers. Finally we are going to complete the proper answer generation. A C KNOWLEDGEMENTS The authors are indebted to Leonardo Lesmo for many useful discussions on the topic presented in the paper. The authors are also grateful to the four anonimous referees for their useful comments. This research has been supported by CNR in the project Pianificazione Automatica.",
    "abstract": "This paper presents a cooperative consultation system on a restricted domain. The system builds hypotheses on the user's plan and avoids misunderstandings (with consequent repair dialogues) through clarification dialogues in case of ambiguity. The role played by constraints in the generation of the answer is characterized in order to limit the cases of ambiguities requiring a clarification dialogue. The answers of the system are generated at different levels of detail, according to the user's competence in the domain.",
    "countries": [
        "Italy"
    ],
    "languages": [
        ""
    ],
    "numcitedby": "19",
    "year": "1993",
    "month": "June",
    "title": "A Flexible Approach to Cooperative Response Generation in Information-Seeking Dialogues"
}