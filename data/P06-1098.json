{
    "article": "We present a hierarchical phrase-based statistical machine translation in which a target sentence is efficiently generated in left-to-right order. The model is a class of synchronous-CFG with a Greibach Normal Form-like structure for the projected production rule: The paired target-side of a production rule takes a phrase prefixed form. The decoder for the targetnormalized form is based on an Earlystyle top down parser on the source side. The target-normalized form coupled with our top down parser implies a left-toright generation of translations which enables us a straightforward integration with ngram language models. Our model was experimented on a Japanese-to-English newswire translation task, and showed statistically significant performance improvements against a phrase-based translation system. Introduction In a classical statistical machine translation, a foreign language sentence f J 1 = f 1 , f 2 , ... f J is translated into another language, i.e. English, e I 1 = e 1 , e 2 , ..., e I by seeking a maximum likely solution of: \u00eaI 1 = argmax e I 1 Pr(e I 1 | f J 1 ) (1) = argmax e I 1 Pr( f J 1 |e I 1 )Pr(e I 1 ) (2) The source channel approach in Equation 2 independently decomposes translation knowledge into a translation model and a language model, respectively (Brown et al., 1993) . The former represents the correspondence between two languages and the latter contributes to the fluency of English. In the state of the art statistical machine translation, the posterior probability Pr(e I 1 | f J 1 ) is directly maximized using a log-linear combination of feature functions (Och and Ney, 2002) : \u00eaI 1 = argmax e I 1 exp M m=1 \u03bb m h m (e I 1 , f J 1 ) e \u2032 I \u2032 1 exp M m=1 \u03bb m h m (e \u2032 I \u2032 1 , f J 1 ) (3) where h m (e I 1 , f J 1 ) is a feature function, such as a ngram language model or a translation model. When decoding, the denominator is dropped since it depends only on f J 1 . Feature function scaling factors \u03bb m are optimized based on a maximum likely approach (Och and Ney, 2002) or on a direct error minimization approach (Och, 2003) . This modeling allows the integration of various feature functions depending on the scenario of how a translation is constituted. A phrase-based translation model is one of the modern approaches which exploits a phrase, a contiguous sequence of words, as a unit of translation (Koehn et al., 2003; Zens and Ney, 2003; Tillman, 2004 ). The idea is based on a word-based source channel modeling of Brown et al. (1993) : It assumes that e I 1 is segmented into a sequence of K phrases \u0113K 1 . Each phrase \u0113k is transformed into fk . The translated phrases are reordered to form f J 1 . One of the benefits of the modeling is that the phrase translation unit preserves localized word reordering. However, it cannot hypothesize a long-distance reordering required for linguistically divergent language pairs. For instance, when translating Japanese to English, a Japanese SOV structure has to be reordered to match with an En-glish SVO structure. Such a sentence-wise movement cannot be realized within the phrase-based modeling. Chiang (2005) introduced a hierarchical phrasebased translation model that combined the strength of the phrase-based approach and a synchronous-CFG formalism (Aho and Ullman, 1969 ): A rewrite system initiated from a start symbol which synchronously rewrites paired nonterminals. Their translation model is a binarized synchronous-CFG, or a rank-2 of synchronous-CFG, in which the right-hand side of a production rule contains at most two non-terminals. The form can be regarded as a phrase translation pair with at most two holes instantiated with other phrases. The hierarchically combined phrases provide a sort of reordering constraints that is not directly modeled by a phrase-based model. Rules are induced from a bilingual corpus without linguistic clues first by extracting phrase translation pairs, and then by generalizing extracted phrases with holes (Chiang, 2005) . Even in a phrase-based model, the number of phrases extracted from a bilingual corpus is quadratic to the length of bilingual sentences. The grammar size for the hierarchical phrase-based model will be further exploded, since there exists numerous combination of inserting holes to each rule. The spuriously increasing grammar size will be problematic for decoding without certain heuristics, such as a length based thresholding. The integration with a ngram language model further increases the cost of decoding especially when incorporating a higher order ngram, such as 5-gram. In the hierarchical phrase-based model (Chiang, 2005) , and an inversion transduction grammar (ITG) (Wu, 1997) , the problem is resolved by restricting to a binarized form where at most two non-terminals are allowed in the righthand side. However, Huang et al. (2005) reported that the computational complexity for decoding amounted to O(J 3+3(n\u22121) ) with n-gram even using a hook technique. The complexity lies in memorizing the ngram's context for each constituent. The order of ngram would be a dominant factor for higher order ngrams. As an alternative to a binarized form, we present a target-normalized hierarchical phrasebased translation model. The model is a class of a hierarchical phrase-based model, but constrained so that the English part of the right-hand side is restricted to a Greibach Normal Form (GNF)like structure: A contiguous sequence of terminals, or a phrase, is followed by a string of nonterminals. The target-normalized form reduces the number of rules extracted from a bilingual corpus, but still preserves the strength of the phrase-based approach. An integration with ngram language model is straightforward, since the model generates a translation in left-to-right order. Our decoder is based on an Earley-style top down parsing on the foreign language side. The projected English-side is generated in left-to-right order synchronized with the derivation of the foreign language side. The decoder's implementation is taken after a decoder for an existing phrase-based model with a simple modification to account for production rules. Experimental results on a Japanese-to-English newswire translation task showed significant improvement against a phrase-based modeling. Translation Model A weighted synchronous-CFG is a rewrite system consisting of production rules whose right-hand side is paired (Aho and Ullman, 1969) : X \u2190 \u03b3, \u03b1, \u223c (4) where X is a non-terminal, \u03b3 and \u03b1 are strings of terminals and non-terminals. For notational simplicity, we assume that \u03b3 and \u03b1 correspond to the foreign language side and the English side, respectively. \u223c is a one-to-one correspondence for the non-terminals appeared in \u03b3 and \u03b1. Starting from an initial non-terminal, each rule rewrites non-terminals in \u03b3 and \u03b1 that are associated with \u223c. Chiang (2005) proposed a hierarchical phrasebased translation model, a binary synchronous-CFG, which restricted the form of production rules as follows: \u2022 Only two types of non-terminals allowed: S and X. \u2022 Both of the strings \u03b3 and \u03b1 must contain at least one terminal item. \u2022 Rules may have at most two non-terminals but non-terminals cannot be adjacent for the foreign language side \u03b3. The production rules are induced from a bilingual corpus with the help of word alignments. To alleviate a data sparseness problem, glue rules are added that prefer combining hierarchical phrases in a serial manner: S \u2192 S 1 X 2 , S 1 X 2 (5) S \u2192 X 1 , X 1 (6) where boxed indices indicate non-terminal's linkages represented in \u223c. Our model is based on Chiang (2005)'s framework, but further restricts the form of production rules so that the aligned right-hand side \u03b1 follows a GNF-like structure: X \u2190 \u03b3, b\u03b2, \u223c (7) where b is a string of terminals, or a phrase, and beta is a (possibly empty) string of nonterminals. The foreign language at right-hand side \u03b3 still takes an arbitrary string of terminals and non-terminals. The use of a phrase b as a prefix keeps the strength of the phrase-base framework. A contiguous English side coupled with a (possibly) discontiguous foreign language side preserves a phrase-bounded local word reordering. At the same time, the target-normalized framework still combines phrases hierarchically in a restricted manner. The target-normalized form can be regarded as a type of rule in which certain non-terminals are always instantiated with phrase translation pairs. Thus, we will be able to reduce the number of rules induced from a bilingual corpus, which, in turn, help reducing the decoding complexity. The contiguous phrase-prefixed form generates English in left-to-right order. Therefore, a decoder can easily hypothesize a derivation tree integrated with a ngram language model even with higher order. Note that we do not imply arbitrary synchronous-CFGs are transformed into the target normalized form. The form simply restricts the grammar extracted from a bilingual corpus explained in the next section. Rule Extraction We present an algorithm to extract production rules from a bilingual corpus. The procedure is based on those for the hierarchical phrase-based translation model (Chiang, 2005) . First, a bilingual corpus is annotated with word alignments using the method of Koehn et al. (2003) . Many-to-many word alignments are induced by running a one-to-many word alignment model, such as GIZA++ (Och and Ney, 2003) , in both directions and by combining the results based on a heuristic (Koehn et al., 2003) . Second, phrase translation pairs are extracted from the word alignment corpus (Koehn et al., 2003) . The method exhaustively extracts phrase pairs ( f j+m j , e i+n i ) from a sentence pair ( f J 1 , e I 1 ) that do not violate the word alignment constraints a: \u2203(i \u2032 , j \u2032 ) \u2208 a : j \u2032 \u2208 [ j, j + m], i \u2032 \u2208 [i, i + n] \u2204(i \u2032 , j \u2032 ) \u2208 a : j \u2032 \u2208 [ j, j + m], i \u2032 [i, i + n] \u2204(i \u2032 , j \u2032 ) \u2208 a : j \u2032 [ j, j + m], i \u2032 \u2208 [i, i + n] Third, based on the extracted phrases, production rules are accumulated by computing the \"holes\" for contiguous phrases (Chiang, 2005) : 1. A phrase pair ( f , \u0113) constitutes a rule X \u2192 f , \u0113 2. A rule X \u2192 \u03b3, \u03b1 and a phrase pair ( f , \u0113) s.t. \u03b3 = \u03b3 \u2032 f \u03b3 \u2032\u2032 and \u03b1 = \u0113\u2032 \u0113\u03b2 constitutes a rule X \u2192 \u03b3 \u2032 X k \u03b3 \u2032\u2032 , \u0113\u2032 X k \u03b2 Following Chiang (2005) , we applied constraints when inducing rules with non-terminals: \u2022 At least one foreign word must be aligned to an English word. \u2022 Adjacent non-terminals are not allowed for the foreign language side. Phrase-based Rules The rule extraction procedure described in Section 2.1 is a corpus-based, therefore will be easily suffered from a data sparseness problem. The hierarchical phrase-based model avoided this problem by introducing the glue rules 5 and 6 that combined hierarchical phrases sequentially (Chiang, 2005) . We use a different method of generalizing production rules. When production rules without nonterminals are extracted in step 1 of Section 2.1, X \u2192 f , \u0113 (8) then, we also add production rules as follows: X \u2192 f X 1 , \u0113 X 1 (9) X \u2192 X 1 f , \u0113 X 1 (10) X \u2192 X 1 f X 2 , \u0113 X 1 X 2 (11) X \u2192 X 2 f X 1 , \u0113 X 1 X 2 (12) The international terrorism also is a possible threat in Japan \u56fd\u969b \u30c6\u30ed \u306f \u65e5\u672c \u3067 \u3082 \u8d77\u3053\u308a \u3046\u308b \u8105\u5a01 \u3067 \u3042\u308b Reference translation: \"International terrorism is a threat even to Japan\" (a) Translation by a phrase-based model.  We call them phrase-based rules, since four types of rules are generalized directly from phrase translation pairs. The class of rules roughly corresponds to the reordering constraints used in a phrase-based model during decoding. Rules 8 and 9 are sufficient to realize a monotone decoding in which phrase translation pairs are simply combined sequentially. With rules 10 and 11, the non-terminal X 1 behaves as a place holder where certain number of foreign words are skipped. Therefore, those rules realize a window size constraint used in many phrasebased models (Koehn et al., 2003) . The rule 12 further gives an extra freedom for the phrase pair reordering. The rules 8 through 12 can be interpreted as ITG-constraints where phrase translation pairs are hierarchically combined either in a monotonic way or in an inverted manner (Zens and Ney, 2003; Wu, 1997) . Thus, by controlling what types of phrase-based rules employed in a grammar, we will be able to simulate a phrasebased translation model with various constraints. This reduction is rather natural in that a finite state transducer, or a phrase-based model, is a subclass of a synchronous-CFG. Figure 1 (a) shows an example Japanese-to-English translation by a phrase-based model described in Section 5. Using the phrase-based rules, the translation results is represented as a derivation tree in Figure 1(b) . Decoding Our decoder is an Earley-style top down parser on the foreign language side with a beam search strategy. Given an input sentence f J 1 , the decoder seeks for the best English according to Equation 3 using the feature functions described in Section 4. The English output sentence is generated in left-to-right order in accordance with the derivation of the foreign language side synchronized with the cardinality of already translated foreign word positions. The decoding process is very similar to those described in (Koehn et al., 2003) : It starts from an initial empty hypothesis. From an existing hypothesis, new hypothesis is generated by consuming a production rule that covers untranslated foreign word positions. The score for the newly generated hypothesis is updated by combining the scores of feature functions described in Section 4. The English side of the rule is simply concatenated to form a new prefix of English sentence. Hypotheses that consumed m foreign words are stored in a priority queue Q m . Hypotheses in Q m undergo two types of pruning: A histogram pruning preserves at most M hypotheses in Q m . A threshold pruning discards a hypotheses whose score is below the maximum score of Q m multiplied with a threshold value \u03c4. Rules are constrained by their foreign word span of a non-terminal. For a rule consisting of more than two non-terminals, we constrained so that at least one non-terminal should span at most \u03ba words. The decoder is characterized as a weighted synchronous-CFG implemented with a push-down automaton rather a weighted finite state transducer (Aho and Ullman, 1969) . Each hypothesis maintains following knowledge: \u2022 A prefix of English sentence. For space efficiency, the prefix is represented as a word graph. \u2022 Partial contexts for each feature function. For instance, to compute a 5-gram language model feature, we keep the consecutive last four words of an English prefix. \u2022 A stack that keeps track of the uncovered foreign word spans. The stack for an initial hypothesis is initialized with span [1, J]. When extending a hypothesis, the associated stack structure is popped. The popped foreign word span [ j l , j r ] is used to locate the rules for uncovered foreign word positions. We assume that the decoder accumulates all the applicable rules from a large database and stores the extracted rules in a chart structure. The decoder identifies what rules to consume when extending a hypothesis using the chart structure. A new hypothesis is created with an updated stack by pushing foreign non-terminal spans: For each rule spanning [ j l , j r ] at foreignside with non-terminal spans of [k l 1 , k r 1 ], [k l 2 , k r 2 ], ..., the non-terminal spans are pushed in the reverse order of the projected English side. For example, A rule with foreign word non-terminal spans: X \u2192 X 2 : [k l 2 , k r 2 ] f X 1 : [k l 1 , k r 1 ], \u0113 X 1 X 2 will update a stack by pushing the foreign word spans [k l 2 , k r 2 ] and [k l 1 , k r 1 ] in order. This ordering assures that, when popped, the English-side will be generated in left-to-right order. A hypothesis with an empty stack implies that the hypothesis has covered all the foreign words. Figure 2 illustrates the decoding process for the derivation tree in Figure 1(b) . Starting from the initial hypothesis of [1, 11] , the stack is updated in accordance with non-terminal's spans. The span is popped and the rule with the foreign word pan [1, 11] is looked up from the chart structure. The stack structure for the newly created hypothesis is updated by pushing non-terminal spans [4, 11] and [1, 2] . Our decoder is based on an in-house developed phrase-based decoder which uses a bit vector to represent uncovered foreign word positions for each hypothesis. We basically replaced the bit vector structure to the stack structure: Almost no modification was required for the word graph structure and the beam search strategy implemented for a phrase-based modeling. The use of a stack structure directly models a synchronous-CFG formalism realized as a push-down automation, while the bit vector implementation is conceptualized as a finite state transducer. The cost of decoding with the proposed model is cubic to foreign language sentence length. Rules Stack [1, 11] X : [1, 11] \u2192 X 1 : [1, 2] \u306f X 2 : [4, 11], The X 1 X 2 [1, 2] [4, 11] X : [1, 2] \u2192 \u56fd\u969b X 1 : [2, 2], international X 1 [2, 2] [4, 11] X : [2, 2] \u2192 \u30c6\u30ed, terrorism [4, 11] X : [4, 11] \u2192 X 2 : [4, 5] \u3082 X 1 : [7, 11], also X 1 X 2 [7, 11] [4, 5] X : [7, 11] \u2192 X 1 : [7, 9] \u3067 \u3042\u308b, is a X 1 [7, 9] [4, 5] X : [7, 9] \u2192 \u8d77\u3053\u308a \u3046\u308b X 1 : [9, 9], possible X 1 [9, 9] [4, 5] X : [9, 9] \u2192 \u8105\u5a01, threat [4, 5] X : [4, 5] \u2192 X 1 : [4, 4] \u3067, in X 1 [4, 4] X : [4, 4] \u2192 \u65e5\u672c, Japan Feature Functions The decoder for our translation model uses a loglinear combination of feature functions, or submodels, to seek for the maximum likely translation according to Equation 3 . This section describes the models experimented in Section 5, mainly consisting of count-based models, lexicon-based models, a language model, reordering models and length-based models. Count-based Models Main feature functions h \u03c6 ( f J 1 |e I 1 , D) and h \u03c6 (e I 1 | f J 1 , D) estimate the likelihood of two sentences f J 1 and e I 1 over a derivation tree D. We assume that the production rules in D are independent of each other: h \u03c6 ( f J 1 |e I 1 , D) = log \u03b3,\u03b1 \u2208D \u03c6(\u03b3|\u03b1) (13) \u03c6(\u03b3|\u03b1) is estimated through the relative frequency on a given bilingual corpus. \u03c6(\u03b3|\u03b1) = count(\u03b3, \u03b1) \u03b3 count(\u03b3, \u03b1) (14) where count(\u2022) represents the cooccurrence frequency of rules \u03b3 and \u03b1. The relative count-based probabilities for the phrase-based rules are simply adopted from the original probabilities of phrase translation pairs. Lexicon-based Models We define lexically weighted feature functions h w ( f J 1 |e I 1 , D) and h w (e I 1 | f J 1 , D) applying the independence assumption of production rules as in Equation 13 . h w ( f J 1 |e I 1 , D) = log \u03b3,\u03b1 \u2208D p w (\u03b3|\u03b1) (15) The lexical weight p w (\u03b3|\u03b1) is computed from word alignments a inside \u03b3 and \u03b1 (Koehn et al., 2003) : p w (\u03b3|\u03b1, a) = |\u03b1| i=1 1 |{ j|(i, j) \u2208 a}| \u2200(i, j)\u2208a t(\u03b3 j |\u03b1 i ) (16 ) where t(\u2022) is a lexicon model trained from the word alignment annotated bilingual corpus discussed in Section 2.1. The alignment a also includes nonterminal correspondence with t(X k |X k ) = 1. If we observed multiple alignment instances for \u03b3 and \u03b1, then, we take the maximum of the weights. p w (\u03b3|\u03b1) = max a p w (\u03b3|\u03b1, a) (17) Language Model We used mixed-cased n-gram language model. In case of 5-gram language model, the feature function is expressed as follows: h lm (e I 1 ) = log i p n (e i |e i\u22124 e i\u22123 e i\u22122 e i\u22121 ) (18) Reordering Models In order to limit the reorderings, two feature functions are employed based on the backtracking of rules during the top-down parsing on foreign language side. h h (e I 1 , f J 1 , D) = D i \u2208back(D) height(D i ) (19) h w (e I 1 , f J 1 , D) = D i \u2208back(D) width(D i ) (20) where back(D) is a set of subtrees backtracked during the derivation of D, and height(D i ) and width(D i ) refer the height and width of subtree D i , respectively. In Figure 1 (b), for instance, a rule of X 1 with non-terminals X 2 and X 4 , two rules X 2 and X 3 spanning two terminal symbols should be backtracked to proceed to X 4 . The rationale is that positive scaling factors prefer a deeper structure whereby negative scaling factors prefer a monotonized structure. Length-based Models Three trivial length-based feature functions were used in our experiment. Experiments The bilingual corpus used for our experiments was obtained from an automatically sentence aligned Japanese/English Yomiuri newspaper corpus consisting of 180K sentence pairs (refer to Table 1 ) (Utiyama and Isahara, 2003) . From one-toone aligned sentences, 1,500 sentence pairs were sampled for a development set and a test set 1 . Since the bilingual corpus is rather small, especially for the newspaper translation domain, Japanese/English dictionaries consisting of 1.3M entries were added into a training set to alleviate an OOV problem 2 . Word alignments were annotated by a HMM translation model (Och and Ney, 2003) . After the annotation via Viterbi alignments with refinements, phrases translation pairs and production rules were extracted (refer to Table 2 ). We performed the rule extraction using the hierarchical phrase-based constraint (Hierarchical) and our proposed target-normalized form with 2 and 3 non-terminals (Normalized-2 and Normalized-3). Phrase translation pairs were also extracted for comparison (Phrase). We did not threshold the extracted phrases or rules by their length. Table 2 shows that Normalized-2 extracted slightly larger number of rules than those for phrasebased model. Including three non-terminals did not increase the grammar size. The hierarchical phrase-based translation model extracts twice as large as our target-normalized formalism. The target-normalized form is restrictive in that nonterminals should be consecutive for the Englishside. This property prohibits spuriously extracted production rules. Mixed-casing 3-gram/5-gram language models were estimated from LDC English GigaWord 2 together with the 100K English articles of Yomiuri newspaper that were used neither for development nor test sets 3 . We run the decoder for the target-normalized hierarchical phrase-based model consisting of at most two non-terminals, since adding rules with three non-terminals did not increase the grammar size. ITG-constraint simulated phrase-based rules were also included into our grammar. The foreign word span size was thresholded so that at least one non-terminal should span at most 7 words. Our phrase-based model employed all feature functions for the hierarchical phrase-based system with additional feature functions: \u2022 A distortion model that penalizes the reordering of phrases by the number of words skipped | j \u2212 ( j \u2032 + m \u2032 ) \u2212 1|, where j is the foreign word position for a phrase f j+m j translated immediately after a phrase for f j \u2032 +m \u2032 j \u2032 (Koehn et al., 2003) . \u2022 Lexicalized reordering models constrain the reordering of phrases whether to favor monotone, swap or discontinuous positions (Tillman, 2004). The phrase-based decoder's reordering was constrained by ITG-constraints with a window size of The translation results are summarized in Table 3 . Two systems were contrasted by 3-gram and 5gram language models. Results were evaluated by ngram precision based metrics, BLEU and NIST, on the casing preserved single reference test set. Feature function scaling factors for each system were optimized on BLEU score under the development set using a downhill simplex method. The differences of translation qualities are statistically significant at the 95% confidence level (Koehn, 2004) . Although the figures presented in Table 3 are rather low, we found that Normalized-2 resulted in statistically significant improvement over Phrase. Figure 3 shows some translation results from the test set. Conclusion The target-normalized hierarchical phrase-based model is based on a more general hierarchical phrase-based model (Chiang, 2005) . The hierarchically combined phrases can be regarded as an instance of phrase-based model with a place holder to constraint reordering. Such reordering was realized either by an additional constraint for decoding, such as window constraints, IBM constraints or ITG-constraints (Zens and Ney, 2003) , or by lexicalized reordering feature functions (Tillman, 2004) . In the hierarchical phrasebased model, such reordering is explicitly represented in each rule. As experimented in Section 5, the use of the target-normalized form reduced the grammar size, but still outperformed a phrase-based system. Furthermore, the target-normalized form coupled with our top down parsing on the foreign language side allows an easier integration with ngram language model. A decoder can be implemented based on a phrase-based model by employing a stack structure to keep track of untranslated foreign word spans. The target-normalized form can be interpreted as a set of rules that reorders the foreign language to match with English language sequentially. Collins et al. (2005) presented a method with hand-coded rules. Our method directly learns such serialization rules from a bilingual corpus without linguistic clues. The translation quality presented in Section 5 are rather low due to the limited size of the bilingual corpus, and also because of the linguistic difference of two languages. As our future work, we are in the process of experimenting our model for other languages with rich resources, such as Chinese and Arabic, as well as similar language pairs, such as French and English. Additional feature functions will be also investigated that were proved successful for phrase-based models together with feature functions useful for a treebased modeling. Acknowledgement We would like to thank to our colleagues, especially to Hideto Kazawa and Jun Suzuki, for useful discussions on the hierarchical phrase-based translation.",
    "funding": {
        "defense": 0.0,
        "corporate": 0.0,
        "research agency": 0.0,
        "foundation": 0.0,
        "none": 0.9999146986083706
    },
    "reasoning": "Reasoning: The article does not provide any specific information regarding its funding sources. Without explicit mention of support from defense, corporate entities, research agencies, foundations, or an indication of no funding, it is not possible to accurately determine the funding sources based on the provided text.",
    "abstract": "We present a hierarchical phrase-based statistical machine translation in which a target sentence is efficiently generated in left-to-right order. The model is a class of synchronous-CFG with a Greibach Normal Form-like structure for the projected production rule: The paired target-side of a production rule takes a phrase prefixed form. The decoder for the targetnormalized form is based on an Earlystyle top down parser on the source side. The target-normalized form coupled with our top down parser implies a left-toright generation of translations which enables us a straightforward integration with ngram language models. Our model was experimented on a Japanese-to-English newswire translation task, and showed statistically significant performance improvements against a phrase-based translation system.",
    "countries": [
        "Japan"
    ],
    "languages": [
        "Japanese",
        "English"
    ],
    "numcitedby": 59,
    "year": 2006,
    "month": "July",
    "title": "Left-to-Right Target Generation for Hierarchical Phrase-Based Translation",
    "values": {
        "building on past work": "The hierarchically combined phrases can be regarded as an instance of phrase-based model with a place holder to constraint reordering. As experimented in Section 5, the use of the target-normalized form reduced the grammar size, but still outperformed a phrase-based system. Furthermore, the target-normalized form coupled with our top down parsing on the foreign language side allows an easier integration with ngram language model. The target-normalized form can be interpreted as a set of rules that reorders the foreign language to match with English language sequentially. Collins et al. (2005) presented a method with hand-coded rules. Our method directly learns such serialization rules from a bilingual corpus without linguistic clues.",
        "ease of implementation": "Our model was experimented on a Japanese-to-English newswire translation task, and showed statistically significant performance improvements against a phrase-based translation system. Our method directly learns such serialization rules from a bilingual corpus without linguistic clues.",
        "novelty": " We present a hierarchical phrase-based statistical machine translation in which a target sentence is efficiently generated in left-to-right order. The model is a class of synchronous-CFG with a Greibach Normal Form-like structure for the projected production rule: The paired target-side of a production rule takes a phrase prefixed form. The decoder for the targetnormalized form is based on an Earlystyle top down parser on the source side.  Our model was experimented on a Japanese-to-English newswire translation task, and showed statistically significant performance improvements against a phrase-based translation system.",
        "performance": " Our model was experimented on a Japanese-to-English newswire translation task, and showed statistically significant performance improvements against a phrase-based translation system.  A decoder can be implemented based on a phrase-based model by employing a stack structure to keep track of untranslated foreign word spans.  The target-normalized form can be interpreted as a set of rules that reorders the foreign language to match with English language sequentially. Collins et al. (2005) presented a method with hand-coded rules. Our method directly learns such serialization rules from a bilingual corpus without linguistic clues."
    }
}