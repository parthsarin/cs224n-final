{
    "framing_question": "What are the listed limitations of the work, if any?",
    "response": "The listed limitations of the work are as follows:\n1. The work is based on an automatically annotated large corpus, not a manually produced gold standard. This may lead to errors and bias in the results.\n2. The authors acknowledge that some of the previously proposed approaches for building word sense embeddings could be eventually extended to supersenses, and encourage the authors to do so and perform a contrastive evaluation comparing these methods.\n3. The work does not explore different levels of granularity of the concepts, such as WordNet Domains.\n4. The work does not examine the impact of the corpus choice in detail.\n5. The work does not extend the training data beyond WordNet vocabulary.\n6. The work has only been tested on the English language, and it is not known how well it would generalize to other languages.",
    "article": "Coarse-grained semantic categories such as supersenses have proven useful for a range of downstream tasks such as question answering or machine translation. To date, no effort has been put into integrating the supersenses into distributional word representations. We present a novel joint embedding model of words and supersenses, providing insights into the relationship between words and supersenses in the same vector space. Using these embeddings in a deep neural network model, we demonstrate that the supersense enrichment leads to a significant improvement in a range of downstream classification tasks. Introduction The effort of understanding the meaning of words is central to the NLP community. The word sense disambiguation (WSD) task has therefore received a substantial amount of attention (see Navigli (2009) or Pal and Saha (2015) for an overview). Words in training and evaluation data are usually annotated with senses taken from a particular lexical semantic resource, most commonly WordNet (Miller, 1995) . However, WordNet has been criticized to provide too fine-grained distinctions for end level applications. e.g. in machine translation or information retrieval (Izquierdo et al., 2009) . Although some researchers report an improvement in sentiment prediction using WSD (Rentoumi et al., 2009; Akkaya et al., 2011; Sumanth and Inkpen, 2015) , the publication bias toward positive results (Plank et al., 2014) impedes the comparison to experiments with the opposite conclusion, and the contribution of WSD to downstream document classification tasks remains \"mostly speculative\" (Ciaramita and Altun, 2006) , which can be attributed to the too subtle sense distinctions (Navigli, 2009) . This is why supersenses, the coarse-grained word labels based on WordNet's (Fellbaum, 1998) lexicographer files, have recently gained attention for text classification tasks. Supersenses contain 26 labels for nouns, such as ANIMAL, PERSON or FEELING and 15 labels for verbs, such as COMMUNICATION, MOTION or COGNITION. Usage of supersense labels has been shown to improve dependency parsing (Agirre et al., 2011) , named entity recognition (Marrero et al., 2009; R\u00fcd et al., 2011) , non-factoid question answering (Surdeanu et al., 2011) , question generation (Heilman, 2011) , semantic role labeling (Laparra and Rigau, 2013) , personality profiling (Flekova and Gurevych, 2015) , semantic similarity (Severyn et al., 2013) and metaphor detection (Tsvetkov et al., 2013) . An alternative path to semantic interpretation follows the distributional hypothesis (Harris, 1954) . Recently, word vector representations learned with neural-network based language models have contributed to state-of-the-art results on various linguistic tasks (Bordes et al., 2011; Mikolov et al., 2013b; Pennington et al., 2014; Levy et al., 2015) . In this work, we present a novel approach for incorporating the supersense information into the word embedding space and propose a new methodology for utilizing these to label the text with supersenses and to exploit these joint word and supersense embeddings in a range of applied text classification tasks. Our contributions in this work include the following: \u2022 We are the first to provide a joint wordand supersense-embedding model, which we make publicly available 1 for the research community. This provides an insight into the word and supersense positions in the vector space through similarity queries and visualizations, and can be readily used in any word embedding application. \u2022 Using this information, we propose a supersense tagging model which achieves competitive performance on recently published social media datasets. \u2022 We demonstrate how these predicted supersenses and their embeddings can be used in a range of text classification tasks. Using a deep neural network architecture, we achieve an improvement of 2-6% in accuracy for the tasks of sentiment polarity classification, subjectivity classification and metaphor prediction. 2 Related Work Semantically Enhanced Word Embeddings An idea of combining the distributional information with the expert knowledge is attractive and has been newly pursued in multiple directions. One of them is creating the word sense or synset embeddings (Iacobacci et al., 2015; Chen et al., 2014; Rothe and Sch\u00fctze, 2015; Bovi et al., 2015) . While the authors demonstrate the utility of these embeddings in tasks such as WSD, knowledge base unification or semantic similarity, the contribution of such vectors to downstream document classification problems can be challenging, given the fine granularity of the WordNet senses (cf. the discussion in Navigli (2009) ). As discussed above, supersenses have been shown to be better suited for carrying the relevant amount of semantic information. An alternative approach focuses on altering the objective of the learning mechanism to capture relational and similarity information from knowledge bases (Bordes et al., 2011; Bordes et al., 2012; Yu and Dredze, 2014; Bian et al., 2014; Faruqui and Dyer, 2014; Goikoetxea et al., 2015) . While, in principle, supersenses could be seen as a relation between a word and its hypernym, to our knowledge they have not been explicitly employed in these works. Moreover, an important advantage of our explicit supersense embeddings compared to the retrained vectors is their direct interpretability. Supersense Tagging Supersenses, also known as lexicographer files or semantic fields, were originally used to organize lexical-semantic resources (Fellbaum, 1990) . The supersense tagging task was introduced by Ciaramita and Johnson (2003) for nouns and later expanded for verbs (Ciaramita and Altun, 2006) . Their state-of-the-art system is trained and evaluated on the SemCor data (Miller et al., 1994) with an F-score of 77.18%, using a hidden Markov model. Since then, the system, resp. its reimplementation by Heilman 2 , was widely used in applied tasks (Agirre et al., 2011; Surdeanu et al., 2011; Laparra and Rigau, 2013) . Supersense taggers have then been built also for Italian (Picca et al., 2008) , Chinese (Qiu et al., 2011) and Arabic (Schneider et al., 2013) . Tsvetkov et al. (2015) proposes the usage of SemCor supersense frequencies as a way to evaluate word embedding models, showing that a good alignment of embedding dimensions to supersenses correlates with performance of the vectors in word similarity and text classification tasks. Recently, Johannsen et al. (2014) introduced a task of multiword supersense tagging on Twitter. On their newly constructed dataset, they show poor domain adaptation performance of previous systems, achieving a maximum performance with a searchbased structured prediction model (Daum\u00e9 III et al., 2009) trained on both Twitter and SemCor data. In parallel, Schneider and Smith (2015) expanded a multiword expression (MWE) annotated corpus of online reviews with supersense information, following an alternative annotation scheme focused on MWE. Similarly to Johannsen et al. (2014) , they find that SemCor may not be a sufficient resource for supersense tagging adaption to different domains. Therefore, in our work, we explore the potential of using an automatically annotated Babelfied Wikipedia corpus (Scozzafava et al., 2015) for this task. Building Supersense Embeddings To learn our embeddings, we adapt the freely available sample of 500k articles of Babelfied English Wikipedia (Scozzafava et al., 2015) . We map the Babel synsets to WordNet 3.0 synsets (Miller, 1995) using the BabelNet API (Navigli and Ponzetto, 2012) , and map these synsets to their corresponding WordNet's supersense categories (Miller, 1990; Fellbaum, 1990) . For the nested named entities, only the largest BabelNet span is considered, hence there are no nested supersense labels in our data. In this manner we obtain an alternative Wikipedia corpus, where each word is replaced by its corresponding supersense (see Table 1 , second row) and another alternative corpus where each word has its supersense appended (Table 1 , third row). Using the Gensim ( \u0158eh\u016f\u0159ek and Sojka, 2010) implementation of Word2vec (Mikolov et al., 2013a) , we applied the skip-gram model with negative sampling on these three Wikipedia corpora jointly (i.e., on the rows 1, 2 and 3 in Table 1 ) to produce continuous representations of words, supersense-disambiguated words and standalone supersenses in one vector space based on the distributional information obtained from the data. 3 The benefits of learning this information jointly are threefold: 1. Vectorial representations of the original words are altered (compared to training on text only), taking into account the similarity to supersenses in the vector space 2. Standalone supersenses are positioned in the vector space, enabling insightful similarity queries between words and supersenses, esp. for unannotated words 3. Disambiguated word+supersense vectors of annotated words can be employed similarly to sense embeddings (Iacobacci et al., 2015; Chen et al., 2014) to improve downstream tasks and serve as input for supersense disambiguation or contextual similarity systems In the following, the designation WORDS denotes the experiments with the word embeddings learned on plain Wikipedia text (as in row 1 of Table 1 ) while the designation SUPER denotes the experiments with the word embeddings learned jointly on the supersense-enriched Wikipedia (i.e., rows 1, 2 and 3 in Table 1 together). 4 Qualitative Analysis Verb Supersenses Table 2 shows the most similar word vectors to each of the verb supersense vectors using cosine similarity. Note that while no explicit part-of-speech information is specified, the most similar words hold both the semantic and syntactic informationmost of the assigned words are verbs. Figure 1 : Verb supersense embeddings visualized in the vector space (t-SNE) Furthermore, using a large corpus such as Wikipedia conveniently reduces the current need of lemmatization for supersense tagging, as the words are sufficiently represented in all their forms. The most frequent error originates from assigning the adverbs to their related verb categories, e.g. jokingly to COMMUNICATION and drastically to CHANGE. Such information, however, can be beneficial for context analysis in supersense tagging. Figure 1 displays the verb supersenses using the t-distributed Stochastic Neighbor Embedding (Van der Maaten and Hinton, 2008), a technique designed to visualize structures in high-dimensional data. While many of the distances are probable to be dataset-agnostic, such as the proximity of BODY, CONSUMPTION and EMOTION, other appear emphasized by the nature of Wikipedia corpus, e.g. the proximity of supersenses COMMUNICATION and CREATION or SOCIAL and MOTION, as can be explained by table 2 (see e.g. led and followed). Noun Supersenses Table 3 displays the most similar word embeddings for noun supersenses. In accordance with previous work on suppersense tagging (Ciaramita and Altun, 2006; Schneider et al., 2012; Johannsen et al., 2014) , the assignments of more specific supersenses such as FOOD, PLANT, TIME or PERSON are in general more plausible than those for abstract concepts such as ACT, ARTIFACT or COG-NITION. The same is visible in Figure 2 , where these supersense embeddings are more central, with closer neighbors. In contrast to the observations by Schneider et al. (2012) and Johannsen et al. (2014) , the COMMUNICATION supersense appears well defined, likely due to the character of Wikipedia. Table 4 : Accuracy and standard error on analogy tasks. Tasks related to noun supersense distinctions show the tendency to improve, while syntax-related information is pushed to the background. In most cases, however, the difference is not significant. Without explicitly exploiting the sense infromation, we compare the performance of our texttrained (WORDS) to our jointly trained (SU-PER) word vectors on the following word similarity datasets: WordSim353-Similarity (353-S) and WordSim353-Relatedness (353-R) (Agirre et al., 2009) , MEN dataset (Bruni et al., 2014) , RG-65 dataset (Rubenstein and Goodenough, 1965) and MC-30 (Miller and Charles, 1991) . The word embeddings for words trained jointly with supersenses achieve higher performance than those trained solely on the same text without supersenses on 4 out of 5 tasks (Table 5 ). In addition, the explicit supersense information could be further exploited, similarly to previous sense embedding works (Iacobacci et al., 2015; Rothe and Sch\u00fctze, 2015; Chen et al., 2014) . Furthermore, note that while we report the performance of our embeddings on the word similarity tasks for completeness, there has been a substantial discussion on seeking alternative ways to quantify embedding quality with the focus on their purpose in downstream applications (Li and Jurafsky, 2015; Faruqui et al., 2016) . Therefore, in the remainder of this paper we explore the usefulness of supersense embeddings in text classification tasks. Building a Supersense Tagger The task of predicting supersenses has recently regained its popularity (Johannsen et al., 2014; Schneider and Smith, 2015) , since supersenses provide disambiguating information, useful for numerous downstream NLP tasks, without the need of tedious fine-grained WSD. Exploiting our joint embeddings, we build a deep neural network model to predict supersenses on the Twitter supersense corpus created by Johannsen et al. (2014) , based on the Twitter NER task (Ritter et al., 2011) , using the same training data as the authors. 45 The datasets follow the token-level annotation which combines the B-I-O flags (Ramshaw and Marcus, 1995) with the supersense class labels to represent the multiword expression segmentation and supersense labeling in a sentence. Experimental Setup We implement a window-based approach with a multi-channel multi-layer perceptron model using the Theano framework (Bastien et al., 2012) . With a sliding window of size 5 for the sequence learning setup we extract for each word the following seven feature vectors: 1. 300-dimensional word embedding, 2. 41 cosine similarities of the word to each standalone supersense embedding, 3. 41 cosine similarities of the word to each of its word SUPERSENSE embeddings, 4. fixed vector of frequencies of each supersense in Wikipedia, in order to simulate the MFS backoff strategy, 5. for the given word, the frequency of each word SUPERSENSE in our Wikipedia corpus, 6. part-of-speech information as a unit vector, 7. casing information as a 3-dimensional (upper/lower/mixed) unit vector After a dropout regularization, the embedding sets are flattened, concatenated and fed into fully connected dense layers with a rectified linear unit (ReLU) activation function and a final softmax. Supersense Prediction We (2006) and the most frequent sense. Our system achieves comparable performance to the best previously used supervised systems, without using any explicit gazetteers. To get an intuition. 6 of how the individual feature vectors contribute to the prediction, we perform an ablation test by removing one feature group at a time. The biggest performance drop in the F-score (2.7-5.4) occurs when removing the the part of 6 Intuition, since there are many additional aspects that may affect the performance. For example, we keep the network parameters fixed for the ablation, although the feature vectors are of different lengths. Furthermore, our model performs a concatenation of the feature vectors, hence only the ablation extended to all possible permutations would verify the feature order effect. speech information, followed by the supersense similarity features and supersense frequency priors (0.2-3.0). The casing information has only a minor contribution to Twitter supersense tagging (0-0.9). Word sense disambiguation is to some extent an artificial stand-alone task. Despite its popularity, its contribution to downstream document classification tasks remains rather limited, which might be attributed to the complexity of document preprocessing and the errors cumulated along the pipeline. In this section, we demonstrate an alternative, deep learning approach, in which we process the original text in parallel to the supersense information. The model can then flexibly learn the usefulness of provided input. We demonstrate that the model extended with supersense embeddings outperforms the same model using only word-based features on a range of classification tasks. Experimental Setup Both Convolutional Neural Networks (CNNs) and Long Short-Term Memory (LSTM) (Hochreiter and Schmidhuber, 1997) are state-of-the-art semantic composition models for a variety of text classification tasks (Kim, 2014; Li et al., 2015; Johnson and Zhang, 2014) . Recently, their combinations have been proposed, achieving an unprecedented performance (Sainath et al., 2015) . We extend the CNN-LSTM approach from the publicly available The third channel contains the vector of relative frequencies of the word occurring in the enriched Wikipedia together with its supersense, i.e. providing the background supersense distribution for the word. Each of the document embeddings is then convoluted with the filter size of 3, followed by a pooling layer of length 2 and fed into a longshort-term-memory (LSTM) layer. In parallel, we feed as input a processed document text, where the words are replaced by their predicted supersenses. Given that we have the Wikipedia-based supersense embeddings in the same vector space as the word embeddings, we can now proceed to creating the 300-dimensional embedding channel also for the supersense text. As in the plain text channels, we feed also these embeddings into the convolutional and LSTM layers in a similar fashion. Afterwards, we concatenate all LSTM outputs and feed them into a standard fully connected neural network layer, followed by the sigmoid for the binary output. The following subsections discuss our results on a range of classification tasks: subjectivity prediction, sentiment polarity classification and metaphor detection. 2011 ) address this task with recursive autoencoders and Wikipedia word embeddings, later improving their score using recursive neural network with parse trees (Socher et al., 2012) . Competitive results were achieved also by a sentimentanalysis-specific parser (Dong et al., 2015) , with a fast dropout logistic regression (Wang and Manning, 2013), and with convolutional neural networks (Kim, 2014) . Table 7 compares these approaches to our results for a 10-fold crossvalidation with 10% of the data withheld for parameter tuning. The line WORDS displays the performance using only the leftmost part of our architecture, i.e. only the text input with our word embeddings. The line SUPER shows the result of using the full supersense architecture. As it can be seen from the Table 7 : 10-fold cross-validation accuracy and standard error of our system and as reported in previous work for the sentiment classification task on Pang and Lee (2005) movie review data A detailed analysis of the supersense-tagged data and the classification output revealed that supersenses help to generalize over rare terms. Noun Positive reviews Text Supersenses beating the austin powers film at their own game , verbstative the nounlocation nouncognition nounartifact at their own nouncommunication , this blaxploitation spoof downplays the raunch in favor this nounact nouncommunication verbstative the nouncognition in nouncommunication of gags that rely on the strength of their own cleverness of that verbcognition on the nouncognition of their own nouncognition as oppose to the extent of their outrageousness . as verbcommunication to the nounevent of their nounattribute . there is problem with this film that there verbstative nouncognition with this nouncommunication that even 3 oscar winner ca n't overcome , even 3 nounevent nounperson ca n't verbemotion , but it 's a nice girl-buddy movie but it verbstative a nice girl-buddy nouncommunication once it get rock-n-rolling . once it verbstative rock-n-rolling godard 's ode to tackle life 's wonderment is a nounperson nouncommunication to verbstative nouncognition 's nouncognition verbstative rambling and incoherent manifesto about the vagueness of topical a rambling and incoherent nouncommunication about the nounattribute of topical excess . in praise of love remain a ponderous and pretentious excess . in nouncognition of nouncognition verbstative a ponderous and pretentious endeavor that 's unfocused and tediously exasperating . nounact that verbstative unfocused and tediously exasperating Negative reviews Text Supersenses the action scene has all the suspense of a 20-car pileup , the nounact nounlocation verbstative all the nouncognition of a 20-car nouncognition , while the plot hole is big enough for a train car to drive while the nounlocation verbstative big enough for a nounartifact nounartifact to verbmotion through -if kaos have n't blow all up . through -if nounperson have n't verbcommunication them all up . the scriptwriter is no less a menace to society the nounperson verbstative no less nounstate to noungroup than the film 's character . than the nouncommunication nounperson . a very slow , uneventful ride a very slow , uneventful nounact around a pretty tattered old carousel . around a pretty tattered old nounartifact . the milieu is wholly unconvincing . . . the nouncognition verbstative wholly unconvincing and the histrionics reach a truly annoying pitch . and the nouncommunication verbstative a truly annoying nounattribute . Table 8 shows an example of positive and negative reviews which were consistently (5x in repeated experiments with different random seeds) classified incorrectly with word embeddings and classified correctly with supersense embeddings. Often the wit of unusual expressions is lost for the benefit of generalization. Some improvements appear to be a result of replacing proper names by NOUN.PERSON. Subjectivity Classification Pang and Lee ( 2004 ) demonstrate that the subjectivity detection can be a useful input for a sentiment classifier. They compose a publicly available dataset 9 of 5000 subjective and 5000 objective sentences, classifying them with a reported accuracy of 90-92% and further show that predicting this information improves the end-level sentiment classification on a movie review dataset. Kim (2014) and Wang and Manning (2013) further improve the performance through different machine learning methods. Supersenses are a natural candidate for subjectivity prediction, as we 9 https://www.cs.cornell.edu/people/ pabo/movie-review-data/ hypothesize that the nouns and verbs in the subjective and objective sentences often come from different semantic classes (e.g. VERB.FEELING vs. VERB.COGNITION). We employ the same architecture as in previous task, automatically annotating the words in the documents with their supersenses. Our results are reported in Table 9 . The supersenses (SUPER) provide an additional information, improving the model performance by up to 2% over word embeddings (WORDS). The difference between both systems is significant. Based on a manual error analysis, the supersense information contributes here in a similar manner as in the previous case. Subjective sentences contain more verbs of supersense PERCEPTION, while objective ones more frequently feature the supersenses POS-SESSION and SOCIAL. Nouns in the subjective category are characterized by supersenses COMMUNI-CATION and ATTRIBUTE, while in objective ones the PERSON and POSSESSION are more frequent. System Accuracy SVM (Pang and Lee, 2004) 90.0 NB (Pang and Lee, 2004) 92.0 CNN (Kim, 2014) 93.4 F-Dropout (Wang and Manning, 2013) 93.6 MV-CNN (Zhang et al., 2016) 93.9 WORDS 92.1 SUPER 93.9\u00b10.26 Since this setup is simpler than the sentence classification tasks, we use only a subset of our architecture, specifically the left half of Figure 3 , i.e. our word embeddings, similarity vectors and supersense frequency vectors. Since there are only two words in each document, we leave out the LSTM layer. We merge the similarity and frequency layers by multiplication and concatenate the result to the word embedding convolution, feeding the output of the concatenation directly to the dense layer. Table 10 shows our results on a provided test set. Based on McNemar's test, there is a significant difference (p < 0.01) between our system based on words only and the one with supersenses. Discussion Unlike previous research on supersenses, our work is not based on a manually produced gold stan-10 http://www.cs.cmu.edu/ \u02dcytsvetko/ metaphor/datasets.zip dard, but on an automatically annotated large corpus. While Scozzafava et al. (2015) report a high accuracy estimate of 77.8% on sense level, the performance and possible bias on tagged supersenses are yet to be evaluated. We are also aware that some of the previously proposed approaches for building word sense embeddings (Rothe and Sch\u00fctze, 2015; Chen et al., 2014; Iacobacci et al., 2015) could be eventually extended to supersenses. We strongly encourage the authors to do so and perform a contrastive evaluation comparing these methods. Additionaly, a different level of granularity of the concepts, such as WordNet Domains (Magnini and Cavaglia, 2000) could be explored. Conclusions and Future Work We have presented a novel joint embedding set of words and supersenses, which provides a new insight into the word and supersense positions in the vector space. We demonstrated the utility of these embeddings for predicting supersenses and manifested that the supersense enrichment can lead to a significant improvement in a range of downstream classification tasks, using our embeddings in a neural network model. The outcomes of this work are available to the research community. 11 . In follow-up work, we aim to apply our embedding method on smaller, yet gold-standard corpora such as SemCor (Miller et al., 1994) and STREUSLE (Schneider and Smith, 2015) to examine the impact of the corpus choice in detail and extend the training data beyond WordNet vocabulary. Moreover, the coarse semantic categorization contained in supersenses was shown to be preserved in translation (Schneider et al., 2013) , making them a perfect candidate for a multilingual adaptation of the vector space, e.g. extending Faruqui and Dyer (2014) . Acknowledgments This work has been supported by the Volkswagen Foundation as part of the Lichtenberg Professorship Program under grant No. I/82806 and by the German Research Foundation under grant No. GU 798/14-1. Additional support was provided by the German Federal Ministry of Education and Research (BMBF) as a part of the Software Campus program under the reference 01-S12054 and by the German Institute for Educational Research (DIPF). We thank the anonymous reviewers for their input. 11 https://github.com/UKPLab/ acl2016-supersense-embeddings",
    "funding": {
        "military": 0.0,
        "corporate": 0.0,
        "research agency": 0.004468766715060801,
        "foundation": 0.9997929049571395,
        "none": 1.3663532653085397e-05
    }
}