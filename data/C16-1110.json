{
    "article": "This paper presents an approach combining lexico-semantic resources and distributed representations of words applied to the evaluation in machine translation (MT). This study is made through the enrichment of a well-known MT evaluation metric: METEOR. This metric enables an approximate match (synonymy or morphological similarity) between an automatic and a reference translation. Our experiments are made in the framework of the Metrics task of WMT 2014. We show that distributed representations are a good alternative to lexico-semantic resources for MT evaluation and they can even bring interesting additional information. The augmented versions of METEOR, using vector representations, are made available on our Github page. Introduction Learning vector representations of words using neural networks has generated a strong enthusiasm in the NLP research community. In particular, many contributions were proposed after the work of (Mikolov et al., 2013a; Mikolov et al., 2013b; Mikolov et al., 2013c) on training word embeddings. The main reasons for this strong interest are: the proposal of a simple and efficient neural architecture to learn word vector representations, the availability of an open source tool Word2Vec 1 and the rapid structuring of a user community 2 . Later on, several contributions have extended the work of Mikolov on word vectors to phrases (sequences of words) (Mikolov et al., 2013b; Le and Mikolov, 2014a) and to bilingual representations (Luong et al., 2015) . All these vector representations capture similarities between words, phrases or sentences at different levels (morphological, semantic). However, although these representations can be semantically informative, they do not exactly replace fine-grained information available in lexical-semantic resources such as WordNet (Fellbaum, 1998) , Ba-belNet (Navigli and Ponzetto, 2010) , or DBnary (S\u00e9rasset, 2012) . Such lexical resources are also more easily interpretable by humans as shown in (Panchenko, 2016) , but their construction is costly while word embeddings can be trained ad infinitum on any monolingual or bilingual corpora. In short, both approaches (lexical resources and word embeddings) have their pros and cons. However, few studies have attempted to compare and combine them. Pioneering work of Faruqui et al. (2014) proposed to refine representations learning using lexical resources. The idea is to force words connected in the lexical network, to have a close representation (for example through a synonymy link). The technique proposed is evaluated on several benchmarks (word similarity, sentiment analysis, finding of synonyms). More recently, Panchenko (2016) and Rothe and Sch\u00fctze (2015) extended word embeddings to sense embeddings and tried to compare them to lexical synsets. Contributions: this article attempts to review the contribution of vector representations to measure sentence similarity. We compare them with similarity measures based on lexical resources such as Word-Net or DBnary. Machine Translation (MT) evaluation was identified as a particularly interesting application to investigate, since MT evaluation is still an open problem nowadays. More precisely, we propose to augment a well known MT evaluation metric (METEOR (Banerjee and Lavie, 2005) ) which allows an approximate matching (through synonymy or morphological similarity) between MT hypothesis and reference. The augmented versions of METEOR proposed (using word embeddings, lexical resources or both) allow us to objectively compare the contribution of each approach to measure sentence similarity. For this, correlations between METEOR and human judgements (of MT outputs) are measured within the framework of WMT 2014 Metrics task. The code of the augmented versions of METEOR is also provided on our Github page 3 . Outline: in section 2 (Related Work), we quickly present METEOR, lexical resources and word embeddings. Section 3 presents our propositions to augment METEOR in order to conduct a fair comparison between lexical resources and vector representations respectively. Section 4 presents our experiments made within the framework of WMT 2014, as well as quantitative and qualitative analyses. Finally, section 5 concludes this work and gives some perpectives. 2 Related Work 2.1 An automatic metric for MT evaluation: METEOR 2.1.1 The origins METEOR was proposed to compensate BLEU's and NIST's weaknesses (Papineni et al., 2002; Doddington, 2002) . In short, METEOR was created to better correlate with human judgements by using more than word-to-word alignments between a hypothesis and some references. The alignment is made according to three modules: the first stage uses exact match between word surface forms (Exact module), the second one compares word stems (Stems module) and the third one uses synonyms (Synonym module) from a lexical resource such as WordNet (available for English only in METEOR). One contribution of this paper is to propose an alternative to Stems and Synonym modules: our proposed add-on will be called Vectors module later on. Recent extensions of METEOR METEOR-NEXT (Denkowski and Lavie, 2010a) was proposed to better correlate with HTER (Humantargeted Translation Edit Rate -HTER (Snover et al., 2006) ). HTER is a semi-automatic post-editing based metric, which measures the edit distance between a hypothesis and a reference. METEOR-NEXT proposes to go further than just word-to-word alignment by using phrase-to-phrase alignments. For this, phrase databases were created for several languages like English (Snover et al., 2009) , German, French or Czech (Denkowski and Lavie, 2010b) . More recently, another version called METEOR Universal used bitexts to extract paraphrases (Denkowski and Lavie, 2014) . METEOR was also extended by using Word Sense Disambiguation (WSD) techniques (Apidianaki and Marie, 2015) . The authors used Babelfly (Moro et al., 2014) for several langage pairs (translation from French, Hindi, German, Czech and Russian to English). A better correlation with human judgement at segment level was observed using WSD in METEOR. Finally, to extend the use of Synonym module to target languages others than English, Elloumi et al. (2015) proposed to replace WordNet by DBnary (S\u00e9rasset, 2012) . The new target languages equipped with a Synonym module were French, German, Spanish, Russian and English. Lexical resources WordNet WordNet is a well known lexical resource for English. Created at the University of Princeton (Fellbaum, 1998) , it is used in several NLP tasks such as Machine Translation, Word Sense Disambiguation, Cross-lingual Information Retrieval, etc. WordNet links nouns, verbs, adjectives and adverbs to a set of synonyms called \"synsets\". Each synset represents a specific concept. Synsets are linked to each other according to semantic, conceptual and lexical relations. Words with multiple meanings correspond to multiple synsets and meanings are sorted according to their frequency. WordNet is available in several languages (Arabic, French, etc.) but these versions are not freely available. In METEOR, only English WordNet is used to match hypothesis and reference words according to their meanings. It contains more than 117,000 synsets. To extract lemmatized forms, METEOR uses a function called Morphy-7WN1 which firstly checks special cases in an exception list and secondly uses rules to lemmatize words according to their syntactic class. DBnary DBnary is a multilingual lexical resource in RDF format (Klyne and Carroll, 2004) . This resource has been collected by S\u00e9rasset (2012) . Lexical data are represented using the LEMON vocabulary (McCrae et al., 2011) . Most Part-of-Speech tags are linked with Olia standards or Lexinfo vocabularies (Chiarcos and Sukhareva, 2015; Cimiano et al., 2011) which makes them reusable in many contexts. DBnary is downloadable or available online through a SPARQL access point. Lexical data are automatically extracted from Wiktionary, Wikipedia's dictionary for 21 languages 4 . Among available lexical data, one may find 2.9M lexical entries (with parts-of-speech, canonical form for all of them, along with pronunciations when available and inflected forms for some languages). Lexical entries are subdivided into 2.5M lexical senses (with their definitions and some usage example). DBnary also contains more than 4.6M translations going from the 21 extracted sources languages to more than 1500 different target languages. Additionally, DBnary contains lexicosemantic relations (syno/anto-nyms, hypo/hypero-nyms, etc.). Table 1 shows the size of the data for languages involved in the experiments later reported in this paper. Additional figures are available on the DBnary public web site 5 . Lemmatized forms for DBnary are based on the TreeTagger module (Schmid, 1995) , which enables us to find the corresponding synsets. Monolingual and bilingual embeddings Overview Learning word embeddings is an active research area (Bengio et al., 2003; Turian et al., 2010; Collobert et al., 2011; Huang et al., 2012) . The main idea is to learn a word representation according to its context: the surrounding words (Baroni and Zamparelli, 2010) . The words are projected on a continuous space and those with similar context should be close in this multi-dimensional space. When word vectors are available, a similarity between two words can be measured by a metric such as a cosine similarity. Using word-embeddings for machine translation evaluation is appealing since they can be used to compute similarity between words or phrases in the same language (monolingual embeddings capture intrinsically synonymy or morphological closeness) or in two different languages (bilingual embeddings allow to directly compute a distance between two sentences in different languages). We use the MultiVec (B\u00e9rard et al., 2016) toolkit for computing and managing the continuous representations of texts. It includes word2vec (Mikolov et al., 2013a) , paragraph vector (Le and Mikolov, 2014b) and bilingual distributed representations (Luong et al., 2015) features. Zou et al. (2013) proposed to use bilingual word embeddings to detect similarities for word alignment. This information is used as an additional parameter in a phrase-based machine translation system. (Banchs et al., 2015) proposed to explore a metric funded on latent semantic analysis (Salton et al., 1975) to extract semantic embeddings and measure the similarity between two sentences. Finally, these word embeddings were used to enrich ROUGE, a metric for evaluating automatic summarization (Ng and Abrecht, 2015) . Use of vector representations in NLP evaluation As far as MT evaluation is concerned, Gupta et al. (2015) proposed a metric based on neural network language models jointly with dependency trees to link an hypothesis to a reference. Meanwhile, Vela and Tan (2015) proposed an approach to model document embeddings to predict translation adequacy. These works are close to ours but they propose metrics which need to be learned and optimized to a specific task or domain. In our work, we use word embeddings trained once and for all on a (large) general corpus. Our detailed methodology to augment METEOR metric is presented in the next section. 3 Augmented METEOR Data and protocol We evaluate our augmented METEOR through WMT14 framework (metrics task (Machacek and Bojar, 2014) ). This framework enables us to estimate the correlation of proposed evaluation metric with human judgements for several machine translation outputs and several language pairs (English-French, English-German, English-Russian, and vice versa). In our experiments, we use segment level Kendall's \u03c4 correlation coefficient, as proposed in WMT14 (based on systems ranking at sentence level by humans, compared to automatic metric ranking). We augment METEOR in two ways: firstly, we replace the use of lexical resources by the use of word embeddings. In other words, we replace Stem and Synonym modules by our new Vector module. Secondly, we combine lexical resources and word embeddings by using jointly Stem, Synonym and our Vector module. To summarize, the following variants of METEOR are evaluated: \u2022 METEOR Baseline: the METEOR score is estimated using Exact, Stem, Synonym and Paraphrase modules for English as a target language and Exact, Stem and Paraphrase modules for other target languages, \u2022 METEOR DBnary: similar to METEOR Baseline but Synonym module is available for any target language since it uses DBnary resource instead of Wordnet, \u2022 METEOR Vector: the Stem and Synonym modules are replaced by the Vector module ; \u2022 METEOR Baseline + Vector: the METEOR Baseline configuration is augmented with the Vector module ; \u2022 METEOR DBnary + Vector: the METEOR DBnary configuration is augmented with the Vector module. METEOR DBnary As mentioned in section 2.1, the Synonym module of METEOR uses WordNet's synsets (117K entries for English). As an alternative, we use another lexical resource: DBnary (S\u00e9rasset, 2012) , as proposed recently by Elloumi et al. (2015) . This allows us to use Synonym module for any target language: French, German, Spanish, Russian and English. More precisely, synonym relations are extracted from DBnary using SPARQL request on the DBnary server 6 . We extract data for English, French, Russian and German languages. The extraction process outputs relations in the following format: lemma \u2192 Synonym. Then, these data are projected to the WordNet format used in METEOR code. This process gives an identifier (ID) for each lemma and builds a list of synonym IDs for each lemma such as: lemma \u2192 ID_Syn 1 , ID_Syn 2 , ID_Syn 3 . The first two lines of Table 3 compare METEOR DBnary and METEOR Baseline for several French-English MT systems submitted to WMT14 (Bojar et al., 2014) . METEOR DBnary improved the score by 0.7 points from METEOR Baseline. In other words, DBnary seems to match more synonyms than WordNet, despite the fact that WordNet is 3.3 time bigger than DBnary in English. This could be due to the fact that WordNet has only 4 morpho-syntactic categories (Noun, Verbs, Adjectives and Adverbs) while DBnary has more morpho-syntactic categories. METEOR Vector As mentioned in section 2.3.2, we propose to replace lexical resources by word embeddings. Word embeddings capture the context of the words. Consequently, similar word vectors may correspond to synonyms or morphological variants (see section 2.3). In our Vector module, the matching between two words is done using a similarity score derived from the cosine similarity. If the similarity score is higher than a threshold, the words are considered as matched (potential synonyms or morphological proximity). In our experiments, we evaluate using: (a) a default threshold fixed to 0.80 (b) an oracle threshold obtained empirically on the WMT14 data set (Machacek and Bojar, 2014) . Table 2 summarizes data used to train monolingual word embeddings and bilingual word embeddings. These word embeddings were trained with a CBOW model, a vector size of 50 and a windows size \u00b15 words, thanks to the MultiVec toolkit (B\u00e9rard et al., 2016) Table 3 : METEOR scores (all configurations) on the newstest corpus of the WMT14 translation evaluation task from French to English. The results presented in table 3 show that word embeddings (Vector module) can efficiently replace lexical resources (Synonym and Stem modules) to match words in the translation hypothesis with those in the reference. In addition, their combination shows a good potential to match even more words between hypothesis and reference. In the next section, we evaluate if the proposed versions of augmented METEOR better correlate with human judgements. Correlations of Augmented METEOR with Human Judgements Results of different METEOR configurations In these experiments, we present results obtained with the Vector module based on two threshold values: a default one (0.80) and an oracle one which maximizes the correlation with human judgement. Table 4 presents the correlation scores obtained within the framework of WMT14 metrics task (Machacek and Bojar, 2014) 7 . The evaluation is done according to several translation tasks: from English to French (en-fr), German (en-de) and Russian (en-ru), and vice versa. French, German and Russian as target languages represent a growing difficulty due to their morphology. English as target language allows to compare the lexical databases (Wordnet vs DBnary). To English. Firstly, when the translation direction is to English, we can observe that METEOR Baseline and METEOR Vector get equivalent results in average. METEOR DBnary also obtains similar results to METEOR Baseline. When we combine WordNet lexical resource and word embeddings (METEOR Baseline + Vector), the reference score is increased by 0, 005 points. If the combination is done with DBnary's lexical data (METEOR DBnary + Vector), the improvement is similar. For Vector module, optimization of the threshold slightly improves the average correlation. Combination of METEOR Baseline + Vector or METEOR DBnary + Vector improves by 0, 002 points when the threshold is optimized. From English. Secondly, when the translation direction is from English, we can observe an improvement of the correlation score obtained with METEOR DBnary, compared with METEOR Baseline. This is due to the fact that for French, German and Russian as target languages, METEOR Baseline does not use any Synonym module. Our METEOR Vector with the default threshold also gets better correlation scores compared to METEOR DBnary (+0.003 points in average). The combinations METEOR Baseline + Vector and METEOR DBnary + Vector further improve correlations with human judgements (+0.001 points in average). Finally, when we use an oracle threshold for Vector module, improvements are bigger and can reach 0.013 points in average, compared to METEOR Baseline. Table 4 : Correlation score at segment level between several METEOR configurations and human judgements (WMT14 framework). Scores obtained with the Vector module are presented firstly with the default threshold (0.80) and secondly with the oracle threshold (under the dashed line). Investigating more embeddings configurations In the previous section, METEOR Vector used a simple and monolingual word embedding configuration. This section investigates more configurations (monolingual and bilingual) to improve METEOR. In this experiment, we focus only on METEOR Vector. Indeed, the monolingual (baseline) shown in table 6 corresponds to the line METEOR Vector in Table 4 . Firstly, we propose to train our embeddings on bitexts (Table 2 ) using bivec approach (Luong et al., 2015) . We also try to train pseudo-bilingual embeddings on a pseudo bitext with target language text and POS tags (see an example in Table 5 ). The main idea is to strongly link words with their syntactic class when learning word embeddings. We  In the Table 6 , we compare several training configuration of the word embeddings through the same protocol as previous section (only average correlations are reported while the detailed results will be provided as supplementary material on the paper web page). When we observe the average results, the bilingual embeddings seem not to be as efficient as the monolingual baseline. The pseudo-bilingual approaches with POS and Lemmas obtained slightly the same results as the monolingual baseline regarding all the configurations we have. Finally, the monolingual model learned on lemmas (instead of words) tends to be slightly better when the translation direction is to English. However, this trend should be confirmed in a future investigation. Discussion The correlation scores obtained with the enriched metric tend to suggest that distributed representations are as powerful as lexico-semantic resources for automatic MT evaluation. Furthermore, vector representations can bring additional information, and they are definitely useful when no lexical resource is available in the target language. Considering the average correlation scores obtained, the configurations METEOR Vector and ME-TEOR DBnary are comparable, except on German language, for which METEOR Vector obtained a better correlation score. On the other hand, when we combine lexical data with Vector module (METEOR DBnary + Vector), we observe a small increase of the correlation score, in particular when threshold is tuned, which suggests a tunable version of METEOR. Finally, several embeddings variants were trained but it seems that monolingual models are efficient enough for the specific task (MT evaluation) considered here. Examples To illustrate the word matching obtained by our versions of METEOR, we analyze two examples from the evaluation data set. In these examples, we present the alignments obtained with METEOR DBnary + Vector. hypothesis: je pense qu' il est concevable que ces donn\u00e9es soient employ\u00e9es pour le b\u00e9n\u00e9fice mutuel . Reference: j' estime qu' il est concevable que ces donn\u00e9es soient utilis\u00e9es dans leur int\u00e9r\u00eat mutuel . Table 7 : First example from the system rbmt 1 evaluated with the combination METEOR DBnary + Vector. The relations detected with the lexical resource DBnary are framed in continuous line while those obtained thanks to the distributed representations are framed in dotted line. The example presented in table 7 shows rbmt 1 system output submitted during the WMT14 translation task. METEOR baseline found only alignments for words with the same surface forms (\"qu' \", \"il\", \"est\", etc. -these forms are found identical thanks to the Exact module and are not highlighted here). The Synonym module based on DBnary makes it possible to find a correspondence between words \"employ\u00e9es\" -\"utilis\u00e9es\" and \"pour\" -\"dans\". Lastly, Vector module indicates that words \"pense\" and \"estime\" are contextually closed, just as the words \"je\" and \"j\"'. When the example is only evaluated with METEOR Vector, words \"employ\u00e9es\" and \"utilis\u00e9es\" are also paired with the default threshold (0.80). On the other hand, the words \"b\u00e9n\u00e9fice\" and \"int\u00e9r\u00eat\" are paired by the module Vector only if the decision threshold is lowered to 0.75. In the second example presented in table 8, the hypothesis is provided by rbmt 4 system. As in the previous example, the correspondences found with Synonym module based on DBnary (framed by one hypothesis: le cr\u00e9ateur de SAS disait il faisait un genre du feuilleton g\u00e9opolitique . Reference: le p\u00e8re de SAS disait faire un genre de feuilleton g\u00e9opolitique . continuous line) are supplemented by those found by Vector module (dotted line): Synonym module found \"cr\u00e9ateur\" -\"p\u00e8re\" and \"faisait\" -\"faire\"; while \"du\" and \"de\" are aligned thanks to Vector module. These examples illustrate the complementarity between lexical resources and word embeddings for sentence similarity detection. Word vectors can enable to match important words (like \"pense\" and \"estime\" in our first example), but also empty words (like \"du\" et \"de\" in our second example). Limitations of Word Embeddings So far, we did not deal with Out-Of-Vocabulary (OOV) words in METEOR Vector. By OOV we mean words that do not have a vector representation because they were not found in the training corpus for word embeddings. In that case, no matching can occur between the word in the hypothesis and words in reference. Consequently, it might be interesting to carefully select the training corpus for word vectors so that it will be close enough to the machine translation outputs to evaluate. This could be considered in future works. Conclusion and Perspectives In this paper, we proposed to compare text similarity measures based on vector representations with similarity measures based on lexico-semantic resources. Our work was applied to machine translation evaluation and we extended an existing evaluation metric called METEOR. Our experiments have shown that word vector representations can be useful when no lexical resource is available in the target language. Moreover, it seems that these representations can bring complementary information in addition to lexical resources (experiments done for French, English, German and Russian as target languages). Our future works on this topic will focus on the use of phrase embeddings to complement the Paraphrase module of METEOR. We also plan to introduce a syntax flavor in our Vector module by weighting the cosine distances differently according to the morpho-syntactic category of the words. Finally, we will study the adaptation of our approach to other metrics such as TER-Plus, for instance. The tool, the data and the models presented in this paper will be put online 8 to facilitate reproducibility of the experiments we carried out. Acknowledgements This work was supported by the KEHATH project funded by the French National Agency for Research (ANR) under the grant number ANR-14-CE24-0016-03.",
    "abstract": "This paper presents an approach combining lexico-semantic resources and distributed representations of words applied to the evaluation in machine translation (MT). This study is made through the enrichment of a well-known MT evaluation metric: METEOR. This metric enables an approximate match (synonymy or morphological similarity) between an automatic and a reference translation. Our experiments are made in the framework of the Metrics task of WMT 2014. We show that distributed representations are a good alternative to lexico-semantic resources for MT evaluation and they can even bring interesting additional information. The augmented versions of METEOR, using vector representations, are made available on our Github page.",
    "countries": [
        "France"
    ],
    "languages": [
        "Spanish",
        "Russian",
        "English",
        "German",
        "French"
    ],
    "numcitedby": "14",
    "year": "2016",
    "month": "December",
    "title": "{W}ord2{V}ec vs {DB}nary: Augmenting {METEOR} using Vector Representations or Lexical Resources?"
}