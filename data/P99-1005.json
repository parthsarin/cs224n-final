{
    "article": "Distributional similarity is a useful notion in estimating the probabilities of rare joint events. It has been employed both to cluster events according to their distributions, and to directly compute averages of estimates for distributional neighbors of a target event. Here, we examine the tradeoffs between model size and prediction accuracy for cluster-based and nearest neighbors distributional models of unseen events. Introduction In many statistical language-processing problems, it is necessary to estimate the joint probability or cooeeurrence probability of events drawn from two prescribed sets. Data sparseness can make such estimates difficult when the events under consideration are sufficiently fine-grained, for instance, when they correspond to occurrences of specific words in given configurations. In particular, in many practical modeling tasks, a substantial fraction of the cooccurrences of interest have never been seen in training data. In most previous work (Jelinek and Mercer, 1980; Katz, 1987; Church and Gale, 1991; Ney and Essen, 1993) , this lack of information is addressed by reserving some mass in the probability model for unseen joint events, and then assigning that mass to those events as a function of their marginal frequencies. An intuitively appealing alternative to relying on marginal frequencies alone is to combine estimates of the probabilities of \"similar\" events. More specifically, a joint event (x, y) would be considered similar to another (x t, y) if the distributions of Y given x and Y given x' (the cooccurrence distributions of x and x ') meet an appropriate definition of distributional similarity. For example, one can infer that the bigram \"after ACL-99\" is plausible --even if it has never 33 occurred before --from the fact that the bigram \"after ACL-95\" has occurred, if \"ACL-99\" and \"ACL-95\" have similar cooccurrence distributions. For concreteness and experimental evaluation, we focus in this paper on a particular type of cooccurrence, that of a main verb and the head noun of its direct object in English text. Our main goal is to obtain estimates ~(vln ) of the conditional probability of a main verb v given a direct object head noun n, which can then be used in particular prediction tasks. In previous work, we and our co-authors have proposed two different probability estimation methods that incorporate word similarity information: distributional clustering and nearestneighbors averaging. Distributional clustering (Pereira et al., 1993) assigns to each word a probability distribution over clusters to which it may belong, and characterizes each cluster by a centroid, which is an average of cooccurrence distributions of words weighted according to cluster membership probabilities. Cooccurrence probabilities can then be derived from either a membership-weighted average of the clusters to which the words in the cooccurrence belong, or just from the highest-probability cluster. In contrast, nearest-neighbors averaging 1 (Dagan et al., 1999) does not explicitly cluster words. Rather, a given cooccurrence probability is estimated by averaging probabilities for the set of cooccurrences most similar to the target cooccurrence. That is, while both methods involve appealing to similar \"witnesses\" (in the clustering case, these witnesses are the centroids; for nearest-neighbors averaging, they are the most similar words), in nearest-neighbors averaging the witnesses vary for different cooccurrences, whereas in distributional clustering the same set of witnesses is used for every cooccurrence (see Figure 1 ). We thus see that distributional clustering and nearest-neighbors averaging are complementary approaches. Distributional clustering generally creates a compact representation of the data, namely, the cluster membership probability tables and the cluster centroids. Nearestneighbors averaging, on the other hand, associates a specific set of similar words to each word and thus typically increases the amount of storage required. In a way, it is clustering taken to the limit -each word forms its own cluster. In previous work, we have shown that both distributional clustering and nearest-neighbors averaging can yield improvements of up to 40% with respect to Katz's (1987) state-of-the-art backoffmethod in the prediction of unseen cooccurrences. In the case of nearest-neighbors averaging, we have also demonstrated perplexity reductions of 20% and statistically significant improvement in speech recognition error rate. Furthermore, each method has generated some discussion in the literature (Hofmann et al., 1999; Baker and McCallum, 1998; Ide and Veronis, 1998) . Given the relative success of these methods and their complementarity, it is natural to wonder how they compare in practice. Several authors (Schiitze, 1993; Dagan et al., 1995; Ide and Veronis, 1998) have suggested that clustering methods, by reducing data to a small set of representatives, might perform less well than nearest-neighbors averaging-type methods. For instance, Dagan et al. (1995, p. 124) argue: This [class-based] approach, which follows long traditions in semantic classification, is very appealing, as it attempts to capture \"typical\" properties of classes of words. However .... it is not clear that word co-occurrence patterns can be generalized to class cooccurrence parameters without losing too much information. Furthermore, early work on class-based language models was inconclusive (Brown et al., 1992) . 34 In this paper, we present a detailed comparison of distributional clustering and nearestneighbors averaging on several large datasets, exploring the tradeoff in similarity-based modeling between memory usage on the one hand and estimation accuracy on the other. We find that the performances of the two methods are in general very similar: with respect to Katz's back-off, they both provide average error reductions of up to 40% on one task and up to 7% on a related, but somewhat more difficult, task. Only in a fairly unrealistic setting did nearestneighbors averaging clearly beat distributional clustering, but even in this case, both methods were able to achieve average error reductions of at least 18% in comparison to backoff. Therefore, previous claims that clustering methods are necessarily inferior are not strongly supported by the evidence of these experiments, although it is of course possible that the situation may be different for other tasks. Two models We now survey the distributional clustering (section 2.1) and nearest-neighbors averaging (section 2.2) models. Section 2.3 examines the relationships between these two methods. Clustering The distributional clustering model that we evaluate in this paper is a refinement of our earlier model (Pereira et al., 1993) . The new model has important theoretical advantages over the earlier one and interesting mathematical properties, which will be discussed elsewhere. Here, we will outline the main motivation for the model, the iterative equations that implement it, and their practical use in clustering. The model involves two discreterandom variables N (nouns) and V (verbs) whose joint distribution we have sampled, and a new unobserved discrete random variable C representing probabilistic clusters of elements of N. The role of the hidden variable C is specified by the conditional distribution p(cln), which can be thought of as the probability that n belongs to cluster c. We want to preserve in C as much as possible of the information that N has about V, that is, maximize the mutual information 2 I(V, C). On the other hand, we would also  like to control the degree of compression of C relative to N, that is, the mutual information 2I( X, Y) = ~-]~x ~ P(x, y) log (P(x, y)/P(x)P(y)). I(C,N). Furthermore, since C is intended to summarize N in its role as a predictor of V, it should carry no information about V that N does not already have. That is, V should be conditionally independent of C given N, which allows us to write p(vlc ) = ~-]p(vln)p(nlc ) . (1) n The distribution p(VIc ) is the centroid for cluster c. It can be shown that I(V, C) is maximized subject to fixed I(C, N) and the above conditional independence assumption when p(c) p(cln ) = ~ exp [-/3D(p(Yln)]]p(Ylc) ) ] , (2) where /3 is the Lagrange multiplier associated with fixed I(C, N), Zn is the normalization Zn = y~ p(c) exp [-/3D(p(Y[n)llp(Ylc ))] , c and D is the KuUback-Leiber (KL) divergence, which measures the distance, in an informationtheoretic sense, between two distributions q and r: \u2022 q(v) D(qllr ) = ~ q(v) lOgr(v) . v The main behavioral difference between this model and our previous one is the p(c) factor in (2), which tends to sharpen cluster membership distributions. In addition, our earlier experiments used a uniform marginal distribution for the nouns instead of the marginal distribution in the actual data, in order to make clustering more sensitive to informative but relatively rare 35 nouns. While neither difference leads to major changes in clustering results, we prefer the current model for its better theoretical foundation. For fixed /3, equations ( 2 ) and ( 1 ) together with Bayes rule and marginalization can be used in a provably convergent iterative reestimation process for p(glc), p(YlC ) and p(C). These distributions form the model for the given/3. It is easy to see that for/3 = 0, p(nlc ) does not depend on the cluster distribution p(VIc), so the natural number of clusters (distinct values of C) is one. At the other extreme, for very large /3 the natural number of clusters is the same as the number of nouns. In general, a higher value of/3 corresponds to a larger number of clusters. The natural number of clusters k and the probabilistic model for different values of/3 are estimated as follows. We specify an increasing sequence {/3i} of/3 values (the \"annealing\" schedule), starting with a very low value/30 and increasing slowly (in our experiments, /30 = 1 and/3i+1 = 1-1/30. Assuming that the natural number of clusters and model for/3i have been computed, we set/3 =/3i+1 and split each cluster into two twins by taking small random perturbations of the original cluster centroids. We then apply the iterative reestimation procedure until convergence. If two twins end up with significantly different centroids, we conclude that they are now separate clusters. Thus, for each i we have a number of clusters ki and a model relating those clusters to the data variables N and V. A cluster model can be used to estimate p(vln ) when v and n have not occurred together in training. We consider two heuristic ways of doing this estimation: Nearest-neighbors averaging As noted earlier, the nearest-neighbors averaging method is an alternative to clustering for estimating the probabilities of unseen cooccurfences. Given an unseen pair (n, v), we calculate an estimate 15(vln ) as an appropriate average of p(vln I) where n I is distributionally similar to n. Many distributional similarity measures can be considered (Lee, 1999) . In this paper, we focus on the one that gave the best results in our earlier work (Dagan et al., 1999) , the Jensen-Shannon divergence (Rao, 1982; Lin, 1991) . The Jensen-Shannon divergence of two discrete distributions p and q over the same domain is defined as 1 gS(p, q) = ~ It is easy to see that JS(p, q) is always defined. In previous work, we used the estimate ~5(vln ) = 1 ~ p(vln,)exp(_Zj(n,n,)), (In nlES(n,k) where J(n,n') = JS (p(VIn),p(Yln')), Z and k are tunable parameters, S(n, k) is the set of k nouns with the smallest Jensen-Shannon divergence to n, and an is a normalization term. However, in the present work we use the simpler unweighted average 1 /~(vln) = -~ ~ p(vln'), (3) n' ES(n,k) and examine the effect of the choice of k on modeling performance. By eliminating extra parameters, this restricted formulation allows a more direct comparison of nearest-neighbors averaging to distributional clustering, as discussed in the next section. Furthermore, our earlier experiments showed that an exponentially decreasing weight has much the same effect on performance as a bound on the number of nearest neighbors participating in the estimate. Discussion In the previous two sections, we presented two complementary paradigms for incorporating distributional similarity information into cooccurrence probability estimates. Now, one cannot always draw conclusions about the relative fitness of two methods simply from headto-head performance comparisons; for instance, one method might actually make use of inherently more informative statistics but produce worse results because the authors chose a suboptimal weighting scheme. In the present case, however, we are working with two models which, while representing opposite extremes in terms of generalization, share enough features to make the comparison meaningful. First, both models use linear combinations of cooccurrence probabilities for similar entities. Second, each has a single free parameter k, and the two k's enjoy a natural inverse correspondence: a large number of clusters in the distributional clustering case results in only the closest centroids contributing significantly to the cooccurrence probability estimate, whereas a large number of neighbors in the nearest-neighbors averaging case means that relatively distant words are consulted. And finally, the two distance functions are similar in spirit: both are based on the KL divergence to some type of averaged distribution. We have thus attempted to eliminate functional form, number and type of parameters, and choice of distance function from playing a role in the comparison, increasing our confidence that we are truly comparing paradigms and not implementation details. What are the fundamental differences between the two methods? From the foregoing discussion it is clear that distributional clustering is theoretically more satisfying and depends on a single model complexity parameter. On the other hand, nearest-neighbors averaging in its most general form offers more flexibility in defining the set of most similar words and their relative weights (Dagan et al., 1999) . Also, the training phase requires little computation, as opposed to the iterative re-estimation procedure employed to build the cluster model. But the key difference is the amount of data compression, or equivalently the amount of generalization, produced by the two models. Cluster-ing yields a far more compact representation of the data when k, the model size parameter, is smaller than INf. As noted above, various authors have conjectured that this data reduction must inevitably result in lower performance in comparison to nearest-neighbor methods, which store the most specific information for each individual word. Our experiments aim to explore this hypothesized generalization-accuracy tradeoff. Evaluation Methodology We compared the two similarity-based estimation techniques at the following decision task, which evaluates their ability to choose the more likely of two unseen cooccurrences. Test instances consist of noun-verb-verb triples (n, vl, v2) , where both (n, Vl) and (n, v2) are unseen cooccurrences, but (n, vl) is more likely (how this is determined is discussed below). For each test instance, the language model probabilities 151 dej 15(vlln) and i52 dej 15(v2]n) are computed; the result of the test is either correct (151 > 152), incorrect (/51 < ~52,) or a tie (151 = 152). Overall performance is measured by the error rate on the entire test set, defined as 1 ~(# of incorrect choices + (# of ties)/2), where T is the number of test triples, not counting multiplicities. Our global experimental design was to run ten-fold cross-validation experiments comparing distributional clustering, nearest-neighbors averaging, and Katz's backoff (the baseline) on the decision task just outlined. All results we report below are averages over the ten train-test splits. For each split, test triples were created from the held-out test set. Each model used the training set to calculate all basic quantities (e.g., p(vln ) for each verb and noun), but not to train k. Then, the performance of each similarity-based model was evaluated on the test triples for a sequence of settings for k. We expected that clustering performance with respect to the baseline would initially improve and then decline. That is, we conjectured that the model would overgeneralize at small k but overfit the training data at large k. In contrast, for nearest-neighbors averaging, we hypothesized monotonically decreasing performance curves: using only the very most similar words would yield high performance, whereas including more distant, uninformative words would result in lower accuracy. From previous experience, we believed that both methods would do well with respect to backoff. Data In order to implement the experimental methodology just described, we employed the follow data preparation method: i. Gather verb-object pairs using the CASS partial parser (Abney, 1996) Partition set of pairs into ten folds Step 3b is necessary because neither the similarity-based methods nor backoff handle novel unigrams gracefully. We instantiated this schema in three ways: AP89 We retrieved 1,577,582 verb-object pairs from 1989 Associated Press (AP) newswire, discarding singletons (pairs occurring only once) as is commonly done in language modeling. We split this set by type 3, which does not realistically model how new data occurs in real life, but does conveniently guarantee that the entire test set is unseen. In step 3c all (n, v2) were found such that (n, vl) occurred at least twice as often as (n, v2) in the test fold; this gives reasonable reassurance that n is indeed more likely to cooccur with Vl, even though (n, v2) is plausible (since it did in fact occur). 3When a corpus is split by type, all instances of a given type must end up in the same partition. If the split is by token, then instances of the same type may end up in different partitions. For example, for corpus '% b a c', \"a b\" +\"a c\" is a valid split by token, but not by type. Step 3c was carried out as for AP89. AP90fake The procedure for creating the AP90unseen data resulted in much smaller test sets than in the AP89 case (see Table I ). To generate larger test sets, we used the same folds as in AP90unseen, but implemented step 3c differently. Instead of selecting v2 from cooccurrences (n, v2) in the held-out set, test triples were constructed using v2 that never cooccurred with n in either the training or the test data. That is, each test triple represented a choice between a plausible cooccurrence (n, Vl) and an implausible (\"fake\") cooccurrence (n, v2). To ensure a large differential between the two alternatives, we further restricted (n, Vl) to occur at least twice (in the test fold). We also chose v2 from the set of 50 most frequent verbs, resulting in much higher error rates for backoff. Results We now present evaluation results ordered by relative difficulty of the decision task. Figure 2 shows the performance of distributional clustering and nearest-neighbors averaging on the AP90fake data (in all plots, error bars represent one standard deviation). Recall that the task here was to distinguish between plausible and implausible cooccurrences, making it a somewhat easier problem than that posed in the AP89 and AP90unseen experiments. Both similarity-based methods improved on the baseline error (which, by construction of the test triples, was guaranteed to be high) by as much as 40%. Also, the curves have the shapes predicted in section 3.1. We next examine our AP89 experiment results, shown in Figure 3 . The similarity-based methods clearly outperform backoff, with the best error reductions occurring at small k for both types of models. Nearest-neighbors averaging appears to have the advantage over distributional clustering, and the nearest cluster method yields lower error rates than the averaged cluster method (the differences are statistically significant according to the paired t-test). We might hypothesize that nearest-neighbors averaging is better in situations of extreme sparsity of data. However, these results must be taken with some caution given their unrealistic type-based train-test split. A striking feature of Figure 3 is that all the curves have the same shape, which is not at all what we predicted in section 3. that the very most similar words are apparently not as informative as slightly more distant words is due to recall errors. Observe that if (n, vl) and (n, v2) are unseen in the training data, and if word n' has very small Jensen-Shannon divergence to n, then chances are that n ~ also does not occur with either Vl or v2, resulting in an estimate of zero probability for both test cooccurrences. Figure 4 proves that this is the case: if zero-ties are ignored, then the error rate curve for nearest-neighbors averaging has the expected shape. Of course, clustering is not prone to this problem because it automatically smoothes its probability estimates.  Finally, Figure 5 presents the results of our AP90unseen experiments. Again, the use of similarity information provides better-thanbaseline performance, but, due to the relative difficulty of the decision task in these experiments (indicated by the higher baseline error rate with respect to AP89), the maximum average improvements are in the 6-8% range. The error rate reductions posted by weightedaverage clustering, nearest-centroid clustering, and nearest-neighbors averaging are all well within the standard deviations of each other. Conclusion In our experiments, the performances of distributional clustering and nearest-neighbors averaging proved to be in general very similar: only in the unorthodox AP89 setting did nearestneighbors averaging clearly yield better error rates. Overall, both methods achieved peak performances at relatively small values of k, which is gratifying from a computational point of view. Some questions remain. We observe that distributional clustering seems to suffer higher variance. It is not clear whether this is due to poor estimates of the KL divergence to centroids, and thus cluster membership, for rare nouns, or to noise sensitivity in the search for cluster splits. Also, weighted-average clustering never seems to outperform the nearest-centroid method, suggesting that the advantages of probabilistic clustering over \"hard\" clustering may be computational rather than in modeling el-fectiveness (Boolean clustering is NP-complete (Brucker, 1978) ). Last but not least, we do not yet have a principled explanation for the similar performance of nearest-neighbors averaging and distributional clustering. Further experiments, especially in other tasks such as language modeling, might help tease apart the two methods or better understand the reasons for their similarity. Acknowledgements We thank the anonymous reviewers for their helpful comments and Steve Abney for help with extracting verb-object pairs with his parser CASS. References",
    "abstract": "Distributional similarity is a useful notion in estimating the probabilities of rare joint events. It has been employed both to cluster events according to their distributions, and to directly compute averages of estimates for distributional neighbors of a target event. Here, we examine the tradeoffs between model size and prediction accuracy for cluster-based and nearest neighbors distributional models of unseen events.",
    "countries": [
        "United States"
    ],
    "languages": [
        "English"
    ],
    "numcitedby": "39",
    "year": "1999",
    "month": "June",
    "title": "Distributional Similarity Models: Clustering vs. Nearest Neighbors"
}