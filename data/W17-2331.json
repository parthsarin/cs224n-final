{
    "article": "This paper evaluates the impact of various event extraction systems on automatic pathway curation using the popular mTOR pathway. We quantify the impact of training data sets as well as different machine learning classifiers and show that some improve the quality of automatically extracted pathways. Introduction Biological pathways encode sequences of biological reactions, such as phosphorylation, activation etc, involving various biological species, such as genes, proteins (Aldridge et al., 2006; Kitano, 2002) . Studying and analyzing pathways is crucial to understanding biological systems and for the development of effective disease treatments and drugs (Creixell et al., 2015; Khatri et al., 2012) . There have been numerous efforts to reconstruct detailed process-based and disease level pathway maps such as Parkinson disease map (Fujita et al., 2014) , Alzheimers disease Map (Mizuno et al., 2012) , mTOR pathway Map (Caron et al., 2010) , and the TLR pathway map (Oda and Kitano, 2006) . Traditionally, these maps are constructed and curated by expert pathway curators who manually read numerous biomedical documents, comprehend and assimilate the knowledge in them and construct the pathway. With increasing number of scientific publications manual pathway curation is becoming more and more impossible. Therefore, Automated Pathway Curation (APC) and semi-automated biological knowledge extraction has been an active research area (Ananiadou et al., 2010; Ohta et al., 2013; Szostak et al., 2015) trying to overcome the limitations of manual curation using various techniques from hand-crafted NLP systems (Allen et al., 2015) to machine learning techniques (Bj\u00f6rne et al., 2011) . Machine-learning NLP systems, in particular, show good performance in BioNLP tasks, but they are still performing less good in automated pathway curation, partly because there have been few attempts to measure the performance of NLP systems for APC directly. Recently, there has been some attempt at remedying the situation and new datasets and evaluation measures have been proposed. For instance, Spranger et al. (2016) use the popular human-generated mTOR pathway map (Caron et al., 2010; Efeyan and Sabatini, 2010; Katiyar et al., 2009) and quantify the performance of a particular APC system and its ability to recreate the complete pathway automatically. Results reported were mixed. One of the key components in such APC systems is identification of triggers, events and their relationships. These machine learning-based systems are essentially just supervised classification components. This paper explores whether we can improve results of automated pathway curation for mTOR pathway by using different training datasets and learning algorithms. We show that the choice of event extraction classifiers increases F-score by up to 20% compared to state-of-the-art system. Our results also show that within limits the choice of training data has significantly less impact on results than the choice of classifier. Our results also suggest that additional research is necessary to solve the problem of APC. Automatic Pathway Curation We constructed an automatic pathway curation system that take as input scientific articles in PDF format and transforms them into SBML encoded, annotated pathway maps. The pipeline has multi-ple steps. 1. PDFs are translated into pure text files using the cermine 1 tool. 2. Preprocessing provides tokenization, POS tagging, dependency and syntax parsing. 3. An event extraction system extracts the mentions of entities (genes, proteins etc), reactions (e.g. phosphorylation) and their arguments (theme, cause, product). 4. A converter constructs pathways from the information provided by the event extraction system. 5. An annotation system maps extracted entities and events to Entrez gene identifiers and SBO terms. The following sections detail steps 3 to 5. Event Extraction We used the TURKU Event Extraction System (TEES) for event extraction (Bj\u00f6rne et al., 2010) . This system is one of the most successful BioNLP systems. It has not only won 1st place in BioNLP competitions but was also the only one NLP system that participated in all BioNLP-ST 2013 tasks (Bj\u00f6rne et al., 2012) . The system combines various NLP techniques to extract information from text. TEES workflow consists of four steps: 1. Trigger Detection -detection of named entities and event triggers in a given sentence to construct nodes of the event graph. 2. Edge detection -construction of complex events linking few triggers to create event graph. Output produced during this step is often a directed, typed edge connecting two entity nodes. 3. Unmerging -event nodes from merged event graph are duplicated in order to separate arguments into valid combinations. This step is needed for evaluation of final results in BioNLP Shared Task standard. 4. Modifiers detection -final component that defines additional attributes for events such as speculation and negation modifiers. By default TEES trains a different instance of multiclass Support Vector Machines (SVM) for each step. Recent versions of TEES (Bj\u00f6rne and 1 http://cermine.ceon.pl/index.html Salakoski, 2015) allow to easily exchange the SVM classifiers with other supervised classification algorithms. For example, all scikit-learn multiclass, supervised learning algorithms that support sparse feature matrices can be applied (Pedregosa et al., 2011) . Thanks to this it is possible to test different algorithms for event extraction task and automatic pathway extraction. For this paper, we exchanges classifiers in all steps 1-4s as described in Section 3. The output of TEES is a standoff formatted representation of entities and events. Conversion Standoff to SBML pathways In principle events and entities extracted by TEES correspond to biological species and reactions. We translate the NLP representation into SBML -the standard, XML-based markup language for representing biological models (Hucka et al., 2003) . SBML essentially encodes models using biological players called sbml:species 2 . sbml:species can participate in interactions, called sbml:reaction. Species participate in interaction as sbml:reactant, sbml:product and sbml:modifier. The basic idea being that some quantity of reactant is consumed to produce a product. Reactions are influenced by modifiers. The mapping algorithm is adopted from and described in more detail in Spranger et al. (2015) . SBO/GO, Entrez Gene Annotations The SBML encoded, automatically extracted pathway is further annotated using Systems Biology Ontology (SBO) (Le Nov\u00e8re, 2006) and Gene Ontology (GO) terms. SBO also provides a class hierarchy for reaction types. For instance, the NLP system identify phosphorylation reactions, which are a subclass of conversion reactions. All reactions in the data are automatically annotated with SBO/GO term (coverage 100%) using an annotation scheme detailed in (Spranger et al., 2015) . Species (e.g. proteins, genes) were annotated using the gene/protein named entity recognition and normalization software GNAT (Hakenberg et al., 2011) -a publicly available gene/protein normalization tool. GNAT returns a set of Entrez Gene identifiers (Maglott et al., 2005) for each input string. Species were annotated using all returned Entrez Gene identifiers for a particular species (organism human). We call the set of Entrez Gene identifiers returned by GNAT for each species Entrez Gene signature. Classifiers for Event Extraction In this paper we evaluate classifiers for event extraction (Section 2.1) and their impact on the overall performance of the automatic pathway extraction system. We compare the following classifiers: \u2022 Support Vector Machines (SVM) is the default TEES classifier (Joachims, 1999) . It was optimized for linear classification and its performance scales linearly with the number of training examples. \u2022 Decision Tree (DT) creates a model that can predict the target value by learning simple decision rules inferred from the training data. Compared to the other techniques they are relatively fast, cost of using tree is logarithmic in the number of examples. We use Gini impurity criterion to evaluate quality of the split. \u2022 Random Forest (RF) classifiers fit a number of ensembled decision tree classifiers, each built from a bootstrap sample of a training set. The best split of node is chosen only from a random subset of the features, not all features. Final classifiers are combined by averaging their probabilistic prediction. Single tree have a higher bias but, due to averaging variance of the random forest as a whole decreases. \u2022 Multinomial Naive Bayes (MNNB) This is an implementation of the naive Bayes algorithm for multinomial data which is one of the classic variants used in classification of discrete features (e.g. text classification). Additive smoothing parameter was set to 1. \u2022 Multi-layer Perceptron (MLP) MLP is a feedforward neural network model. We use hidden layer with 100 neurons and rectified linear unit activation function. We optimize for logarithmic loss using stochastic gradient descent. Learning rate is constant and equal to 0.001. For DT, RF, MNNB and MLP we use implementations from scikit-learn Python library (Pedregosa et al., 2011 Datasets Training Datasets In order to quantify the impact of training data, we test the following three training sets. \u2022 ANN -consists of 60 abstracts of scientific papers from Pubmed database related to the mTORpathway map. This dataset was human-annotated for NLP system training (Ohta et al., 2011 , Corpus annotations (c) GENIA Project) . \u2022 GE11 consists of 908 abstracts and full texts of scientific papers used in BioNLP ST 2011 GENIA Event Extraction task as training data (Kim et al., 2012) . \u2022 PC13 consists of 260 abstracts of scientific papers used in BioNLP ST 2013 Pathway Curation task as training data (Ohta et al., 2013) . The task goal was to evaluate the applicability of event extraction systems to support the automatic curation and evaluation of biomolecular pathway models. The overall corpora statistics are summarized in Table 1 . GE11 and PC13 have the largest number of annotated events. ANN is much smaller in comparison. Also, the distribution of event types differs between data sets (Table 2 ). GE11 uses more general terms (Binding, Regulation) compared to PC13 where some specific events appear only a few times (Deacetylation, Hydroxylation, Methylation). We train classifiers on four combinations of the three training datasets: 1) standalone GE11; 2) GE11+ANN -combined GE11 and ANN; 3) combined GE11+PC13+ANN -GE11, PC13 and ANN; 4) PC13+ANN -combined PC13 and ANN. For instance, DT+GE11 refers to a decision tree classifier trained on GE11. We use GE11-Devel BioNLP ST2011 dataset for hyperparameter optimization of all classifiers. Test Data Performance of classifiers is tested on the mTOR pathway map (Caron et al., 2010) . The map was constructed by expert human curators using 522 full text papers from the PubMed database. The experts curated a single large map using CellDesigner (Funahashi et al., 2008 ) -a software for modeling and executing mechanistic models of pathways. CellDesigner represents information using a heavily customized XML-based SBML format (Hucka et al., 2003) . Target Human expert data We translate the curator map into standard SBML and further enrich the information using SBO/GO and Entrez Gene annotations. For SBO/GO, we use existing annotations provided by curators and extend them by automatic annotations deduced from reactants and products of reactions. For example, if a phosphoryl group is added in a reaction, it is annotated using the SBO term for phosphorylation. Each reaction may be annotated with multiple SBO/GO terms. Also we annotate the curated map with Entrez gene identifiers (similar to the automatic extraction data). We call this pathway TARGET. Testing classifiers The 522 full text papersused by human curators for the construction of the mTOR pathway -are used for evaluating the different text mining classifiers. For this, we plug in (trained) classifiers into the automatic pathway extraction pipeline which performs preprocessing, event extraction, conversion to SBML and annotation (see also Section 2). The output of this is an annotated SBML file that is subsequently compared to human-curated SBML-encoded pathway data. Evaluation Evaluation of the classifiers (and the system as a whole) is performed by comparing the automatically extracted pathway with the hand-curated pathway. Spranger et al. (2016) propose a number of graph overlap algorithms for quantifying the difference and similarity of two pathways. Here we employ the same measures. The following summarizes the strategies. Species In order to decide whether species in two pathways are the same, we use the name of the identifiers and their Entrez gene signatures. nmeq: Two species are equal if their names are exactly equal. We remove certain prefixes from the names (e.g. phosphorylated). appeq: Two species are equal if their names are approximately equal. Two names are approximately equal iff their Levenshteinbased string distance is above 90 (Levenshtein, 1966) enteq: Two species are equal if their entrez gene identifiers are exactly equal. This basically translates to the two species bqbiol:is identifier sets being exactly the same (order does not matter). entov: Two species are equal if their entrez gene identifiers sets overlap. This basically translates to the two species bqbiol:is identifier sets overlapping. wc: Human curated data contains complex species that contain other species as constituents (species that consist of various proteins etc). wc allows species to match with constituents of complexes. Reaction match based on their SBO/GO annotations sboeq: Two reactions are equal iff their signatures are exactly the same. That is, the whole set of SBO/GO terms of one reaction is the same as of the other reaction. sboov: Two reactions are equal, iff their signatures overlap. That is, the intersection of the set of SBO/GO terms of one reaction is with the set of SBO/GO terms of the other reaction is not empty. sobisa: Two reactions are equal, iff there is at least one SBO/GO term in each signature that relate in a is a relationship in the SBO reaction type hierarchy. For instance, if there is a phosphorylation reaction and a conversion reaction, then sboisa will match because phosphorylation is a subclass of conversion according to the SBO type hierarchy. Edges only match if their labels are strictly equal. So if an edge is a reactant, then it has to be a reactant in the other pathway. Same holds for products and modifiers. Subgraph matching strategies are combinations of matching strategies for species, reactions (and for edges which is always the same). For instance, the matching strategy nmeq, sboeq is the most strict and requires that species names are exactly equal and that SBO/GO signatures of reactions are exactly equal. The matching strategy appeq/enteq/wc, sboisa is the most loose strategy. In this strategy, two species match if their names are approximately equal or if their Entrez gene identifiers overlap or if any of this applies to one of the constituents of the two species. Two reactions match if any of their SBO/GO terms are in a is a relationship. We compare a total of 24 matching strategies. Subgraph overlap is computed as follows. For each subgraph in the extracted pathway we search for subgraphs in the human curated data that match according to some subgraph matching strategy. We use micro-averaged F-score, precision and recall (Sokolova and Lapalme, 2009) for quantifying the retrieval results. F-score is used to quantify the overlap of species, reactions and edges. We then macro-average these results to get a total F-score quantifying performance of the extraction system as a whole. Results Some classifiers take long to train, so we only have partial results for MLP. However, all other classi-fiers (DT, MNNB, RF, SVM) finished training on all selected combinations of training data sets. Since we tested 24 subgraph overlap measures with 18 classifiers, we receive a lot of data that cannot be discussed in detail in this paper. Here, we concentrate on general trends in the data. Code and datasets are published as appropriate 3 . Extraction Results: Species, Reactions, Subgraphs Generally speaking the extracted pathways contain two order of magnitudes more species reactions, and edges than the TARGET pathway (see Table 3 for all results). This is normal since the extracted pathways consist of all combinations of entity and event mentions in text. The same entities may occur more often in the text then they are referenced in the actual pathway. Our results show that extraction classifiers perform inconsistent with respect to the identification of compartments. While some classifiers retrieve a lot of compartment information (via localization events), others (especially MNNB trained on ANN and PC13 datasets) do not extract any compartments. MNNB with our parameter choice might not be able to learn many different event types so it skips least frequent reaction types (one of which is localization event). Measuring how many subgraphs there are per pathway, we can see that more than half of all species extracted by classifiers are isolated and not connected to any reactions. Similarly we see many (small) subgraphs being extracted by the classifiers, whereas TARGET consists of essentially one large connected graph (with a few modeling mistakes). General Trends Subgraphs overlap Let us first concentrate on overall performance especially with respect to previous results. For this we compute the best classifiers and their score for different matching strategies. For each matching strategy, we evaluate all classifiers and then choose the best performing one and compare it with the results reported in Spranger et al. (2016) /Spr16. Table 4 shows that the best classifiers outperform Spr16 in all cases and for some subgraph overlap measures by 10 points. If we analyze the classifiers from this paper in more detail, results (Figure 1 (with 14 precision, 13 recall scores). For the loosest strategy (appeq/entov/wc, sboisa) this goes up to F-score 52 (47 precision, 66 recall). These results show that when it comes to exact extraction the classifiers fail badly, whereas with more looser overlap strategies, performance becomes reasonable and there is some overlap between the ex-tracted and the human-curated data. Of course, this also entails that the automatically extracted pathway does not completely capture what humans are constructing from the text. Generally speaking overlap strategies that are loose with respect to constituents of complex species (wc) outperform their non wc counterparts. For instance, nmeq/wc, sboeq performs much better than nmeq, sboeq. This shows that complex species are important for the mTOR pathway but their extraction is not very detailed -which is why the overlap matching strategy has to be lenient with respect to complex species constituents. The increase in F-score for wc matching strategies is primarily driven by an increase in recall score. For instance, the difference between nmeq, sboeq and nmeq/wc, sboeq is more than 20 points, whereas precision does not improve that much. The reasons for that is that the same subgraphs in the extracted pathway overlap with more subgraphs in TARGET. So it is not the case that other subgraphs in the extracted pathway overlap with TARGET. Results also show that recall is in general much higher than precision for looser strategies. For instance, wc strategies (right hand side of Figure 1 ) double the recall score w.r.t to their precision scores. This also shows that in principle loosening matching strategies impacts mostly recall as the same subgraphs in the extracted data overlap with the human curated data. Classifier Performance in Detail The bottom figure in Figure 2 shows the best classifiers in terms of precision, recall and F-score. We measured how often a classifier is the best classifier (for each of the 24 subgraph overlap strategies). It is clear that overall Random Forest classifier (RF) performance is the best. For all 24 matching strategies it is a Random Forest classifier that is better than any other competitor with RF trained on PC13 and ANN being the most frequent best classifier overall. Second place is Random Forest trained simply on GE11 (the largest dataset in terms of entities and events). No other classifiers (SVM, MLP, MNNB, DT) outperform RF. Training on all datasets (RF+GE11+PC13+ANN) does not seem to increase success significantly. Performance across different RF classifiers is on par and good (see Table 5 ) Results in the top figure of Figure 2 show that RF has the best precision performance. RF+GE11 and RF+GE11+PC13+ANN also performing comparably. Compared to recall this means that RF wins F-score because they are best in precision. No RF classifier performs best in recall. Results show that MLP, DT and SVM all perform well for certain subgraph overlap strategies with SVM be- ing most often the best classifier, followed by various DT-based classifiers and MLP. Figure 3 gives results for all classifiers across all matching strategies. Looser strategies give the max and strict matching strategies the min data points. We can see that performance is primarily driven by the choice of classifier as the F-score mostly varies with the type of classifier used (even though there are a few outliers). Situation is a bit more varied for precision and recall. Interestingly choice of dataset seems to have less impact. Generally speaking MNNB are the least successful. RF clearly dominate precision on average but are close enough to DT and SVM on recall. Conclusion This paper continues the current trend of extending NLP systems for APC and building more complete systems that allow evaluation with respect to some external standard -here the hand curated mTOR pathway. We measured the impact of different classifiers on retrieval performance and showed that certain classifiers have the potential to increase retrieval performance. Especially Random Forest classifiers perform much better on mTOR than previously tried Support Vector Machines. On the other hand, the training data choice seems to have little impact (at least for the tested ANN, GE11 and PC13 training datasets). Spranger et al. (2016) argue that not all of the problems of APC can be overcome by using more training data on event extraction systems. They argue that additions such as complex species recognition, co-reference resolution and pathway construction are needed to ultimately solve the problem posed by APC. This certainly remains true and is not directly questioned by results in this paper. The system described here does not automatically compose single pathway maps from the extracted data. Nevertheless, our results suggest that a lot of progress can be made by improving on the event extraction part of the pipeline. This paper focuses on evaluating current machine learning techniques for event extraction. We are currently in the process of evaluating other systems including rule-based ones. appeq, sboisa 12.8 12.2 12.5 12.6 12.5 14.9 13.1 13.0 10.7 19.4 17.1 18.9 19.1 14.4 14.4 14.1 13.1 appeq/enteq, sboeq 10.2 9.9 10.2 10.4 10.5 10.6 6.0 6.0 8.3 16.8 14.1 16.9 16.7 11.7 11.5 11.7 11.8 appeq/enteq, sboov 15.2 14.7 15.0 14.9 15.0 17.2 14.1 14.9 13.6 21.6 20.0 21.7 21.2 17.0 16.9 16.6 15.7 appeq/enteq, sboisa 18.1 17.6 18.0 18.0 17.9 20.6 17.4 17.1 14.7 25.9 23.5 25.4 26.0 20.2 20.1 19.8 18.9 appeq/entov, sboeq 23.6 23.0 22.9 23.3 24.2 24.1 17.2 16.3 17.2 33.8 31.6 35.2 36.2 26.4 26.2 25.7 25.3 appeq/entov, sboov 31.0 30.1 30.2 30.2 31.0 34.2 29.6 29.2 25.9 39.9 40.6 41.6 41.9 34.1 34.2 33.2 31.3 appeq/entov, sboisa 35.5 34.6 34.9 35.0 35.6 39.0 33.9 32.3 27.4 46.4 45.9 47.2 48.6 38.9 39.2 38.2 36.4 nmeq/wc, sboeq 13.4 12.4 12.2 12.5 12.9 13.6 6.9 6.4 8.4 22.0 17.9 22.3 23.3 14.9 14.4 13.9 14.0 nmeq/wc, sboov 17.9 16.9 16.6 16.5 16.9 20.1 16.8 16.4 14.1 25.4 23.5 25.8 26.0 19.5 19.3 18.3 17.2 nmeq/wc, sboisa 20.1 19.1 18.8 19.0 19.1 22.5 18.5 17.6 14.7 28.5 26.2 28.5 29.1 22.0 21.8 20.8 19.7 appeq/wc, sboeq 14.1 13.1 12.9 13.2 13.7 14.2 7.1 6.6 8.8 23.2 18.9 23.4 24.6 15.6 15.0 14.7 14.8 appeq/wc, sboov 18.7 17.6 17.3 17.3 17.7 20.8 17.3 16.9 14.6 26.7 24.5 27.0 27.4 20.3 20.0 19.2 18.1 appeq/wc, sboisa 21.1 20.1 19.8 20.1 20.2 23.5 19.3 18.3 15.2 30.3 27.5 30.1 30.9 23.1 22.8 22.0 20.8 appeq/enteq/wc, sboeq 25.7 25.1 24.8 25.3 26.3 26.4 18.3 16.9 18.0 36.7 34.1 38.3 39.7 28.7 28.6 28.0 27.5 appeq/enteq/wc, sboov 33.5 32.7 32.5 32.4 33.5 Acknowledgments We would like to thank the authors of the Turku Event Extraction System for providing such an excellent system to the community. We also thank SBI for making the mTOR dataset available and their collaboration on evaluation and measurements.",
    "abstract": "This paper evaluates the impact of various event extraction systems on automatic pathway curation using the popular mTOR pathway. We quantify the impact of training data sets as well as different machine learning classifiers and show that some improve the quality of automatically extracted pathways.",
    "countries": [
        "Poland",
        "Japan"
    ],
    "languages": [
        ""
    ],
    "numcitedby": "2",
    "year": "2017",
    "month": "August",
    "title": "External Evaluation of Event Extraction Classifiers for Automatic Pathway Curation: An extended study of the m{TOR} pathway"
}