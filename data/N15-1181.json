{
    "article": "Categories such as ANIMAL or FURNITURE are acquired at an early age and play an important role in processing, organizing, and conveying world knowledge. Theories of categorization largely agree that categories are characterized by features such as function or appearance and that feature and category acquisition go hand-in-hand, however previous work has considered these problems in isolation. We present the first model that jointly learns categories and their features. The set of features is shared across categories, and strength of association is inferred in a Bayesian framework. We approximate the learning environment with natural language text which allows us to evaluate performance on a large scale. Compared to highly engineered pattern-based approaches, our model is cognitively motivated, knowledge-lean, and learns categories and features which are perceived by humans as more meaningful. Introduction Categorization is one of the most basic cognitive functions. It allows individuals to organize their subjective experience of their environment by structuring its contents. This ability to group different objects into the same category based on their common characteristics underlies major cognitive activities such as perception, learning, and the use of language. Global categories (such as FURNITURE or ANIMAL) are shared among members of societies, and influence how we perceive, interact with, and argue about the world. Given its fundamental importance, categorization is one of the most studied problems in cog-nitive science. The literature is rife with theoretical and experimental accounts, as well as modeling simulations focusing on the emergence, representation, and learning of categories. Most theories assume that basic level concepts such as dog or chair are characterized by features such as barks or used-for-sitting, and are grouped into categories based on those features. Although the precise grouping mechanism has been subject to considerable debate (including arguments in favor of exemplars (Nosofsky, 1988) , prototypes (Reed, 1972) , and category utility (Corter and Gluck, 1992 )), it is fairly uncontroversial that categories are associated with featural representations. Experimental studies show that the development of categories and feature learning mutually influence each other (Goldstone et al., 2001; Schyns and Rodet, 1997) : concepts are categorized based on their features, but the perception of features is influenced by already established categories, and, like categories, features evolve over time. There is also evidence that features such as barks or runs are grouped into types like behavior (Ahn, 1998; McRae et al., 2005; Spalding and Ross, 2000) , and the distribution of feature types varies across categories. For instance, living-things such as ANI-MALS have characteristic behavior, whereas artifacts such as TOOLS have characteristic functions, and both categories have characteristic appearance. In this paper, we investigate the problem of jointly learning categories and their feature types. Previous modeling work has largely considered these problems in isolation, focusing either on category learning with a fixed set of simplistic features (Anderson, 1991; Sanborn et al., 2006) or feature learning (Austerweil and Griffiths, 2013; Baroni et al., 2010; Kelly et al., 2014) , but not both. We present a Bayesian model which induces (semantic) categories and feature types from natural language text. Although language is one of many factors influencing category formation (others include the physical world, how we perceive it, and interact with it), large text corpora encode a surprising amount of extralinguistic information (Riordan and Jones, 2011) , and can thus be viewed as an approximation of the learning environment. Moreover, focusing on textual data, allows us to build categorization models with theoretically unlimited scope, and evaluate categories and their features on a much larger scale than previous work in the cognitive science literature. Our model induces categories (e.g., ANIMALS) and their feature types (e.g., behavior) from observations of target concepts (e.g., lion, cow) and their co-occurring contexts (e.g., eats, sleeps, large). While we can directly evaluate learnt categories through comparison against behavioral data, evaluating feature types is less straightforward. Previous work has shown that the kinds of features learnable from text are qualitatively different from those produced by humans, which makes direct comparison difficult (Baroni et al., 2010; Kelly et al., 2014) . We circumvent this problem by assessing in a crowd-sourcing experiment whether the induced feature types are relevant for a given category and whether they form a coherent class. Evaluation results show that our joint model learns accurate categories and feature types achieving results competitive with highly engineered approaches focusing exclusively on feature learning. Related Work The problems of category formation and feature learning have been considered largely independently in the literature. Bayesian categorization models were pioneered by Anderson (1991) and recently reformalized by Sanborn et al. (2006) . These models are aimed at replicating human behavior in small scale category acquisition studies, where a fixed set of simple (e.g., binary) features is assumed. Frermann and Lapata (2014) propose a model similar in spirit, which they apply to large scale corpora, while investigating incremental learning in the con-text of child category acquisition (see also Fountain and Lapata (2011) for a non-Bayesian approach). Their model associates sets of features with categories as a by-product of the learning process, however these feature sets are independent across categories and are not optimized during learning. Previous approaches on feature learning have primarily focused on emulating or complementing norming studies by automatically extracting normlike properties from textual corpora (e.g., elephant has-trunk, scissors used-for-cutting). A common theme in this line of research is the use of pre-defined syntactic patterns (Baroni et al., 2010) , or manually created rules specifying possible connection paths of concepts to features in dependency trees (Devereux et al., 2009; Kelly et al., 2014) . Once extracted, the features are typically weighted in order to filter out noisy instances. Features are learnt for individual concepts rather than categories. Austerweil and Griffiths (2013) also focus exclusively on feature learning, however from sensory data. They develop a nonparametric Bayesian model which is able to infer unlimited features, based on distributional patterns as well as category information. To our knowledge, we propose the first Bayesian model that jointly learns categories and their features, arguing that the two tasks are mutually dependent. Our model is knowledge-lean, it learns from raw text in a single process, without relying on parsing resources, manually crafted rule patterns, or post-processing steps. Our work also differs from approaches which combine topic models with human-produced feature norms (Steyvers, 2010) . Our aim is not to boost the generalization performance of a topic model, rather we investigate how both categories and features can be jointly learnt from data. The BCF Model In this section we present our Bayesian model of category and feature induction (henceforth, BCF). BCF jointly learns categories, feature types, and their associations. Specifically, it infers one global set of feature types which is shared across categories (e.g., ANIMALS and VEHICLES can be described in terms of colors). However, categories differ in their strength of association with feature types (e.g., the feature type function will be highly associated with TOOLS but less so with ANIMALS). BCF jointly optimizes categories and their featural representation: the learning objective is to obtain a set of meaningful categories, each characterized by relevant and coherent feature types. The generative story and plate diagram for the BCF model are shown in Figures 1 and 2 , respectively. The input to the model is a collection of stimuli d \u2208 {1..D} extracted from a large text corpus. Each stimulus consists of a target concept c \u2208 {1..L} and its context f \u2208 {1..F}. We adopt a simple representation of context as the set of words making up the sentence c occurs in (except c). The model assigns concepts to categories k \u2208 {1..K} and features to feature types g \u2208 {1..G}. It learns a set of concept clusters (i.e., categories), as well as a clustering over features (i.e., feature types), and a distribution over those feature clusters for each category (i.e., category-feature type associations). Specifically, the occurrences of a concept will be assigned a category, based on how similar the concept's feature types are compared to the feature types of all other potential categories. Simultaneously, upon observing a stimulus (i.e., a concept in context), the model assigns the context to a particular feature type based on its probability under all po- tential feature types, and the prior probability of observing that feature type with the concept's assigned category. More formally, we can describe the model through the generative story given in Figure 1 . We assume a global multinomial distribution over categories Mult(\u03b8), drawn from a symmetric Dirichlet distribution with hyperparameter \u03b1. For each category k, we assume an independent set of multinomial parameters over feature types \u00b5 k , drawn from a symmetric Dirichlet distribution with hyperparameter \u03b2. For each concept type , we draw a category k from Mult(\u03b8). Finally, for each feature type g, we draw a multinomial distribution over features Mult(\u03c6 g ) from a symmetric Dirichlet distribution with hyperparameter \u03b3. With these global assignments in place, we can generate stimuli d as follows: we first retrieve the category k c d of the observed concept c d ; we then generate a feature type g d from the category's feature type distribution Mult(\u00b5 k c d ); and finally, for each feature position i we generate feature f d,i from the feature type's distribution Mult(\u03c6 g d ). The joint probability of the model over latent categories, latent feature types, model parameters, and data can be factorized as: P(g, f , \u00b5, \u03c6, \u03b8, k|c, \u03b1, \u03b2, \u03b3) = (1) P(\u03b8|\u03b1) \u220f P(k |\u03b8) \u220f k P(\u00b5 k |\u03b2) \u220f g P(\u03c6 g |\u03b3) \u220f d P(g d |\u00b5 k c d ) \u220f i P( f d,i |\u03c6 g d ). Since we use conjugate priors throughout, we can integrate out the model parameters analytically, and perform inference only over the latent variables, namely the category and feature type labels associ-  ated with the stimuli. Exact inference in the BCF model is intractable, so we turn to approximate posterior inference to discover the assignments of latent variables that best explain our data. We construct a Gibbs sampler (Geman and Geman, 1984) which iteratively re-assigns single variables based on the current assignments of all other variables. One Gibbs iteration for our model consists of one sweep through the input stimuli, resampling feature type assignments from: P(g d k c d = i|g \u2212d k c d , f \u2212 , k c d , \u03b2, \u03b3) (2) \u221d P(g d k c d = i|g \u2212d k c d , k c d , \u03b2) \u00d7 P( f d |f \u2212 , g d k c d = i, \u03b3), followed by one sweep through the concept types, resampling category assignments from: P(k = j|g k , k \u2212 , \u03b1, \u03b2) (3) \u221d P(k = j|k \u2212 , \u03b1) \u00d7 P(g k |g \u2212 k , k = j, \u03b2), where g d k c d denotes the feature type assignment to stimulus d given the category k c d of d's observed target concept c d . k refers to the category assignment of concept type , g k refers to the feature type associations of category k , and f d refers to the observed features in stimulus d. The superscript \u2212 indicates the absence of the variable assignment(s) which are currently resampled from the current representation of the model state. Figure 3 illustrates example output produced by our model, in terms of learnt categories, learnt feature types and their associations. Connecting lines indicate category-feature type associations. Feature types are shared across categories, e.g., categories CLOTHING (k1), BIRDS (k2), and FOOD (k3) are all associated with feature type color (g2). Experimental Design In this section we outline our experimental set-up for assessing the performance of the BCF model described above. We present our data set, briefly introduce the models used for comparison with our approach, and explain how system output was evaluated. We then report results on a series of experiments which evaluate the quality of the categories and feature types learnt by BCF. Data Our experiments used basic-level target concepts (e.g., cat or chair) from two norming studies (McRae et al., 2005; Vinson and Vigliocco, 2008) . In these studies, humans were presented with concepts and asked for each concept to produce a set of characteristic features. In a subsequent study (Fountain and Lapata, 2010), the concepts were classified into 41 categories (with possible multi-category membership), 34 of which we use as a goldstandard in our categorization experiments (comprising 492 concepts in total). We excluded very general categories such as THING or STRUCTURE, based on the intuition that it is difficult to identify characteristic features for them. As a heuristic concepts were excluded if they were close to the root of WordNet (e.g., with depth 2 or 4). To obtain the input stimuli for the BCF model, we used a subset of the Wackypedia corpus (Baroni et al., 2009) , an automatically extracted and POS tagged dump of the English Wikipedia. For each target concept, we identified one corresponding article in Wackypedia. Next, we extracted a set of stimuli which consists of (a) every sentence from the concept's corresponding article, and (b) any sentence in a different article which mentions the concept. This resulted in a data set of 63,076 stimuli which we split into 60% training, 20% development and 20% test. We removed stopwords as well as words with a part of speech other than noun, verb, and adjective. Furthermore, we discarded words with an age of acquisition above 10 years (Kuperman et al., 2012) to restrict the vocabulary to frequent and generally familiar words. Models and Parameters We compared the performance of BCF against BayesCat, a Bayesian model of category acquisition (Frermann and Lapata, 2014) and Strudel, a pattern-based model which extracts concept features from text (Baroni et al., 2010) . BayesCat induces categories, which are represented through a distribution over target concepts, and a distribution over features (i.e., individual context words). In contrast to BCF, it does not learn types of features. In addition, while BCF induces a hard assignment of concepts to categories, BayesCat learns soft distributions over target concepts for each category. Soft assignments can be converted into hard assignments by assigning each concept to its most probable category. We ran BayesCat on the same input stimuli as BCF, with the following parameters: the number of categories was set to K = 40, and the hyperparameters to \u03b1 = 0.7, \u03b2 = 0.1, \u03b3 = 0.1. For the BCF model, we used the same number of categories, namely K = 40. The number of feature types was set to G = 75, and the hyperparameters to \u03b1 = 0.5, \u03b2 = 0.5, and \u03b3 = 0.1. Parameters were tuned on the development set. For both models, we report results averaged over 10 Gibbs runs, each time we ran the sampler for 1,000 iterations. We used annealing during learning which proved effective for avoiding local optima. Strudel automatically extracts features for concepts from text collections following a pattern-based approach. It takes as input a set of target concepts and a set of patterns, and extracts a list of features for each concept, where each concept-feature pair is weighted with a log-likelihood ratio expressing the pair's strength of association. Baroni et al. (2010) show that the learnt representations can be used as a basis for various tasks such as typicality rating, categorization, or clustering of features into types. In our experiments we obtained Strudel representations from the same Wackypedia corpus used for extracting the input stimuli for BCF (and BayesCat). Note that Strudel, unlike the two Bayesian models, is not a cognitively motivated acquisition model, but an optimized system developed with the aim of obtaining the best possible features from data. Experiment 1: Evaluation of Categories In our first experiment we evaluate the quality of the categories induced by the three models presented above. The models produce hard categorizations, however, the cognitive gold standard we use for evaluation (Fountain and Lapata, 2010) represents soft categories. We obtained a hard categorization by assigning members of multiple categories to their most typical category (typicality scores are provided with the data). 1 Method BCF and BayesCat learn a set of categories which we can directly compare to the gold standard. For Strudel, we produce a categorization as follows: we represent each concept as a vector over features (obtained from Wackypedia), where each component corresponds to the concept-feature log-likelihood ratios provided by Strudel; following Baroni et al. (2010) , we then cluster the vectors using K-means and the Cluto toolkit. 2 As for the other models, we set the number of categories to K = 40. Metrics To assess the quality of the clusters produced by the models, we measure purity (pur; the extent to which each learnt cluster corresponds to a single gold class) as well as its inverse, collocation (col; the extent to which all items of a particular gold class are represented in a single learnt cluster). Both measures are based on set-overlap, and we also report their harmonic mean ( f 1; Lang and Lapata 2011). In addition, we report the V-measure (v1; Rosenberg and Hirschberg 2007) and its factors measuring the homogeneity of clusters (hom) and their completeness (com). The two factors intuitively correspond to purity and collocation, but are based on information-theoretic measures. Results Experiment 2: Evaluation of Features We next investigate the quality of the features our model learns. We do this by letting the model predict the right concept solely from a set of features. If the model has acquired informative features, they will be predictive of the unknown concept. Specifically, the model is presented with a set of previously unseen test stimuli with the target concept removed. For each stimulus, the model ranks all possible target concepts based on the features f (i.e., context words). Method In our experiments we compared the ranking performance of BCF, BayesCat, and Strudel. For the Bayesian models, we directly exploit the learnt distributions. For BCF, we compute the score of a target concept c given a set of features as: Score(c|f) = \u2211 g P(g|c)P(f|g). ( 4 ) pr@1 pr@10 pr@20 avg Similarly, for BayesCat we compute the score of a concept c given a set of features as follows: BCF Score(c|f) = \u2211 k P(c|k)P(f|k). ( 5 ) For Strudel, we rank concepts according to the cumulative log-likelihood ratio-based association score over all observed features for a particular concept c: Score(c|f) = \u2211 f \u2208f association(c, f ). ( 6 ) Metrics Since we can directly compare model predictions against the actual target concept of the stimulus, we report precision at rank 1, 10, and 20. We also report the average rank assigned to the correct concept. All results are based on a random test set of 2,000 previously unseen stimuli. To control for the possibility that the models are learning a strong (yet trivial) correlation between target concepts and identical words occurring as features, we also report results on a modification of our test set where we remove any mention of the target concept from the context, if present (the \u2212tgt condition). Results Our results on the concept prediction task are shown in  perform comparably given that they learn from exactly the same data and exploit local co-occurrence relations in similar ways. BayesCat produces better average rank scores than BCF, while achieving lower precision scores. This can be explained by the fact that BCF assigns low ranks to correct concepts more reliably than BayesCat. Figure 4 shows the relative cumulative frequencies of the ranks assigned by the three models. We display the top ranks 1 through 20 (out of 492). As can be seen, BCF performs slightly better than BayesCat. Pairwise differences between the systems are all statistically significant (p 0.01); using a one-way ANOVA with post-hoc Tukey HSD test). Note that performance decreases for the Bayesian models in the \u2212tgt condition, i.e., when occurrences of the target concept are removed from the context. Strudel is less affected by this given its pattern-based learning mechanism which is not prone to associating target word types with themselves. However, repetitions are a natural phenomenon from a cognitive standpoint and it seems reasonable to consider multiple occurrences of a concept as a canonical feature of the learning environment. Overall, the precision scores may seem low. However, the models rank a set of 492 target concepts; a random baseline would achieve a pr@1 of only 0.002%. In addition, the target concepts we are considering are by design highly confusable: they were selected so that they form categories and are thus bound to share some features which makes the prediction task harder. Example output for all three models is shown in Table 3 . The models take context features \"journey move hundred mile strong\" and \"avoid cut quick claw tip\" as input and are expected to predict salmon and finger, respectively. Unlike Strudel, BCF and BayesCat rank salmon almost correctly and the other high ranked concepts are reasonable in the given context as well. For the second example, only Strudel predicts the correct concept correctly, but again the top-ranked concepts of the other two models are reasonable in the given context. Experiment 3: Evaluation of Feature Types In this suite of experiments we evaluate two aspects of the feature types induced by our model: (1) Are they relevant to their associated category? and (2) Do they form a coherent class? Our evaluation followed the intrusion paradigm originally introduced to assess the output of topic models (Chang et al., 2009) . We performed two intrusion studies using Amazon's Mechanical Turk crowd-sourcing platform. In the feature intrusion study, participants were shown examples of categories and their feature types both of which were represented as word clusters (see Figure 6 top). They were asked to detect the feature type which did not belong to the category. If a model creates relevant feature types, we would expect participants to be able to identify the intruder relatively easily. We also conducted a word intrusion Method We compared the feature types learnt by BCF and Strudel. We omitted BayesCat from this evaluation as it does not naturally produce feature types, rather it associates unstructured lists of features with categories. As mentioned earlier, Strudel does not induce feature types either, however, it associates concepts with features which can be postprocessed to obtain feature types as follows. Given a category induced by Strudel (as explained in Experiment 1), we collected the features associated with at least half of the concepts in the category with a log likelihood score no less than 19.51. 3 We then clustered these features with K-means (using the Cluto toolkit) into K = 5 feature types. For BCF, for each category k, we select the five 3 Following Baroni et al. (2010) , this number corresponds to a probability of co-occurrence below 0.00001, assuming independence. feature types g with highest association P(g|k), together with one intruder feature type g which is highly associated with some other category k but not with k. For Strudel we took the five feature types elicited through the procedure described above, and one random feature type from the global set of feature types. Each feature type was represented by a cluster of five words. With respect to the word intrusion task, participants were only shown feature types (i.e., word clusters) irrespectively of the associated category. BCF feature types g were represented as the set of the five words w with highest probability P( f |g). In addition, we added one intruder word which had low probability under g but high probability under some other feature type. For Strudel, we represented feature types as a random subset of five words, and added an additional intruder word from the global set of features. For the feature type intrusion task, We evaluated a total of 40 categories for each model. Each participant assessed 10 categories per session (5 per model). Categories and feature types were presented in random order. For the word intrusion task, we evaluated a total of 66 feature types for each model. Participants saw 11 feature types per session, in randomized order. In both cases, we collected 10 responses per item. Metrics We evaluated feature type relevance and coherence by measuring precision (the proportion of intruders identified correctly). We also use the Kappa coefficient to measure inter-subject agreement (Fleiss, 1981) on our two tasks. As can be seen, Strudel obtains a large number of action-related features (e.g., replace, change, steal ). BCF creates more varied feature types. For example, the second cluster refers to external properties (e.g., color), and the last cluster contains CLOTHING materials. Results Our results are presented in Concerning the word intrusion task, we observe that participants are able to detect the intruder more accurately when presented with BCF feature types as compared to Strudel feature types (differences between Strudel and BCF are statistically significant at p 0.05, again using a t-test). The results suggest that the feature types learnt by BCF are more coherent, and indeed express meaningful properties shared by concepts belonging to the same category. While being relevant to the category, Strudel's feature types do not seem to exhibit internal coherence to a similar extent. The mutual dependence of category formation and feature learning allows BCF to learn feature types which are both relevant and individually interpretable. Discussion In this paper we presented a cognitively motivated Bayesian model which jointly learns categories and their features, arguing that the two tasks are codependent. Our model learns from raw text with-out relying on elaborate post-processing and highprecision patterns. Evaluation of the inferred categories and their features shows that BCF performs competitively compared to a system specifically engineered to extract high quality features, despite the more complex learning objective, and the knowledge-lean approach. We approximate the cognitive learning environment with large text corpora. However, we do not claim to learn features qualitatively similar to features produced in human elicitation studies. Instead, we show, through a crowdsourcing-based human evaluation, that the learnt features are meaningful in that they are relevant to their associated category and form a coherent class. An interesting direction for future work would be to learn feature types from multiple modalities (not only text) and to investigate how different information sources (e.g., visual or pragmatic input) influence feature learning. The BCF model learns descriptive feature types represented as a collection of feature values. In addition to such descriptive features (e.g., behavior) categories also possess defining features (e.g., animate) which are bound to one particular value. Extending the model in a way that allows to learn qualitatively different types of features is desirable from a cognitive perspective. We will also develop an incremental learning algorithm for joint category and feature learning (e.g., using sequential Monte Carlo methods such as Particle Filtering). In addition, it would be interesting to investigate the emergence of feature types with nonparametric Bayesian methods. Finally, the BCF model can be applied to tasks beyond those discussed here. For example, one could learn definitions (aka features) of terms (aka concepts) in specialist fields (e.g., finance, law, medicine) or monitor how the meaning of words or concepts as represented by their features changes over time. Acknowledgments We thank Micha Elsner and Charles Sutton for helpful discussions, William Schuler for his comments, and Carina Silberer for providing the Strudel features. We acknowledge the support of EPSRC through project grant EP/I037415/1."
}