{
    "article": "In this paper we describe the memory-based machine learning system that we submitted to the BioNLP Shared Task on Event Extraction. We modeled the event extraction task using an approach that has been previously applied to other natural language processing tasks like semantic role labeling or negation scope finding. The results obtained by our system (30.58 F-score in Task 1 and 29.27 in Task 2) suggest that the approach and the system need further adaptation to the complexity involved in extracting biomedical events. Introduction In this paper we describe the memory-based machine learning system that we submitted to the BioNLP shared task on event extraction 1 . The system operates in three phases. In the first phase, event triggers and entities other than proteins are detected. In the second phase, event participants and arguments are identified. In the third phase, postprocessing heuristics select the best frame for each event. Memory-based language processing (Daelemans and van den Bosch, 2005) is based on the idea that NLP problems can be solved by reuse of solved examples of the problem stored in memory. Given a new problem, the most similar examples are retrieved, and a solution is extrapolated from them. As language processing tasks typically involve many subregularities and (pockets of) exceptions, it has been argued that memory-based learning is at an advantage in solving these highly disjunctive learning problems compared to more eager learning that abstract from the examples, as the latter eliminates not only noise but also potentially useful exceptions (Daelemans et al., 1999) . The BioNLP Shared Task 2009 takes a linguistically-motivated approach, which is reflected in the properties of the shared task definition: rich semantics, a text-bound approach, and decomposition of linguistic phenomena. Memory-based algorithms have been successfully applied in language processing to a wide range of linguistic tasks, from phonology to semantic analysis. Our goal was to investigate the performance of a memory-based approach to the event extraction task, using only the information available in the training corpus and modelling the task applying an approach similar to the one that has been applied to tasks like semantic role labeling (Morante et al., 2008) or negation scope detection (Morante and Daelemans, 2009) . In Section 2 we briefly describe the task. Section 3 reviews some related work. Section 4 presents the system, and Section 5 the results. Finally, some conclusions are put forward in Section 6. Task description The BioNLP Shared Task 2009 on event extraction consists of recognising bio-molecular events in biomedical texts, focusing on molecular events involving proteins and genes. An event is defined as a relation that holds between multiple entities that fulfil different roles. Events can participate in one type of events: regulation events. The task is divided into the three subtasks listed below. We participated in subtasks 1 and 2. \u2022 Task 1: event detection and characterization. This task involves event trigger detection, event typing, and event participant recognition. \u2022 Task 2: event argument recognition. Recognition of entities other than proteins and the assignment of these entities as event arguments. \u2022 Task 3: recognition of negations and speculations. The task did not include a named entity recognition subtask. A gold standard set of named entity annotations for proteins was provided by the organisation. A dataset based on the publicly available portion of the GENIA (Collier et al., 1999) corpus annotated with events (Kim et al., 2008) and of the BioInfer (Pyysalo et al., 2007) corpus was provided for training, and held-out parts of the same corpora were provided for development and testing. The inter-annotator agreement reported for the Genia Event corpus is 56% strict match 2 , which means that the event type is the same, the clue expressions are overlapping and the themes are the same. This low inter-annotator agreement is an indicator of the complexity of the task. Similar low inter-annotator agreement rates (49.00 %) in identification of events have been reported by Sasaki et al. (2008) . Related work In recent years, research on text mining in the biomedical domain has experienced substantial progress, as shown in reviews of work done in this field (Krallinger and Valencia, 2005; Ananiadou and McNaught, 2006; Krallinger et al., 2008b) . Some corpora have been annotated with event level information of different types: PropBank-style frames (Wattarujeekrit et al., 2004; Chou et al., 2006) , frame independent roles (Kim et al., 2008) , and specific roles for certain event types (Sasaki et al., 2008) . The focus on extraction of event frames using machine learning techniques is relatively new because there were no corpora available. Most work focuses on extracting biological relations from corpora, which consists of finding associations between entities within a text phrase. For example, Bundschus et al. (2008) develop a Conditional Random Fields (CRF) system to identify relations between genes and diseases from a set of GeneRIF (Gene Reference Into Function) phrases. A shared task was organised in the framework of the Language Learning in Logic Workshop 2005 devoted to the extraction of relations from biomedical texts (N\u00e9dellec, 2005) . Extracting protein-protein interactions has also produced a lot of research, and has been the focus of the BioCreative II competition (Krallinger et al., 2008a) . As for event extraction, Yakushiji et al. (2001) present work on event extraction based on fullparsing and a large-scale, general-purpose grammar. They implement an Argument Structure Extractor. The parser is used to convert sentences that describe the same event into an argument structure for this event. The argument structure contains arguments such as semantic subject and object. Information extraction itself is performed using pattern matching on the argument structure. The system extracts 23 % of the argument structures uniquely, and 24% with ambiguity. Sasaki et al. (2008) present a supervised machine learning system that extracts event frames from a corpus in which the biological process E. coli gene regulation was linguistically annotated by domain experts. The frames being extracted specify all potential arguments of gene regulation events. Arguments are assigned domain-independent roles (Agent, Theme, Location) and domain-dependent roles (Condition, Manner). Their system works in three steps: (i) CRF-based named entity recognition to assign named entities to word sequences; (ii) CRF-based semantic role labeling to assign semantic roles to word sequences with named entity labels; (iii) Comparison of word sequences with event patterns derived from the corpus. The system achieves 50% recall and 20% precision. We are not aware of work that has been carried out on the data set of the BioNLP Shared Task 2009 before the task took place. System description We developed a supervised machine learning system. The system operates in three phases. In the first phase, event triggers and entities other than proteins are detected. In the second phase, event participants and arguments are identified. In the third phase, postprocessing heuristics select the best frame for each event. Parameterisation of the classifiers used in Phases 1 and 2 was performed by experimenting with sets of parameters on the development set. We experimented with manually selected parameters and with parameters selected by a genetic algorithm, but the parameters found by the genetic algorithm did not yield better results than the manually selected parameters As a first step, we preprocess the corpora with the GDep dependency parser (Sagae and Tsujii, 2007 ) so that we can use part-of-speech tags and syntactic information as features for the machine learner. GDep is a a dependency parser for biomedical text trained on the Tsujii Lab's GENIA treebank. The dependency parser predicts for every word the partof-speech tag, the lemma, the syntactic head, and the dependency relation. In addition to these regular dependency tags it also provides information about the IOB-style chunks and named entities. The classifiers use the output of GDep in addition to some frequency measures as features. We represent the data into a columns format, following the standard format of the CoNLL Shared Task 2006 (Buchholz and Marsi, 2006) , in which sentences are separated by a blank line and fields are separated by a single tab character. A sentence consists of tokens, each one starting on a new line. Phase 1: Entity Detection In the first phase, a memory based classifier predicts for every word in the corpus whether it is an entity or not and the type of entity. In this setting, entity refers to what in the shared task definition are events and entities other than proteins. Classes are defined in the IOB-style 3 in order to find entities that span over multiple words. Figure 1 shows a simplified version of a sentence in which high level is a Positive Regulation event that spans over multiple tokens and proenkephalin is a Pro- We use the IB1 memory-based classifier as implemented in TiMBL (version 6.1.2) (Daelemans et al., 2007) , a supervised inductive algorithm for learning classification tasks based on the k-nearest neighbor classification rule (Cover and Hart, 1967) . The memory-based learning algorithm was parameterised in this case by using modified value difference as the similarity metric, gain ratio for feature weighting, using 7 k-nearest neighbors, and weighting the class vote of neighbors as a function of their inverse linear distance. For training we did not use the entire set of instances from the training data. We downsampled the instances keeping 5 negative instances (class label O) for every positive instance. Instances to be kept were randomly selected. The features used by this classifier are the following: \u2022 About the token in focus: word, chunk tag, named entity tag as provided by the dependency parser, and, for every entity type, a number indicating how many times the focus word triggered this type of entity in the training corpus. \u2022 About the context of the token in focus: lemmas ranging from the lemma at position -4 until the lemma at position +3 (relative to the focus word); part-of-speech ranging from position -1 until position +1; chunk ranging from position -1 until position +1 relative to the focus word; the chunk be-fore the chunk to which the focus word belongs; a boolean indicating if a word is a protein or not for the words ranging from position -2 until position +3. Table 1 shows the results 4 of this first step. All class labels with a precision and recall of 0 are left out. The overall accuracy is 95.4%. This high accuracy is caused by the skewness of the data in the training corpus, which contains a higher proportion of instances with class label O. Instances with this class are correctly classified in the development test. B-Protein catabolism and B-Phosphorylation get the highest scores. The reason why these classes get higher scores can be that the words that trigger these events are less diverse. Class label Precision Phase 2: predicting the arguments and participants of events In the second phase, another memory-based classifier predicts the participants and arguments of an event. Participants have the main role in the event and arguments are entities that further specify the event. In (1), for the event phosphorylation the system has to find that STAT1, STAT3, STAT4, STAT5a, and STAT5b are participants with the role Theme and that tyrosine is an argument with the role Site. (1) IFN-alpha enhanced tyrosine phosphorylation of STAT1, STAT3, STAT4, STAT5a, and STAT5b. We use the IB1 algorithm as implemented in TiMBL (version 6.1.2) (Daelemans et al., 2007) . The classifier was parameterised by using gain ratio for feature weighting, overlap as distance metrics, 11 nearest neighbors for extrapolation, and normal majority voting for class voting weights. For this classifier, instances represent combinations of an event with all the entities in a sentence, for as many events as there are in a sentence. Entities include entities and events. We use as input the output of the classifier in Phase 1, so only events and entities classified as such in Phase 1, and the gold proteins will be combined. Events can have participants and arguments in a sentence different that their sentence. We calculated that in the training corpus these cases account for 5.54% of the relations, and decided to restrict the combinations at the sentence level. For the sentence in (1) above, where tyrosine, phosphorylation, STAT1, STAT3, STAT4, STAT5a, and STAT5b are entities and of those only phosphorylation is an event, the instances would be produced by combining phosphorylation with the seven entities. The features used by this classifier are the following: \u2022 Of the event and of the combined entity: first word, last word, type, named entity provided by GDep, chain of lemmas, chain of part-of-speech (POS) tags, chain of chunk tags, dependency label of the first word, dependency label of the last word. \u2022 Of the event context and of the combined entity context: word, lemma, POS, chunk, and GDep named entity of the five previous and next words. \u2022 Of the context between event and combined entity: the chain of chunks in between, number of tokens in between, a binary feature indicating whether event is located before or after entity. \u2022 Others: four features indicating the parental relation between the first and last words of the event and the first and last words of the entity. The values for this feature are: event father, event ancestor, entity father, entity ancestor, none. Five binary features indicating if the event accepts certain roles (Theme, Site, ToLoc, AtLoc, Cause). Table 2 shows the results of this classifier per type of participant (Cause, Site, Theme) and type of argument (AtLoc, ToLoc). Arguments are very infrequent, and the participants are skewed towards the class Theme. Classes Site and Theme score high F1, and in both cases recall is higher than precision. The fact that the classifier overpredicts Sites and Themes will have a negative influence in the final scores of the full system. Further research will focus on improving precision. Table 2 : Results of finding the event participants and arguments. Table 3 shows the results of finding the event participants and arguments per event type, expressed in terms of accuracy on the development corpus. Cause is easier to predict for Positive Regulation events, Site is the easiest class to predict, taking into account that AtLoc and ToLoc occur only 5 times in total, and Theme can be predicted successfully for Transcription and Gene Expression events, whereas it gets lower scores for Regulation, Binding, and Positive Regulation events. Table 3 : Results of finding the event participants and arguments per event type (accuracy). Table 4 shows the results of finding the event participants that are Entity and Protein per type of event for events that are not regulations. Entity scores high in all cases, whereas Protein scores high for Transcription and Gene Expression events and low for Binding events. Table 5 shows the results of finding the participants and arguments of regulation events. In the case of regulation events, Entity is easier to classify with Positive Regulation events, and Protein with Negative Regulation events. In the cases in which events are participants of regulation events, Binding, Gene Expression and Phosphorylation are easier to classify with Positive Regulation events, Localization with Regulation events, Protein Catabolism with Negative Regulation events, and Transcription is easy to classify in all cases. Table 5 : Results of finding event arguments and participants for regulation events (accuracy). From the results of the system in this phase we can extract some conclusions: data are skewed towards the Theme class; Themes are not equally predictable for the different types of events, they are better predictable for Gene Expression and Transcription; Proteins are more difficult to classify when they are Themes of regulation events; and Transcription and Localization events are easier to predict as Themes of regulation events, compared to the other types of events that are Themes of regulation events. This suggests that it could be worth experimenting with a classifier per entity type and with a classifier per role, instead of using the same classifier for all types of entities. Phase 3: heuristics to select the best frame per event Phases 1 and 2 aimed at identifying events and candidates to event participants. However, the purpose of the task is to extract full frames of events. For a sentence like the one in (1) above, the system has to extract the event frames in (2). ( It is necessary to apply heuristics in order to build the event frames from the output of the second classifier, which for the sentence in (1) above should contain the predictions in (3). (3) 1. phosphorylation STAT1 : Theme 2. phosphorylation STAT3 : Theme 3. phosphorylation STAT5a : Theme 4. phosphorylation STAT4 : Theme 5. phosphorylation STAT5b : Theme 6. phosphorylation tyrosine : Site Thus, in the third phase, postprocessing heuristics determine which is the frame of each event. Specific heuristics for each type of event The system contains different rules for each of the 5 types of participants (Cause, Site, Theme, AtLoc, ToLoc). The text entities are the entities defined during Phase 2. An event is created for every text entity for which the system predicted at least one participant or argument. To illustrate this we can take a look at the predictions for the Gene Expression event in (4) where the identifiers starting by T refer to entities in the text. The prediction would results in the events listed in (5). (4) Gene expression= Theme:T11=Theme:T12=Theme:T13 (5) E1 Gene expression:T23 Theme:T11 E2 Gene expression:T23 Theme:T12 E3 Gene expression:T23 Theme:T13 Gene expression, Transcription, and Protein catabolism. These type of events have only a Theme. Therefore, an event frame is created for every Theme predicted for events that belong to these types. Localization. A Localization event can have one Theme and 2 arguments: AtLoc and ToLoc. A Localization event with more than one predicted Theme will result in as many frames as predicted Themes. The arguments are passed on to every frame. Binding. A Binding event can have multiple Themes and multiple Site arguments. If the system predicts more than one Theme for a Binding event, the heuristics first check if these Themes are in a coordination structure. Coordination checking consists of checking whether the word 'and' can be found between the Themes. Coordinated Themes will give rise to separate frames. Every participant and loose Theme is added to all created event lines. This case applies to the sentence in (6) (6) When we analyzed the nature of STAT proteins capable of binding to IL-2Ralpha, pim-1, and IRF-1 GAS elements after cytokine stimulation, we observed IFN-alpha-induced binding of STAT1, STAT3, and STAT4, but not STAT5 to all of these elements. The frames that should be created for this sentence listed in (7). ( 7 ) 1. Binding (binding): Theme(STAT4) Theme2(IRF-1) Site2(GAS elements) 2. Binding (binding): Theme(STAT3) Theme2:(IL-2Ralpha) Site2(GAS elements) 3. Binding (binding): Theme(STAT3) Theme2(IRF-1) Site2(GAS elements) 4. Binding (binding): Theme(STAT4) Theme2(pim-1) Site2(GAS elements) 5. Binding (binding): Theme(STAT1) Theme2(IL-2Ralpha) Site2(GAS elements) 6. Binding (binding): Theme(STAT4) Theme2(IL-2Ralpha) Site2(GAS elements) 7. Binding (binding): Theme(IL-2Ralpha) Site(GAS elements) 8. Binding (binding): Theme(pim-1) Site(GAS elements) 9. Binding (binding): Theme(STAT1) Theme2(IRF-1) Site2(GAS elements) 10. Binding (binding): Theme(STAT3) Theme2(pim-1) Site2(GAS elements) 11. Binding (binding): Theme(IRF-1) Site(GAS elements) 12. Binding (binding): Theme(STAT1) Theme2(pim-1) Site2(GAS elements) Phosphorylation. A Phosphorylation event can have one Theme and one Site. Multiple Themes for the same event will result in multiple frames. The Site argument will be added to every frame. Regulation, Positive regulation, and Negative regulation. A Regulation event can have a Theme, a Cause, a Site, and a CSite. For Regulation events the system uses a different approach when creating new frames. It first checks which of the participants and arguments occurs the most frequent in a prediction and it creates as many separate frames as are needed to give every participant/argument its own frame. The remaining participants/arguments are added to the nearest frame. For this type of event a new frame can be created not only for multiple Themes but also for e.g. multiple Sites. The purpose of this strategy is to increase the recall of Regulation events. Postprocessing After translating predictions into frames some corrections are made. 1. Every Theme and Cause that is not a Protein is thrown away. 2. Every frame that has no Theme is provided with a default Theme. If no Protein is found before the focus word, the closest Protein after the word is taken as the default Theme. 3. Duplicates are removed. Results The official results of our system for Task 1 are presented in Table 6 . The best F1 score are for Gene Expression and Protein Catabolism events. The lowest results are for all the types of regulation events and for Binding events. Binding events are more difficult to predict correctly because they can have more than one Theme. Results obtained on the development set are a little bit higher. For Task1 an overall F1 of 34.78 and for Task 2 33.54. For most event types precision and recall are unbalanced, the system scores higher in recall. Further research should focus on increasing precision because the system is predicting false positives. It would be possible to add a step in order to filter out the false positives by comparing word sequences with event patterns derived from the corpus, which is an approach taken in the system by Sasaki et al. (2008) . In the case of Binding events, both precision and recall are low. There are two explanations for this. In the first place, the first classifier misses almost half of the binding events. As an example, for the sentence in (8.1), the gold standard identifies as binding event the multiwords binds as a homodimer and form heterodimers, whereas the system identifies two binding events for the same sentence, binds and homodimer, none of which is correct because the correct one is the multiword unit. For the sentence in (8.2), the gold standard identifies as binding events bind, form homo-, and heterodimers, whereas the system identifies only binds. (8) 1. The KBF1/p50 factor binds as a homodimer but can also form heterodimers with the products of other members of the same family, like the c-rel and v-rel (proto)oncogenes. 2. A mutant of KBF1/p50 (delta SP), unable to bind to DNA but able to form homo-or heterodimers, has been constructed. From the sentence in (8.1) above the eight frames in (9) should be extracted, whereas the system extracts only the frames in (10), which are incorrect because the events have not been correctly identified. The complexity of frame extraction of Binding events contrasts with the less complex extraction of frames for Gene Expression events, like the one in sentence (11), where expression has been identified correctly by the system as an event and the frame in (12) has been correctly extracted. (11) Thus, c-Fos/c-Jun heterodimers might contribute to the repression of DRA gene expression. (12) Gene Expression(expression) : Theme(DRA) Conclusions In this paper we presented a supervised machine learning system that extracts event frames from biomedical texts in three phases. The system participated in the BioNLP Shared Task 2009, achieving an F-score of 30.58 in Task 1, and 29.27 in Task 2. The frame extraction task was modeled applying the same approach that has been applied to tasks like semantic role labeling or negation scope detection, in order to check whether such an approach would be suitable for a frame extraction task. The results obtained for the present task do not compare to results obtained in the mentioned tasks, where state of the art F-scores are above 80. Extracting biomedical event frames is more complex than labeling semantic roles because of several reasons. Semantic roles are mostly assigned to syntactic constituents, predicates have only one frame and all the arguments belong to the same frame. In contrast, in the biomedical domain one event can have several frames, each frame having different participants, the boundaries of which do not coincide with syntactic constituents. The system presented here can be improved in several directions. Future research will concentrate on increasing precision in general, and precision and recall of binding events in particular. Analysing in depth the errors made by the system at each phase will allow us to find the weaker aspects of the system. From the results of the system in the second phase we could draw some conclusions: data are skewed towards the Theme class; Themes are not equally predictable for the different types of events; Proteins are more difficult to classify when they are Themes of regulation events; and Transcription and Localization events are easier to predict as Themes of regulation events, compared to the other types of events that are Themes of regulation events. We plan to experiment with a classifier per entity type and with a classifier per role, instead of using the same classifier for all types of entities. Additionally, the effects of the postprocessing rules in Phase 3 will be evaluated. Acknowledgments Our work was made possible through financial support from the University of Antwerp (GOA project BIOGRAPH). We are grateful to two anonymous reviewers for their valuable comments.",
    "abstract": "In this paper we describe the memory-based machine learning system that we submitted to the BioNLP Shared Task on Event Extraction. We modeled the event extraction task using an approach that has been previously applied to other natural language processing tasks like semantic role labeling or negation scope finding. The results obtained by our system (30.58 F-score in Task 1 and 29.27 in Task 2) suggest that the approach and the system need further adaptation to the complexity involved in extracting biomedical events.",
    "countries": [
        "Belgium"
    ],
    "languages": [],
    "numcitedby": "10",
    "year": "2009",
    "month": "June",
    "title": "A memory-based learning approach to event extraction in biomedical texts"
}