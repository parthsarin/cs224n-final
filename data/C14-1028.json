{
    "article": "Word Ordering Errors (WOEs) are the most frequent type of grammatical errors at sentence level for non-native Chinese language learners. Learners taking Chinese as a foreign language often place character(s) in the wrong places in sentences, and that results in wrong word(s) or ungrammatical sentences. Besides, there are no clear word boundaries in Chinese sentences. That makes WOEs detection and correction more challenging. In this paper, we propose methods to detect and correct WOEs in Chinese sentences. Conditional random fields (CRFs) based WOEs detection models identify the sentence segments containing WOEs. Segment point-wise mutual information (PMI), inter-segment PMI difference, language model, tag of the previous segment, and CRF bigram template are explored. Words in the segments containing WOEs are reordered to generate candidates that may have correct word orderings. Ranking SVM based models rank the candidates and suggests the most proper corrections. Training and testing sets are selected from HSK dynamic composition corpus created by Beijing Language and Culture University. Besides the HSK WOE dataset, Google Chinese Web 5gram corpus is used to learn features for WOEs detection and correction. The best model achieves an accuracy of 0.834 for detecting WOEs in sentence segments. On the average, the correct word orderings are ranked 4.8 among 184.48 candidates. Introduction Detection and correction of grammatical errors are practical for many applications such as document editing and language learning. Non-native language learners usually encounter problems in learning a new foreign language and are prone to generate ungrammatical sentences. Sentences with various types of errors are written by language learners of different backgrounds. In the HSK corpus, which contains compositions of students from different countries who study Chinese in Beijing Language and Culture University (http://nlp.blcu.edu.cn/online-systems/hsk-language-lib-indexing-system.html), there are 35,884 errors at sentence level. The top 10 error types and their occurrences are listed below: Word Ordering Errors (WOE) (8,515), Missing Component (Adverb) (3, 244) , Missing Component (Predicate) (3,018), Grammatical Error (\"Is \u2026 DE\") (2,629), Missing Component (Subject) (2,405), Missing Component (Head Noun) (2364), Grammatical Error (\"Is\" sentence) (1,427), Redundant Component (Predicate) (1,130), Uncompleted Sentence (1,052), and Redundant Component (Adverb) (1, 051) . WOEs are the most frequent type of errors (Yu and Chen, 2012) . The types of WOEs in Chinese are different from those in English. A Chinese character has its own meaning in text, while individual characters are meaningless in English. Learners taking Chinese as a foreign language often place character(s) in the wrong places in sentences, and that results in wrong word(s) or ungrammatical sentences. Besides, there are no clear word boundaries in Chinese sentences. Word segmentation is fundamental in Chinese language processing (Huang and Zhao, 2007) . WOEs may result in wrong segmentation. That may make WOEs detection and correction more challenging. This paper aims at identifying the positions of WOEs in the text written by non-native Chinese language learners, and proposes candidates to correct the errors. It is organized as follows. Section 2 surveys the related work. Section 3 gives an overview of the study. Section 4 introduces the dataset used for training and testing. Sections 5 and 6 propose models to detect and correct Chinese WOEs, respectively. Section 7 concludes this study and propose some future work. Related Work There are only a few researches on the topic of detection and correction of WOEs in Chinese language until now. We survey the related work from the four aspects: (1) grammatical errors made by nonnative Chinese learners, (2) word ordering errors in Chinese language, (3) computer processing of grammatical errors in Chinese language, and (4) grammatical error correction in other languages. Leacock et al. (2014) give thorough surveys in automated grammatical error detection for language learners. Error types, available corpora, evaluation methods, and approaches for different types of errors are specified. Several shared tasks on grammatical error correction in English have been organized in recent years, including HOO 2011 (Dale and Kilgarriff, 2011) , HOO 2012 (Dale et al., 2012 ) and CoNLL 2013 (Ng et al., 2013) . Different types of grammatical errors are focused: (1) HOO 2011: article and preposition errors, (2) HOO 2012: determiner and preposition errors, and (3) CoNLL 2013: article or determiner errors, preposition errors, noun number errors, verb form errors, and subject-verb agreement errors. In Chinese, spelling check evaluation was held at SIGHAN Bake-off 2013 (Wu et al., 2013) . However, none of the above evaluations deals with word ordering errors. Wang (2011) focuses on the Chinese teaching for native English-speaking students. He shows the most frequent grammatical errors made by foreigners are missing components, word orderings and sentence structures. One major learning problem of foreign learners is the influence of negative transfer of mother tongue. Lin (2011) studies the biased errors of word order in Chinese written by foreign students in the HSK corpus. Sun (2011) compares the word orderings between English and Chinese to figure out the differences in sentence structures. Yu and Chen (2012) propose classifiers to detect sentences containing WOEs, but they do not deal with where WOEs are and how to correct them. Wagner et al. (2007) deal with common grammatical errors in English. They consider frequencies of POS n-grams and the outputs of parsers as features. Gamon et al. (2009) identify and correct errors made by non-native English writers. They first detect article and preposition errors, and then apply different techniques to correct each type of errors. Huang et al. (2010) propose a correction rule extraction model trained from 310,956 sets of erroneous and corrected pairwise sentences. Some studies related to word orderings are specific to the topic of pre-processing or post-processing of statistical machine translation, such as Galley and Manning (2008) , Setiawan et al. (2009), and DeNero and Uszkoreit (2011) . The major contributions of this paper cover the following aspects: (1) application aspect: detecting and correcting a common type of Chinese written errors of foreign learners with HSK corpus; (2) language aspect: considering the effects of words and segments in Chinese sentences; and (3) resource aspect: exploring the feasibility of using a Chinese web n-gram corpus in WOE detection/correction. Overview of a Chinese Word Ordering Detection and Correction System Figure 1 sketches an overview of our Chinese WOE detection and correction system. It is composed of three major parts, including dataset preparation, WOE detection, and WOE correction. At first, a corpus is prepared. Sentences containing WOEs are selected from the corpus and corrected by two Chinese native speakers. This corpus will be used for training and testing. Then, a sentence is segmented into a sequence of words, and chunked into several segments based on punctuation marks. Regarding words and segments as fundamental units reduce the number of reordering and limit the reordering scope. The segments containing WOEs are identified by using CRF-based models. Finally, the candidates are generated by reordering and ranked by Ranking SVM-based models. To examine the performance of WOE correction, two datasets, C ans and C sys , consisting of error segments labelled by human and detected by our system, respectively, are employed. The example shown below demonstrates the major steps. This sentence is composed of three segments. The second segment contains a WOE, i.e., \u4eca\u5e74\u590f\u5929\u6bd5\u4e1a\u4e86\u5927\u5b66 (Graduated college this summer). The correct sentence should be \u4eca\u5e74\u590f\u5929\u5927\u5b66\u6bd5\u4e1a\u4e86 (Graduated from college this summer). (1) Reduce the number of reordering units in a sentence by using word segmentation. \u6211 \u53eb \u738b\u5927\u5b89 \uff0c \u4eca\u5e74 \u590f\u5929 \u6bd5\u4e1a \u4e86 \u5927\u5b66 \uff0c \u73b0\u5728 \u627e \u5de5\u4f5c \u3002 ( I / am /Wang Daan/ , /this /summer /graduated/le /college /, /now /look for/job /.) (2) Chunk a sentence into segments by punctuation marks. \u6211 \u53eb \u738b\u5927\u5b89 \uff0c \u4eca\u5e74 \u590f\u5929 \u6bd5\u4e1a \u4e86 \u5927\u5b66 \uff0c \u73b0\u5728 \u627e \u5de5\u4f5c \u3002 (3) Detect the possible segments containing WOEs in a sentence by CRF-based methods. \u6211 \u53eb \u738b\u5927\u5b89 \uff0c \u4eca\u5e74 \u590f\u5929 \u6bd5\u4e1a \u4e86 \u5927\u5b66 \uff0c \u73b0\u5728 \u627e \u5de5\u4f5c \u3002 (4) Reorder words in an erroneous segment and generate candidates. Two Chinese native speakers are asked to correct the 1,150 sentences. Only reordering operation is allowed during correction. A dataset composed of 1,150 sets of original sentence S and its two corrections A1 and A2 is formed for training and testing in the experiments. A1 may be different from A2. The following shows an example. Without context, either A1 or A2 is acceptable. \u6211 \u53eb \u738b\u5927\u5b89 \uff0c \u4eca\u5e74 \u590f\u5929 \u6bd5\u4e1a \u5927\u5b66 \u4e86 \uff0c \u73b0\u5728 \u627e \u5de5\u4f5c \u3002 \u2026 \u6211 \u53eb \u738b\u5927\u5b89 \uff0c \u4eca\u5e74 \u590f\u5929 \u5927\u5b66 \u6bd5\u4e1a \u4e86 \uff0c \u73b0\u5728 \u627e \u5de5\u4f5c \u3002 ( S: \u5979\u6211\u4eec\u5144\u5f1f\u59ca\u59b9\u9f13\u52b1\u5b66\u97f3\u4e50\u548c\u5916\u8bed\u3002 (She we encouraged to study music and foreign languages.) A1: \u6211\u4eec\u5144\u5f1f\u59ca\u59b9\u9f13\u52b1\u5979\u5b66\u97f3\u4e50\u548c\u5916\u8bed\u3002 (We encouraged her to study music and foreign languages.) A2: \u5979\u9f13\u52b1\u6211\u4eec\u5144\u5f1f\u59ca\u59b9\u5b66\u97f3\u4e50\u548c\u5916\u8bed\u3002 (She encouraged us to study music and foreign languages.) In some cases, A1 and/or A2 may be equal to S. That is, the annotators may think S is correct. That may happen when context is not available. Finally, 327 of 1,150 sets contain different corrections. Both A1 and A2 are equal to S in 27 sets. Total 47 sentences corrected by one annotator are the same as the original sentences, and total 65 sentences corrected by another annotator are the same as the original sentences. This corpus is available at http://nlg.csie.ntu.edu.tw/nlpresource/woe_corpus/. Figure 2 shows the Damerau Levenshtein distance between the original sentences S and the corrections A1 and A2. It counts the minimum number of operations needed to transform a source string into a target one. Here the operation is the transposition of two adjacent characters. Total 823 sets of A1 and A2 have a distance of 0. It means 71.5% of sentences have the same corrections by the two Chinese native speakers. The distances between S and A1 are similar to those between S and A2. Total 850 sets of original sentences and the corrections have a distance below 10 characters and 1,014 sets of sentences have a distance below 20. We can also observe that the number of sentences with even distances is larger than that of sentences with odd distances because most of the Chinese words are composed of two characters. Detection of Word Ordering Errors This section first defines the fundamental units for error detection, then introduces the error detection models along with their features, and finally presents and discusses the experimental results. Fundamental Units for Reordering Permutation is an intuitive way to find out the correct orderings, but its cost is very high. Unrestrictive permutation will generate too many candidates to be acceptable in computation time. What units to be reordered in what range under what condition has be considered. Chinese is different from English in that characters are the smallest meaningful units, and there are no clear word boundaries. Computation cost and segmentation performance is a trade-off to select character or word as a reordering unit. On the one hand, using words as the reordering units will reduce the number of candidates generated. On the other hand, word segmentation results will affect the performance of WOE detection and correction. The following two examples show that reordering the words cannot generate the correct answers. In these two examples, a word in the original sentence (S) is segmented into two words in the correct sentence (A). These words are underlined. Because a word is regarded as a unit for reordering, the correct sentence cannot be generated by word reordering only in these two cases. Total 76 sets of sentences belong to such cases. They occupy 6% of the experimental dataset. Considering the benefits of words, we still adopt words as reordering units in the following experiments. To prevent reordering all the words in the original sentences, we further divide a sentence into segments based on comma, caesura mark, semi-colon, colon, exclamation mark, question mark, and full stop. Sentence segments containing WOEs will be detected and words will be reordered within the segments to generate the candidates for correction. In our dataset, there are only 31 sets of sentences (i.e., 2.7%) with WOEs across segments. The following shows two examples. The underlined words are moved to other segments. S: \u5176\u5b9e\uff0c\u6211\u8fd8\u662f\u505a\u4e8b\u60c5\u7684\u65f6\u5019\uff0c\u4e0d\u600e\u4e48\u8001\u5b9e\u3002 (In fact, when I am still working, I am not honest.) A: \u5176\u5b9e\uff0c\u6211\u505a\u4e8b\u60c5\u7684\u65f6\u5019\uff0c\u8fd8\u662f\u4e0d\u600e\u4e48\u8001\u5b9e\u3002 (In fact, when I am working, I am still not honest.) S: \u6240\u4ee5\u6709\u7edd\u5bf9\u7684\u5bfc\u6e38\u5de5\u4f5c\u7ecf\u9a8c\uff0c\u65e0\u987b\u518d\u57f9\u8bad\u3002 (Therefore we have absolute guide work experience, we do not need retraining.) A: \u6709\u7edd\u5bf9\u7684\u5bfc\u6e38\u5de5\u4f5c\u7ecf\u9a8c\uff0c\u6240\u4ee5\u65e0\u987b\u518d\u57f9\u8bad\u3002 (We have absolute guide work experience, therefore we do not need retraining.) In summary, the upper bound of the correction performance would be 91.3%. That is, 6%+2.7% of sentences cannot be resolved. Word Ordering Errors Detection Models Conditional random fields (CRFs) (Lafferty, 2001) are used to implement the WOE detection in sentence segments. Segments with WOEs are labelled with answer tags before training. The original sentence S written by non-native Chinese learner is compared with the annotated correct sentence A. Characters are compared from the start and the end of sentences, respectively. The positions are marked ERR start and ERR end once the characters are different. All words within ERR start and ERR end are marked ERR range . The longest common subsequence (LCS) within ERR range of S and ERR range of A are excluded from ERR range and the remaining words are marked ERR words . Figure 3 shows an example. We use BIO encoding (Ramshaw and Marcus, 1995) to label segments with WOEs. Segments contain-ing words in ERR words are defined to be segments with WOEs. The leftmost segment with WOEs is tagged B, and the following segment with WOEs are tagged I. Those segments without WOEs are tagged O. Results and Discussion WOE detection models will annotate the segments of a sentence with labels B, I or O. These labels will determine which segments may contain WOEs. In the experiments, we use 5-fold cross-validation to evaluate the proposed models. Performance for detecting WOEs is measured at the segment and the sentence levels, respectively. The metrics at the segment level are defined as follows. Here set notation is adopted. The symbol |S| denotes the number of elements in the set S which is derived by the logical formula after vertical bar. TAG pred (SEG) and TAG ans (SEG) mean the labels of segment SEG tagged by WOE detection model and human, respectively. The symbol m denotes total number of segments in the test set. The metrics at the sentence level are defined as follows: Accuracy and F1-score measure whether the models can find out segments with WOEs. Correctable Rate of sentences measures whether it is possible that the candidates of the correct word order can be generated by the WOE correction models. If a segment without WOEs is misjudged to be erroneous, the word order still has a chance to be kept by the WOE correction models. However, if a segment with WOEs is misjudged to be correct, words in the misjudged segment will not be reordered in the correction part because the error correction module is not triggered. A sentence is said to be \"correctable\" if no segments in it are misjudged as \"correct\". The ratio of the \"correctable\" sentences is considered as a metric at the sentence level. Table 2 shows the performance of WOE detection. Five models are compared. We regard tagging all the segments with the labels B and O respectively as two baselines. Clearly, the recall at the segment level and the correctable rate at the sentence level are 1 by the all-tag-B baseline. However, its accuracy at the segment and the sentence levels are low. The all-tag-O baseline has better accuracy at the segment level than the all-tag-B baseline, but has very bad F1-score, i.e., 0. The proposed models are much better than the two baselines. Among the feature combinations, f PMI f Diff f Tag f B show the best performance. The accuracy at the segment level is 0.834, and the correctable rate is 0.883. The best detection result will be sent for further correction. Model Correction of Word Ordering Errors This section deals with generating and ranking candidates to correct WOEs. Two datasets, C ans and C sys , are explored in the experiments. We evaluate the optimal performance of the WOE correction models with the C ans dataset, and evaluate WOE detection and correction together with the C sys dataset. Candidate Generation Instead of direct permutation, we consider three strategies shown as follows to correct the error sentences. The complexity of generating candidates by permutation is O(n!). The complexity of using these three strategies decreases to O(n 2 ). ( R tri-word works similarly to R bi-word, but three reordering units are merged before reordering. Total (n-2)(n-3) candidates are generated by R tri-word . The following shows an example. S: \u6211/\u9700\u8981/\u5de5\u4f5c/\u7684/\u7ecf\u9a8c/\u5728/\u60a8/\u7684/\u516c\u53f8\u3002 (I / need / working / (de) / experience / in / your / (de) / company.) A: \u6211/\u9700\u8981/\u5728/\u60a8/\u7684/\u516c\u53f8/\u5de5\u4f5c/\u7684/\u7ecf\u9a8c\u3002 (I / need / in / your / (de) / company / working / (de) / experience.) Table 3 shows the recall rate of each candidate generation strategy. With the C ans dataset, correct word ordering can be generated for 85.8% of the original sentences by fusing R single , R bi-word and R tri-word . The candidates generated by using the C sys dataset cover 69.7% of the correct word orderings. The difference would probably be due to the error propagation of word ordering error detection specified in Section 5.3. Furthermore, 6% of correct word orderings are unable to be generated by using the reordering units due to the word segmentation issue as mentioned in Section 5.1. We can also find that 72.3% of sentences with WOEs can be corrected by the R single strategy using the C ans dataset. It means most of the WOEs made by non-native Chinese learners can be corrected by moving only one word. Strategy\\Dataset Candidate Ranking We use Ranking SVM (Joachims, 2002) for candidates ranking. Because WOEs may produce abnormal POS sequence, POS bigrams and POS trigrams are considered as features for Ranking SVM. We use a k-tuple feature vector for each candidate sentence, where k is the number of features. In each dimension, binary weight is assigned: 1 if the feature exists in a candidate, and 0 otherwise. Score for each candidate is assigned by a binary classifier: 1 if the candidate is the same as either of the annotated corrections, and 0 otherwise. Results and Discussion Mean Reciprocal Rank (MRR) defined below is used for performance evaluation. The reciprocal rank is the multiplicative inverse of the rank of the first correct answer. MRR is the mean of reciprocal rank for all sentences S, value from 0 to 1. The larger MRR means the correct answer more closes to the top ranking. Percentage of answers having rank 1 is another metric. Five-fold cross-validation is used for training and testing. In the C ans and C sys datasets, 182.03 and 184.48 candidates are proposed by the approach of fusing the results of R single , R bi-word , and R tri-word on the average. Experimental results are listed in Table 3 shows the recall of word ordering error detection using the C ans dataset is 0.858. Besides, 6% of sentences mentioned in Section 5.1 cannot be reordered to correct word ordering due to word segmentation issue. (3) Limitation of our models In the fused n-gram models, only one n-gram can be moved. It reduces the number of candidates to be generated, but some types of reorderings are missed. An example is shown as follows. The 2-gram \u51fa\u751f / \u4e8e (was born in) and the unigram \u4e8e (on) have to be exchanged. Conclusion In this paper, we consider words as the reordering units in WOE detection and correction. Sentences are chunked into segments based on punctuation marks and the CRF technique is used to detect segments that possibly contain WOEs. The best error detection model achieves an accuracy of 0.834. Three reordering strategies are further proposed to generate candidates with correct word ordering and reduce the numerous number of candidates generated by permutation. If the segments containing WOEs are known, 85.8% of correct sentences can be generated by our approach. Finally, Ranking SVM orders the generated candidates based on POS bigrams and POS trigrams features, and achieves an MRR of 0.270 when all erroneous segments are given and an MRR of 0.208 when both detection and correction modules are considered. Using words as the reordering unit reduces the cost to generate numerous candidates, but 6% of sentences are unable to reorder due to the word segmentation issue. How to balance the trade-off has to be investigated further. In the candidate ranking, selection of proper weights for POS bigram and trigram features may improve the ranking performance. Since the corpus of WOEs in Chinese is still in a limited size, expanding the related corpus for further research is also indispensable. Acknowledgements This research was partially supported by National Taiwan University and Ministry of Science and Technology, Taiwan under grants 103R890858, 101-2221-E-002-195-MY3 and 102-2221-E-002-103-MY3. We are also very thankful to the anonymous reviewers for their helpful comments to revise this paper.",
    "abstract": "Word Ordering Errors (WOEs) are the most frequent type of grammatical errors at sentence level for non-native Chinese language learners. Learners taking Chinese as a foreign language often place character(s) in the wrong places in sentences, and that results in wrong word(s) or ungrammatical sentences. Besides, there are no clear word boundaries in Chinese sentences. That makes WOEs detection and correction more challenging. In this paper, we propose methods to detect and correct WOEs in Chinese sentences. Conditional random fields (CRFs) based WOEs detection models identify the sentence segments containing WOEs. Segment point-wise mutual information (PMI), inter-segment PMI difference, language model, tag of the previous segment, and CRF bigram template are explored. Words in the segments containing WOEs are reordered to generate candidates that may have correct word orderings. Ranking SVM based models rank the candidates and suggests the most proper corrections. Training and testing sets are selected from HSK dynamic composition corpus created by Beijing Language and Culture University. Besides the HSK WOE dataset, Google Chinese Web 5gram corpus is used to learn features for WOEs detection and correction. The best model achieves an accuracy of 0.834 for detecting WOEs in sentence segments. On the average, the correct word orderings are ranked 4.8 among 184.48 candidates.",
    "countries": [
        "Taiwan"
    ],
    "languages": [
        "English",
        "Chinese"
    ],
    "numcitedby": "25",
    "year": "2014",
    "month": "August",
    "title": "{C}hinese Word Ordering Errors Detection and Correction for Non-Native {C}hinese Language Learners"
}