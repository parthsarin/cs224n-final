{
    "article": "This paper describes a method for the automatic alignment of parallel texts at clause level. The method features statistical techniques coupled with shallow linguistic processing. It presupposes a parallel bilingual corpus and identifies alignments between the clauses of the source and target language sides of the corpus. Parallel texts are first statistically aligned at sentence level and then tagged with their part-of-speech categories. Regular grammars functioning on tags, recognize clauses on both sides of the parallel text. A probabilistic model is applied next, operating on the basis of word occurrence and co-occurrence probabilities and character lengths. Depending on sentence size, possible alignments arc fed into a dynamic progranuning framework or a simulated annealing system in order to find or approxim~te the best alignment. 1he method has been tested on a Small Eng~ lish-Greek corpus consisting of texts relevant to software systems and has produced promising results in terms of correctly identified clause alignments. Introduction The availability of large collections of texts in electronic fom1, has given rise to a wide range of applications aim~ ing at the elicitation of linguistic resources such as tTanslation dictionaries, transfer grammars and retTieval of translation examples (Dagan et al., 1991; Matsumoto et al., 1993) , or even the building of fully-blown machine translation systems (Brown et al., 1990) . The pmpose of this paper is to describe a technique for extracting translation correspondences at bellow sentence level by employing statistical techniques coupled with shallow linguistic processing catering for the segmentation of sentences into clauses. Statistical processing has proved powerful for the exh\u2022action of translation equivalences at sentence and intra-sentence level. Brown et al. (1991) described a method based on the number of words contained in sentences. The general idea is that the closer in length two sentences are, the most likely they are to align. Moreover, certain anchor points and paragraph markers are considered. Dynamic progra111111ing and HMMs are pipelined to produce alignments at sentence level. The method has been applied to the Hansard-Corpus, achieving an accuracy of 96%-97%. Gale and Church ( 1991) proposed a method that relies on a simple statistical model of character lengths. The model is based on the observation that longer sentences in one language tend to be translated into longer sentences in the other language while shorter ones tend to be translated into shorter ones. A probabilistic score is assigned to each pair of proposed sentence pairs, and a dynamic programming framework calculates the most probable alignment. Although the apparent efficacy of the Gale-Church algorithm is undeniable and validated on different pairs of languages, rt faces problems when handling complex alignments(l-0, 1-2, 2-2). 'Simard et al. (1992) argue that a small amount of linguistic information is necessary in order to overcome the inherited weaknesses of the purely statistical techniques. They proposed using cognates, which are pairs of tokens of different languages sharing 11 0bvioUS 11 phonological or orthographic and semantic properties, since these are likely to be used as mutual translations. Papageorgiou et al. (1994) proposed a generic alignment scheme invoking surface linguistic information coupled with information about possible unit delimiters depending on the level at which alignment is sought. Each unit, sentence, clause or phrase, is represented by the sum of its content part of speech (POS) tags. The results are then fed into a dynamic programming framework that computes the optimum alignment of text units. Brown (1988) uses a probabilistic measure to estimate word similarity of two languages in the context of statistically-based machine translation. Kay and Roescheisen (1993) present an algorithm for aligning bilingual texts on the basis of internal evidence. Processing is pcrfom1ed in many iterations and each new iteration uses the results of the previous one in order to calculate more accurate word and sentence correspondences. In each iteration, processing consists of calculating correspondences between sentences on the basis of their relative positions, and then calculating word correspondences on the basis of word co-occunences in related sentences. The Dice coefficient is used as the similarity measure between words of two languages in an attempt to secure the conectness of the alignment of parallel texts at sentence level. Kitamura and Matsumoto (1995) have used the same Dice coefficient to calculate the word similarity between Japanese-English parallel corpora. Single word correspondences have also been investigated by Gale and Church (1991 b) using a statistical evaluation of contingency tables. Piperidis et al. ( 1997) and Boutsis and Piperidis ( 1996) describe methods for extracting single and multi-word equivalences based on a parallel corpus statistically aligned at sentence level and employing a similarity metric along the lines of the Dice coefficient with comparable performance. Collocational conespondences have been studied by Smadja (1992) and Smadja et al. (1996) , in an attempt to find h\u2022anslation patterns for continuous and discontinuous collocations in English and French. Meaningful collocations are first extracted in the source language while their corresponding French ones are found by calculating the mutual information between instances of the English collocation and various single word candidates in English-French aligned corpora. Recent work has broadened the scope identifying correspondences between word sequences. Kupiec (1993) proposes a method for extracting translation patterns of noun phrases from English-French parallel corpora. The corpus is tagged at part-of~spcech (POS) level and then finite-state recognizers specified by regular expressions defined in tenns of POS categories detect noun phrases on either side. Probabilities of correspondences are then calculated using an iterative EM-like algorithm. Kumano and Hirakawa (1994) presuppose an ordinary bilingual dictimmy and non-parallel corpora, attempting to find bilingual conespondences in a Japanese-English setting at word, noun phrase and unknown word level. Extending previous work, Kitamura and Matsumoto (1996) apply the Dice coefficient on word sequence correspondence extraction. This paper describes a method for the automatic alignment of parallel texts at clause level. Texts are first aligned at sentence level using statistical techniques. Part-of-speech tagging takes place next annotating each word form with the appropriate part of speech. Processing in this step and the next one is monolingual, so each language side of the text is treated independently of the other. Surface syntactic analysis is performed next on the basis of regular grammars. Shallow parsing results in the recognition of clauses. Statistical processing follows taking into account different sources of information, aiming at identifying intra-sentence alignments formed by the clauses of the parallel sentences of the bitext. The method caters for alignments of type 1-0, 1-1, 1-2, 2-1, and 2-2. A first pass through the text computes occurrence and co-occunence probabilities for content words on both language sides. A probabilistic score, expressing the probability that a clause (or a pair of clauses) of the source language is h\u2022anslated into a clause (or a pair of clauses) of the target language, is computed on the basis of the previously calculated word probabilities, and a model of character lengths. Possible clause alignments are examined by a dynamic programming framework deciding on the best alignment. Avoiding combinatorial explosion requires that large sentences be channeled into a module that approximates the optimal alignment through simulated amrealing, operating in polynomial time. EM iterative training caters for the estimation of the model's parameters, given the lack of hand-aligned training material. The overview of the processing is pictured in Figure 1 . Test Corpus The cmpus used to develop and test the proposed algorithms consists of text from the HP-VUE software platform documentation set. The Greek text contains 35726 wordfomrs and the English text 28872. The number of different words is 4512 for the Greek text and 3219 for the English text. The richer mmphology of the Greek language accounts for the approximately 30% difference between these two figures. Text Handling Recognizing and labeling surface phenomena in the text is a necessary prerequisite for most Natural Language Processing (NLP) systems. In order to be able to make full use of the corpus, texts should be rendered in an appropriate fmm. To this end, parallel texts are normalized and handled. In the framework of the presented method, basic text handling is perfonned with the use of a Mu1text-like tokeniser, (Di Christo et al., 1995) . Identification of word boundaries, sentence boundaries, abbreviations etc. takes place. Following co1nn1on practice, the tokeniser makes use of a regular-expression based definition of words, coupled with downstream precompiled lists for the Greek and English language and simple heuristics. This proves to be quite successful in recognizing sentences and words effectively. Senteuce Alignment Alignment consists in establishing correspondence links between units in a bilingual text. At this stage, the method aligns input text at sentence level. Processing caters for sentence substitution (one sentence translates into one)) deletion (a sentence is not translated at all), insertion (a sentence with no equivalent in the source text The heart of the alignment scheme, employed at this stage, is a method for aligning sentences based on a simple statistical model of character lengths, (Gale and Church, 1991) . The method relies on the assumption that longer sentences in the source language tend to be translated into longer sentences in the target and vice-versa. A probabilistic score is assigned to each pair of proposed sentence pairs, based on the ratio of lengths of the sentences and the variance of this ratio. This probabilistic score is used in a dynamic programming framework in order to find the maximum likelihood alignment of sentences. Additionally, following (Brown et al., 1991) certain points of the texts can be anchored thus dividing them into smaller sections that need to be aligned. Besides anchors, paragraph markers are also_ /considered. Anchor points are specific to the text to be\u2022 aligned and they usually appear in both texts. They are divided into major and minor anchors and alignment proceeds in two steps, first aligning major anchor points and then minor anchor points, followed by sentence alignment. The alignment algorithm has been tested in the setting of a multilingual text processing system and has been reported to yield accuracy between 96% and I 00%, (Piperidis, 1995) . Part of speech tagging Both English and Greek texts are analyzed morphosyntactically. The words in the patallel sentences are tagged with their corresponding POS categories. The corpus is thus represented as a bitext of tagged mutual sentence translations where every word is accompanied by its corresponding POS tag. For Greek Tagging with part-of-speech information for Greek takes place in two steps. First, each word is endowed with all possible tags tlnough lexicon lookup, and then a disambiguation module decides on the most probable am1otation. Lexicon lookup operates on a morphological lexicon of modern Greek. It endows the words of the text with the characteristics found in the lexicon. The tagset used has been devised for the morphological annotation of Greek corpora and conforms to the guidelines set up by EAGLES and PAROLE, trying, at the same time, to capture the morphological peculiarities of the Greek language. Text produced at the output of lexicon lookup is annotated with below POS information i.e. subcategorisation information for each POS category. Each wordform recognised as noun, for example, is annotated for case, number, gender etc. Ambiguous wordfmms are endowed with all possible annotations. However, not all available mmphological information is necessary for later processing. In addition, wordforms grammatically fully characterized with below POS information are highly ambiguous. Retaining all such information would impose a heavy burden on the disambiguation process. Experimentation has proved that performance of next stages is not seriously affected by reducing the tagset. To this end, a simplified tagset has been used helping reduce ambiguous wordforms notably. In addition, words not found in the lexicon are assigned possible tags on the basis of a probabilistic model operating on word suffixes. In case \u2022of multiple tagging, a disambiguator based on trigrams and contextual rules trained on Greek texts, suggests the tag that is most likely to be the correct, (Papageorgiou, 1996) . This stage produces around 95% correct results. For English Tagging for English is based on mainstream statistical processing. A tagger implementing hidden markov model techniques is employed. The tagger has been trained on a large preannotated text collection and is then used to tag the HP-VUE test corpus. For training purposes, a set of technical texts annotated at POS level, drawn from the British National Corpus (BNC), has been used, (Burnard, 1995) . Texts classified under the field codes: \"Written: Domain: Informative: Natural and pure sciences\" and \"Written: Domain: Infotmative: Applied Science\" have been selected. The size of the text collection is ca. 5,000,000 words. Text is annotated with POS tags according to the BNC tagset (Leech, 1995) . This text collection is used to train the Acquilex HMM tagger (Elworthy, 1997) and estimate model parameters. After training, the HP-VUE corpus is tagged by application of the Viterbi algorithm. Clause recognition This stage) like the previous one, processes each language side of the text independently of the other. It aims at breaking sentences of both languages into clauses with well-defined boundaries. In order to recognise clauses, this stage takes advantage of a shallow parser equipped with granunars for Greek and English. Syntactic analysis consists of parsing via finite state automata. Under this approach, a text can be analysed syntactically on the basis of granunars containing non-recursive rules written in the form of regular expressions. Rules are numbered in order to be applied in a certain order. The grammar is translated into finitestate automata with standard techniques (Aho ct a!., 1986) and automata are connected in a pipeline in order to form a cascade, which is used to annotate text in an incremental way. Each rule (regular expression) describes a specific phenomenon and higher-order mles can be expressed on the basis of the already described ones. Rules are designed to be reliable when they arc applied using longest match) in order to avoid the need for disambiguation between different length instances of the same constituent type. A basic characteristic of this method is that parsing is deterministic and no backtracking takes place. No ambiguity is produced since each automaton takes a definite decision about a constituent's existence or non-existence. This doesn't mean that ambiguities are resolved but that they are enclosed inside syntactic chunks, whose boundaries have been recognised, although their internal structure may have not been decided. Enclosure of ambiguity helps generate only one partial parse for each sentence, since ambiguity is kept local and does not cause the production of multiple parses for the whole sentence. It should be noted that the method does not depend on the exact method adopted for clause recognision. Another system performing clause recognition could be used instead. This has also to do with the availability of the relevant linguistic processing modules. On the other hand, being aware of the complete partial parse can be ve1y useful, if one is up to extend the method to cover other types of sub-sentence alignments (e.g. alignment of np's). It is also significant that the additional processing of shallow parsing does not impose serious speed overheads since the speed of analysis is measured in tens of hundreds of words/second. Clause boundaries for each analysed sentence are channelled into the next stages of processing. No distinction is made between different clause types. A sample output of this stage is shown in Figure 2 .  In this section we present the basic translation model, which is used for the purposes of clause alignment. Let's consider two corresponding sentences of the parallel text which are translations of each other, the source sentence ~L \"\"'scil ~ci 2 ... ~cil and its tTanslation into the target language ~L = tcil tc 12 ... tcirn where sci and tci are clauses identified during the previous stage. We approximate sentence h\u2022anslation with the assumption that clauses can be tTanslated from the source into the target language in the following ways: A. 1-0 and 0-1, when a clause of the source or the target sentence has no equivalent clause in the other language. B. 1-1, when a clause of the source sentence is translated into one clause of the target sentence. C. 1-2 and 2-1, when a clause of the source is translated into two clauses of the target or two clauses of the source translate into one of the target. D. 2-2, when two clauses jointly translate into two clauses of the other language. We view each group of aligned sentences of the parallel text as a sequence of clause-beads (after sentencebeads in (Brown et al., 1991) ) where a bead accounts for a group of clauses that align with each other according to one of the above mentioned ways. A clause-alignment Ai = { ail ai2 ... a in } for a given pair i of sentences is a set of clause-beads a ti covering all clauses of the source and target sentence under the condition that each clause participates to one and only one clause-bead. Figure 3 shows a schematic example of a clausealignment between two sentences containing four and three clauses each. Making the assumption that translation of clauses in a bead is independent of clauses belonging to other beads we seek the alignment that maximises the joint distribution: (!) and assuming that Pr(n) (where n is the number of beads in the alignment) is independent of s 1 , Ti and n we get: (2) s is ignored for the rest of the analysis, since it is a multiplicative constant factor having the same value for all clause-alignments. Part b Finding the. correct alignment requires that we estimate clause-bead probabilities Pr(a;j) which express the probability for the source sentence clauses of the bead to be translated into the corresponding target sentence clauses. We consider a 1-1 bead covering the source and target clauses: scis = swisl sw 1 s 2 ... sw;.~p and (where swisp is the p 1 h word of the s 1 h clause of the i 1 h source sentence of the parallel text etc.) A first writing ofPr(aij) can be as follows: Pr(aij) = P 1 _ 1 Pr(scis, tcit) -\u2022 --~ (3) where ? 1 _ 1 is the probability of a '1-l' clause alignment. Referring to the second factor of (3), in order to approximate Pr(scis, tcit) we take into account two parameters: a) the length of the source and target clauses and b) the source language and target language words contained in ~~cis\u2022 and ~~it . We model the probability ), l(tcit) ). Under the assumption that the model used by the sentence aligner (\"Sentence Alignment\" section , (Gale and Church, 1991) ) expressing sentence alignment probabilities on the basis of character lengths r valid when applied to clause-lengths, we estimate PrV(scis) l(tcit)) with the same model. Furthermore, we approximate clauses by unordered sets focusing on content can\u2022ying words i.e. content words, which are taken to be verbs, nouns, adjectives and adverbs. Thus, we assume that content words contribute the most to the examined probability. tcit and scis are represented by the unordered sets of the content words they contain. Following that, equation ( 3 ) can be written as: (4) where sew stands for source clause content word and tcw stands for target clause content word. To approximate the third factor of Eq. ( 4 ) we assume that the content words of the source clause are independent events and the same is valid for the words of the target clause. That is: while tcw 3 and scw 3 are independent events. In this case, Prw. ( { sew 1 , scw 2 , scw 3 }, { tcw 1 , tcw 2 , tcw 3 }J ~ J Pr(tcw 1 , sew 1 ) Pr(lcw 2 , sew 2 ) Pr(lcw 3 ) Pr(scw 3 ) ( 7 ) Pr({~\u2022cwisl ,scwis2\u2022\u2022\u2022\u2022\u2022scwisv h = Pr(~cwitl , given the computation of Figure 4 . Consequently, when estimating bead probability Pr( aij) , we need to sum probabilities over aU possible word alignments Wj. This would require however to inspect an exponentiaUy large set of possible wordalignments. Thus, we would like to approximate the sum with its biggest tem1. This is not feasible, eitl1er. So, a greedy-like technique is followed, which does not guarantee to find the best word alignment but usually comes up with a big enough value to distinguish between good and not so good clause alignments. The largest wordpair probabilities are selected first while probabilities of any unmatched words are taken into account next. In order to select a pair of words for Eq. ( 7 ) two heuristic conditions must be met: 1) the occurrence frequencies of the two words should not differ more than 50%, 2) their co-occurrence frequency in the bitext should not differ more than 50% from their occurrence frequencies in the texts. In case of a non '1-1' alignment between clauses, the Prw . ( { sew!' scw 2 , scw 3 }, { lew!' tew 2 , tew 3 }J ~ J same model is used, where f;_ 1 is substituted by ~--2 , P 2 _ 1 , P 2 _ 2 , ~-o and P 0 _ 1 . We take ~-2 ~P2 _ 1 and ~-o ~ P 0 _ 1 . The distribution on character lengths is also taken to be independent of the alignment type. Model Training In order to calculate clause-alignment probabilities, given the model presented in the previous section, estimations for several model parameters should be available. At this stage, parameters are estimated on the basis of simple corpus statistics. The probability of a single word of the source or target text is taken to be: f(w) Pr(w)=--- IJ(w') w' (8) where the denominator of Eq. ( 8 ) is the sum of the frequencies of all words i.e. the lengtlr of the source or the target text in words. Conespondingly, the probability relating a word of the source text with a word of the target text is estimated by: f(sw,lw) Pr(sw, tw) ~ _ __c:.__:c__cc_:___ I f(sw' ,lw') (sw',tw') (9) For the presented application of the method, these probabilities are computed over the whole corpus. In very large texts it is adequate to estimate the probabilities in a representative large portion of the text. It would be also possible to use pre-computed probabilities from another text of the same domain, given that both texts share Prw. c{ lew 1 , tcw 2 , tew 3 }/{ sew!' scw 2 , scw 3 }J Pr( { scw 1 , scw 2 , scw 3 }J ~ J (Eq. ( 5 ), ( 6 )) Prw. (tcw 1 j{ scw 1 , scw 2 , scw 3 J Pr(sew 1 ) Pr(scw 2 ) Pr(scw 3 ) ~ Pr(lew 1 /scw 1 ) Pr(lcw 2 /scw 2 ) Pr(lcw 3 ) Pr(sew 1 ) Pr(sew 2 ) Pr(sew 3 ) ~ Pr(lcw 1 , scw 1 ) Pr(lcw 2 , sew 2 ) --\"-----~'---------=~-'~ Pr(lcw 3 ) Pr(sew 1 ) Pr(scw 2 ) Pr(scw 3 ) ~ Pr(sew 1 ) Pr(scw 2 ) Pr(tcw 1 , scw 1 ) Pr(tcw 2 , scw 2 ) Pr(tew 3 ) Pr(.s\u2022cw 3 ) Estimating ~--r, !~ __ 2 , P 2 __ 2 and P 0 . 1 rs less straightforward. Given the lack of training material, that is marked-up text aligned at clause level, no safe set of values can be computed for these parameters. To work around this, we first make an educated guess and then apply the EM (Expectation-Maximization) algorithm. The EM algorithm consists of two major steps: an expectation step followed by a maximization step. The expectation uses the current estimates of the parameters to process input data and the maximization provides next a new estimate of these parameters. These two steps iterate until convergence. EM is not guaranteed to converge to a global maximum; if many points of local convergence exist, the point where the method will convergence will depend on the initial parameter estimations. The initial parameter values we used and the estimated ones after the process converged arc displayed in the Table I . If an alignment type does not occur in the output (' 1-0' alignment in this case), the relevant probability takes a very small value (IE-4). Best Clause-Alignment Selection This stage aims at finding the best alignment between the clauses of two parallel sentences (or in the case of a non '1-1' sentence alignment e.g. '1-2', an alignment is sought between the clauses of the source sentence and the clauses of the two target sentences). Two schemes are considered, dynamic programming and simulated annealing. Dynamic programming is a generalizat~on of the greedy technique. It can be used to solve problems, whose solutions can be considered as a sequence of decisions. Usually dynamic programming is uSed to address an optimization problem, seeking the sequence of decisions giving the optimal solution. In many problems, decisions taken on the basis of local data always lead to optimal solutions; this is the case of problems solved by greedy teclmiques. On the other hand, there are problems, including alignment, for which this doesn't hold true. In this case one would have to generate all possible decision sequences and evaluate them. Dynamic programming can be used to exclude sub-optimal decision sequences so that they may not be considered. The prinM ciple of optimality governing dynamic programming is: \"Any sub-sequence of the optimal decision sequence is optimal for the sub-problem corresponding to this subsequence of decisions\". Although dynamic programming is successfully applied to sentence alignment, it comes close to its limits when dealing with sub-sentence alignments given that the assumption of the left-to-right translation made for sentence alignment, is not valid at the bellow sentence level, or in other words, the order of the clauses in the source language is not the same in the target language. To handle cases of clause-alignments involving a number of clauses in the order of ten or more, we use a simulated annealing framework to approximate the optimal alignment. Simulated annealing (Metropolis et aL, 1953) , (Kirkpatrick et aL 1983) , is a method for optimising functions depending on a large number of parameters. Annealing is a metallurgical term and the method is inspired by the controlled cooling of metals getting from the liquid to the solid state. The algorithm has been successfully applied for optimization purposes, including the approximate solution of TSP (Traveling Salesman Problem). This algorithm does not guarantee to find the best solution, but it may come up with a good approximation of it in non-exponential time. Processing starts with a random clause-alig1m1ent A. Initial temperature setting is T~45 and after each iteration it is reduced by 0.9. Each iteration is performed tlu\u2022ough 1000 steps. In each step, a random change in A is proposed and the cost function (negative logarithm of the clause-aligurnent probability) is computed. If the new aligurnent is better, the change is liE adopted, if not, it is adopted with probability P = e T , wl1ere LJE is the change in the cost function. Once the loqp is computed with no change in the configuration, or 10 iterations have been performed, the best alignment that has been found till that time is proposed. Results The method has been applied to the corpus presented in section 2. A sample output of the method is displayed hereunder. Each ,--~--~~~------------~~------- The performance has been evaluated on a text pmiion containing ca. 250 sentences and overall precision of the output has been calculated to be 85. 7%. If we exclude cases of misalignments due to errors in stages of processing preceding clause-alignment, we can calculate the precision of the last stage. In this case, precision is higher than 96%, so the error-rate introduced during clausealignment is less than 4%. In addition to the low errorrate, clause-alignment corrects some of the enors caused by the previous stages, as it is mentioned in the next section. Discussion Given the incremental and engineering approach adopted, the results obtained so far are quite encouraging. The accuracy of tl1e output lies around +85%, making the method quite reliable and suitable to be used in real world application systems. Most of the errors were introduced by the first three It is well understood that linguistic resources building is one of the important stumbling blocks in the localization/internationalization exercise. Methods approximating the automatic generation of such resources prove to be effective on a cost/time basis. Besides gains in speed and efficiency) the data driven approach improves consistency, which is an important requirement for systems operating in a multilingual setting. By adopting a data driven approach and exploiting existing linguistic processing modules, the method produces textual parallel data of high resolution which can give a competitive advantage to multilingual processes and systems, such as semiautomatic lexicon builders, machine aided translation systems and retrieval of multilingual material.",
    "abstract": "This paper describes a method for the automatic alignment of parallel texts at clause level. The method features statistical techniques coupled with shallow linguistic processing. It presupposes a parallel bilingual corpus and identifies alignments between the clauses of the source and target language sides of the corpus. Parallel texts are first statistically aligned at sentence level and then tagged with their part-of-speech categories. Regular grammars functioning on tags, recognize clauses on both sides of the parallel text. A probabilistic model is applied next, operating on the basis of word occurrence and co-occurrence probabilities and character lengths. Depending on sentence size, possible alignments arc fed into a dynamic progranuning framework or a simulated annealing system in order to find or approxim~te the best alignment. 1he method has been tested on a Small Eng~ lish-Greek corpus consisting of texts relevant to software systems and has produced promising results in terms of correctly identified clause alignments.",
    "countries": [
        "Greece"
    ],
    "languages": [
        "Greek",
        "English",
        "French"
    ],
    "numcitedby": "11",
    "year": "1998",
    "month": "June",
    "title": "Aligning Clattses in Parallel Texts"
}