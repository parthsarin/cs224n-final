{
    "article": "We introduce PreMOn (predicate model for ontologies), a linguistic resource for exposing predicate models (PropBank, NomBank,  VerbNet, and FrameNet)  and mappings between them (e.g, SemLink) as Linked Open Data. It consists of two components: (i) the PreMOn Ontology, an extension of the lemon model by the W3C Ontology-Lexica Community Group, that enables to homogeneously represent data from the various predicate models; and, (ii) the PreMOn Dataset, a collection of RDF datasets integrating various versions of the aforementioned predicate models and mapping resources. PreMOn is freely available and accessible online in different ways, including through a dedicated SPARQL endpoint. Introduction Predicate models such as PropBank (herafter, PB) (Palmer et al., 2005) , NomBank (NB) (Meyers et al., 2004) , Verb-Net (VN) (Schuler, 2005) , and FrameNet (FN) (Baker et al., 1998) provide rich descriptions of predicate semantic classes -i.e., rolesets in NB and PB, verb classes in VN, and frames in FN (e.g., \"Commerce Sell\") -and their semantic roles (e.g., \"Seller\" and \"Buyer\"), abstracting from a number of linguistic phenomena related to their realization in text. Thanks to the mappings of different predicate models, such as SemLink (Palmer, 2009) and the Predicate Matrix (Lacalle et al., 2014) , and to their integration in Semantic Role Labeling (SRL) tools, they have become central to a number of tasks such as information extraction, question answering and natural language generation. In particular, due to their laying at the syntactic-semantics interface, predicate models are increasingly used within the Semantic Web (SW) community, for knowledge extraction in tools such as NewsReader (Rospocher et al., 2016) and PIKES (Corcoglioniti et al., 2016) , or as the starting point for deriving general-domain ontologies grounded in natural language, such as FrameBase (Rouces et al., 2015) and the ESO ontology (Segers et al., 2015) derived from FN. Compared to the current situation where each predicate model has its own terminology, structure and proprietary XML format, the availability of a single RDF/OWL ontological model covering the main predicate models with their common aspects, specificities, and mappings would be beneficial to all the applications mentioned above, within and outside the SW area. Indeed, the use of SW technologies and the adoption of the Linked Open Data (LOD) paradigm have already been recognized as particularly beneficial to linguistic resources (see, e.g., Chiarcos et al. (2013) ), leading to the creation of the Linguistic Linked Open Data cloud curated by the Open Linguistic subgroup of the Open Knowledge Foundation. 1 In that context, the lemon (lexical model for ontologies) model by McCrae et al. (2012) , recently revised by the W3C Ontology Lexicon Community Group (2015) , already sets the basis for modeling the lexical entries referenced in predicate models (e.g., 1 http://linguistics.okfn.org/ the verb 'sell'), together with their links (lexical senses) to corresponding ontological concepts. Building on lemon, in this paper we present PreMOn (predicate model for ontologies), 2 a linguistic resource for exposing predicate models and mappings between them. It consists of two components: the PreMOn Ontology, an OWL 2 ontology that extends lemon for modeling semantic classes and semantic roles, the relations among them, their annotations in text, and the mappings between semantic classes and roles in different resources; and (ii), the Pre-MOn Dataset, a freely-available, interlinked RDF dataset for PB, NB, VN, FN, and the associated mapping resources, published online as Linked Open Data according to the conceptual schema defined by the PreMOn Ontology. PreMOn brings several benefits to users of predicate models: 1. ease of access and reuse of predicate model data, due to the adoption of a common RDF format, stable URIs, and LOD best practices; 2. possibility to abstract and capture the aspects common to different predicate models, while at the same time keeping track of the peculiarities of each model (using RDFS/OWL subclass/subproperty primitives); 3. possibility to apply SW technologies to predicate model data, such as automated reasoning and SPARQL querying, e.g., for retrieving the semantic classes of a lexical entry and the associated mappings; 4. possibility to combine PreMOn with other linguistic ontologies, e.g., for providing the SRL annotations of a text according to the NLP Interchange Format (NIF) (Hellmann et al., 2013) ; 5. possibility for third parties to publish and interlink their datasets with PreMOn, extending it in a decentralized way (e.g., with new mappings). The paper is structured as follows. Section 2 provides an overview of the predicate models considered in PreMOn and of related prior works in the SW. Sections 3 and 4 illustrate the PreMOn Ontology with its core concepts and specialized modules for each predicate model, while Section 5 describes the PreMOn Dataset. Section 6 discusses possible applications, while Section 7 concludes. The PreMOn Ontology -Core Module Namespace: http://premon.fbk.eu/ontology/core# Prefix: pmo The PreMOn Ontology is an extension of lemon (W3C Ontology Lexicon Community Group, 2015) for representing predicate models and their mappings. An overview of the PreMOn Ontology core module, and its relation with lemon, is shown in Figure 1 using a UML-like notation. To guide the exposition, we will also refer to Figure 2 , showing an example of instantiation of semantic classes and roles for  the predicate models here considered, as well as an example of mapping between resources from different models. Semantic Classes and Roles lemon represents lexical entries (class ontolex:LexicalEntry) with their associated lexical forms, and allows relating entries to the ontological entities they denote (classes, properties, individuals) using the ontolex:LexicalSense reified relation. Besides mapping to an ontology, which provides the extensional (formal) interpretation of lexical entries, lemon supports mapping entries to ontolex:Lexical-Concepts (subclass skos:Concept), each denoting an intensional (\u223cinformal) meaning evoked by a set of lexical entries. Example of lexical concepts are WordNet synsets, whose semantics is not formally encoded in an ontology. We extend lemon by introducing classes pmo:Semantic-Class and pmo:SemanticRole (filled in light green in Figure 1 ). pmo:SemanticClass homogeneously represents the semantic classes from the various predicate models. That is, individuals of this class correspond to rolesets in PB and NB (e.g., pm:nb10-seller.01 and pm:pb17-sell.01 10 in Figure 2 ), verb classes in VN (e.g., pm:vn32-give-13.1-1), and frames in FN (e.g., pm:fn15-commerce sell). An instance of pmo:SemanticClass typically has (via property pmo:semRole) a number of pmo:SemanticRoles, representing, from a semantic point of view, the roles the arguments of that pmo:SemanticClass can play. For instance, the triple pm:pb17-sell.01 pmo:semRole pm:pb17-sell.01-arg1 states that pm:nb10-seller.01 has the semantic role pm:nb10-seller.01-arg1. Importantly, semantic roles are defined locally to semantic classes, so VN 'agent' is represented as multiple semantic roles, one for each verb class it occurs in, and with each semantic role linked to its specific selectional restrictions (if any). Note that pmo:Se-manticClass is defined as subclass of ontolex:LexicalConcept, as we see pmo:SemanticClasses as essentially informal concepts rather than well defined concepts of a formal ontology (although an ontology can be derived from them, cf., FrameBase and ESO). Being ontolex:LexicalConcepts, pmo:SemanticClasses inherit the link to lexical entries as well as the link (via ontolex:isConceptOf) to the ontological entities formalizing them, typically event classes. Properties pmo:classRel and pmo:roleRel, and their resource-specific subproperties, are introduced to express the identify the resource and its version (e.g., NB 1.0, PB 1.7). relations between elements at each level, such as subtyping, and predicate and role inheritance (e.g., pmofn:inheritsFrom and pmofn:inheritsFromFER for FN). Additional resourcespecific classes (e.g., pmovn:ThematicRole, filled in light blue in Figure 1 ) and properties (e.g., pmovn:thematicRole) further characterize important aspects of each predicate model, like commonalities between semantic roles. Mappings Mappings between different predicate models are practically relevant but cannot be expressed using only the classes above, as they are often defined (e.g., in Sem-Link and PredicateMatrix) in terms of pmo:Semantic-Class, ontolex:LexicalEntry pairs. To model these pairs, one could reuse the notion of ontolex:LexicalSense. However, its formalization in lemon as reified relation depends on the existence of (exactly) one ontological entity for each ontolex:LexicalConcept, ontolex:LexicalEntry pair, a strong constraint that we do not necessarily need for our purposes. Therefore, we introduce the pmo:Conceptualization class (filled in light red in Figure 1 , together with other mapping related classes). Structurally, a pmo:Conceptualization can be seen as the reification of the ontolex:evokes relation between ontolex:LexicalEntry and ontolex:Lexical-Concept. Semantically, it can be seen as a very specific intensional concept (among many, in case of polysemy) evoked by a single ontolex:LexicalEntry, which can be generalized to a ontolex:LexicalConcept when multiple entries are considered but with a possible loss of information that prevents precise alignments to be represented. Mappings are explicitly represented as individuals of class pmo:Mapping, and can be seen as sets of (or nary relations between) either (i) pmo:Conceptualizations, (ii) pmo:SemanticClasses, and (iii) pmo:SemanticRoles, with role mappings anchored to conceptualization or class mappings via property pmo:semRoleMapping. Figure 2 shows an example of mapping (pm:mapping 1356) between two pmo:Conceptualizations, one from NB (pm:co-nseller-nb10-seller.01) and one from PB (pm:co-v-sell-pb17sell.01). We rely on this set-like modeling, since mappings are not necessarily represented as binary relations in predicate mapping resources: e.g., in the PredicateMatrix, each row represents the mapping of a semantic role / lexical entry pair over the different resources (e.g., 13.1-1-agent, deal in VN, sell.01-arg0, sell in PB, Commerce Sellseller, sell in FN) as well as the corresponding WordNet verb sense. Reifying the n-ary mapping relation also allows us, if needed, to further characterize each single mapping, asserting additional information such as confidence and reliability. Moreover, it is possible to further specialize mappings (e.g., to model mappings holding only in one direction, from a resource to another one, or to represent different types of relationships among the members of the mapping) by subtyping the pmo:Mapping class or the property (pmo:item) relating a pmo:Mapping to its members. Annotations Predicate models are typically complemented by examples showing concrete occurrences of semantic classes and roles in text. More generally, a text can be annotated with seman-tic classes and roles as a result of manual or automatic SRL. The PreMOn Ontology provides some common primitives (filled in light yellow in Figure 1 ), based on the NLP Interchange Format (NIF) by Hellmann et al. (2013) , which aim at properly modeling the heterogeneous annotations of a text for different predicate models. NIF introduces the general notion of nif:String to represent arbitrary text strings. nif:Context is a particular subclass of nif:String, representing a whole string of text. Any substring (itself a nif:String) has a nif:referenceContext relation to the nif:Context individual representing the whole text containing it. To specifically model the aforementioned examples complementing predicate models, we introduce pmo:Example, subclass of nif:Context, to represent the string associated with the example. The occurrence of a ontolex:LexicalEntry, pmo:SemanticClass, or pmo:SemanticRole in a nif:Context is denoted by an instance of nif:Annotation, related to the given ontolex:LexicalEntry, pmo:SemanticClass, or pmo:SemanticRole via property pmo:valueObj (the value attached to the annotation), and to the nif:Context instance via property nif:annotation. If detailed information on the specific span of text (i.e., substring) denoting the ontolex:LexicalEntry, pmo:SemanticClass, or pmo:Seman-ticRole is available (e.g., FN provides the specific offsets of lexical units, frames, and frame elements, in the example text) an additional instance of pmo:Markable, subclass of nif:String, is created and linked to the specific nif:Annotation and nif:Context via properties nif:annotation and nif:ref-erenceContext, respectively. As the same nif:Context may contain multiple nif:Annotations referring to one or more semantic classes and their corresponding roles, an additional pmo:AnnotationSet instance is created to cluster annotations from the same predicate structure. Specializing the PreMOn Ontology While the PreMOn Ontology Core Module provides an homogeneous abstraction over heterogeneous predicate models, additional ontology modules, specializing or extending the PreMOn Ontology core elements, can be defined to properly capture and model resource-specific aspects (including terminology) in a way compatible with the underlying PreMOn Ontology assumptions. We developed four ontology modules, one for each predicate model: Prop-Bank, NomBank, VerbNet, and FrameNet. An overview of the main additional classes (filled in light blue) and properties defined is shown in Figures 3, 4 , 5, and 6. PreMOn Ontology -PropBank Namespace: http://premon.fbk.eu/ontology/pb# Prefix: pmopb We define classes pmopb:Roleset and pmopb:Semantic-Role 11 as subclasses of pmo:SemanticClass and pmo:Se-manticRole, respectively. Each pmopb:SemanticRole instance is related (via property pmopb:argument) to exactly one pmopb:Argument, which is defined as the disjoint union PreMOn Ontology -NomBank Namespace: http://premon.fbk.eu/ontology/nb# Prefix: pmonb Similarly to PB, we define pmonb:Roleset and pmonb:Se-manticRole as subclasses of pmo:SemanticClass and pmo:SemanticRole, respectively. Each pmonb:Semantic-Role instance is related (via property pmonb:argument) to exactly one pmonb:Argument, which is defined as the disjoint union of two subclasses: pmonb:NumberedArgument, containing the individuals corresponding to numbered argument (e.g., Arg0, Arg1), and pmonb:Modifier, containing the individuals corresponding to modifiers (e.g., ArgM-LOC, ArgM-TMP). We also define class pmonb:Tag to capture (via property pmonb:tag) some specific annotations of markables (e.g., PRD, REF, SUPPORT) in the examples. PreMOn Ontology -VerbNet Namespace: http://premon.fbk.eu/ontology/vn# Prefix: pmovn We define classes pmovn:VerbClass and pmovn:Semantic-Role as subclasses of pmo:SemanticClass and pmo:Seman-ticRole, respectively. Class members are modeled as instances of ontolex:LexicalEntry, connected to their class via property ontolex:evokes. The VN class hierarchy is modeled via the pmovn:subclassOf property (subproperty of skos:broader), that relates a verb class (e.g., 13.1-1) with its parent class (e.g., 13.1). Given the propagation of semantic roles along the class hierarchy, we introduce property pmovn:definesSemRole to differentiate the pmovn:Se-manticRole instances defined on a class from the ones inherited from its ancestor classes. Each pmovn:Seman-ticRole instance is related (via property pmovn:thematic-Role) to exactly one pmovn:ThematicRole, which contains all the thematic roles defined in VB. These thematic roles are organized in a hierarchy, which is formalized via the skos:broader property. For instance, pmovn:agent skos:broader pmovn:actor states that pmovn:agent is more specific than pmovn:actor. VN selectional restrictions on pmovn:SemanticRoles (e.g., restricting \"theme\" to something not animate) are formalized using property pmovn:restriction and class pmovn:Restriction. 12 A verb class may have one or more pmovn:Verb-NetFrames (via property pmovn:frame, or its subproperty pmovn:definesFrame, to distinguish frames defined on the class or inherited from ancestors), which have one or more ordered 13 pmo:SynItems, modeling a syntactic construction (e.g., \"Agent V Theme [-sentential]\") shared by all members of the class, and one or more ordered semantic pmo:Preds, modeling the meaning of the event, and its participants, expressed by the verb class for that syntactic construction (e.g., \"approve(during(E), Agent, Theme)\"). pmo:SynItems are specialized according to their syntactical function (e.g., pmovn:NpSynItem for noun phrases). A pmovn:NpSynItem can point (via pmo:valueObj) to a pmovn:SemanticRole, and define, via pmovn:restriction, (i) a selectional restriction holding for the pmovn:Seman-ticRole in that frame (e.g., \"animate\"), or (ii) some other syntactic restriction (e.g., \"np to inf\"). Similarly, selectional restrictions can be modelled on pmovn:PrepSynItem (e.g., \"spatial\"). Predicates in pmovn:Pred have a type (pmovn:PredType, e.g., \"approve\") and can be further decomposed in pmovn:PredArg (e.g., \"during(E)\") of various types (e.g., pmovn:EventPredArg). Negation of a predicate is expressed by typing the corresponding instance as pmovn:NegPred, while implicit pmovn:PredArgs are typed as pmovn:ImplicitArg. PreMOn Ontology -FrameNet Namespace: http://premon.fbk.eu/ontology/fn# Prefix: pmofn We define classes pmofn:Frame and pmofn:FrameElement as subclasses of pmo:SemanticClass and pmo:Semantic-Role, respectively. pmofn:FrameElement is further specialized in four subclasses, denoting the four typologies of FN frame elements (e.g., pmofn:CoreFrameElement). Being pmo:SemanticRoles, in PreMOn Ontology frame elements are always specific to the frame where they are defined, even for extra thematic frame elements that are typically shared across frames in FN (e.g., the \"Circumstances\" extra thematic frame element corresponds to multiple individuals of type pmofn:ExtraThematicFrameElement, one for each frame where it is defined). Frame element core sets of a pmofn:Frame are represented as reified objects of type pmofn:FECoreSet, having as members some pmofn:FrameElements. Relations between pmofn:Frames are modeled using the subproperties of pmofn:frameRelation (e.g., pmofn:inheritsFrom). Similarly, mappings between pmofn:FrameElements of pmofn:Frames related via some pmofn:frameRelation are represented using frame relation-specific subproperties of pmofn:frameElementRelation (e.g., pmofn:inheritsFromFER). Within a frame, a frame element may exclude/require the presence of another frame element (pmofn:excludesFrameElement/pmofn:re-quiresFrameElement). pmofn:LexicalUnit, associating a lexical entry with a frame, is defined as subclass of pmo:Conceptualization. A pmofn:LexicalUnit may have a development status (pmofn:LUStatus) and can incorporate a pmofn:FrameElement (e.g., \"microvawe.v', besides evoking frame \"Apply heat\", also incorporates the frame element \"Heating instrument\"). Finally, pmofn:Frames, pmofn:FrameElements and pmofn:LexicalUnits can be constrained according to some semantic types, defined in pmofn:SemType, and organized in a hierarchy according to pmofn:subTypeOf relations between them. The PreMOn Dataset Namespace: http://premon.fbk.eu/resource/ Prefix: pm To populate PreMOn with content from the various resources (predicate models, mappings), we developed an open-source Java command-line tool available on PreMOn website. The tool applies pluggable, resource-specific converters to the original distribution files of each resource, instantiating the proper individuals and assertions according to the PreMOn Ontology. If available, mappings to additional resources (e.g., WordNet synsets, OntoNotes groupings) are also extracted. OWL 2 RL inference, statistics extraction and some cross-resource cleanup (e.g., for dropping inconsistent mappings) are applied to extracted triples, leveraging RDFpro (Corcoglioniti et al., 2015) for RDF processing. The resulting triples are placed in distinct named graphs identified by the resource name and version (e.g., pm:fn15 for FN v1.5), so to track provenance at a coarse-grained level and allow querying only data of specific predicate models using SPARQL clauses FROM and FROM NAMED. Examples, and related triples, are placed in further separated named graphs (e.g., pm:fn15-ex), and their extraction can be enabled/disabled at runtime. Specific conversion strategies had to be implemented for each predicate model. E.g., in VN, semantic roles (with selectional constraints) and frames have to be propagated from a class to its subclasses, unless redefined in the latter. In PB (and NB), the instantiation of pmopb:Semantic-Roles requires creating an individual for each pmopb:Roleset, pmopb:Argument pair, as no information is provided on which arguments a predicate may have (besides explicit occurrence in frame files, in which case semantic role attributes pmopb:core/pmonb:core are set to \"true\"). We applied the conversion suite on a large collection of resources, producing a comprehensive dataset, namely the PreMOn Dataset, containing: PB v1.7 (pb17), PB v2.1.5 released with OntoNotes v5 (pb215), NB v1.0 (nb10), VN v3.2 (vn32), FN v1.5 (fn15), FN v1.6 (16), and SemLink 1.2.2c (sl122c). The PreMOn Dataset contains the mappings between semantic classes and roles provided by each predicate model and SemLink, as well as the mappings between VN classes and lexical senses in WordNet 3.1 (wn31) and OntoNotes 5 groupings. Table 2 reports the number of individuals (e.g., of pmo:SemanticClasses), relations (e.g., pmo:classRel), and triples for the considered predicate models and their versions. Table 3 reports the numbers of mappings, which may be lower than the ones in the original resources as we drop mappings involving nonexisting semantic classes, roles, or conceptualizations (e.g., because removed/reorganized in the newer versions of the resources, released after the mapping was defined). All the datasets generated (as well as the PreMOn Ontology) are documented and published online as Linked Open Data on PreMOn website. Data can be accessed in three ways: URI dereferencing with content negotiation (RDF and HTML formats supported); SPARQL querying on our endpoint (see Figure 7 ); and bulk dataset download. Leveraging PreMOn By adopting an homogeneous schema for heterogeneous predicate models, PreMOn facilitates the joint querying of content from different resources. Figure 7 shows an example of query, run through the SPARQL endpoint on Pre-MOn website, that looks for lexical entries (?lexEnt) evoking semantic classes in different resources (?resource), for which no mappings are defined. Results are ordered by decreasing number of resources defining the lexical entry. This query hints a way to exploit PreMOn to investigate, and possibly extend, mappings between predicate models. Other interesting queries can be answered given PreMOn data (see website) as, e.g., to map a semantic class or role (for a lexical entry) from a resource to another, possibly navigating chains of mappings via SPARQL property paths, or, together with WordNet RDF data, to find synonymous lexical entries that can extend a resource lexicon. The use of a single RDF model for multiple resources, amenable to the use of reasoning, querying and other SW data processing techniques, opens up new opportunities for analyzing, validating, and possibly cleaning up predicate model data. We already implemented a simple technique for identifying inconsistent mappings, which we currently remove, and we plan to further pursue this direction. By exploiting PreMOn data and ontology, NLP and knowledge extraction tools can now express SRL annotations in RDF in a way compatible with the increasingly used NIF. Indeed, the PreMOn formalization of the usage examples released with predicate models shows a concrete case of SRL annotation data exposed according to NIF principles. We are currently working on adapting the PIKES system to produce annotation of SRL according to this formalization. By extending lemon, PreMOn endorses the latter's goal to provide proper linguistic grounding for ontologies. In particular, PreMOn enables to ground event and frame ontologies, such as FrameBase and ESO, on a proper representation of the linguistic information for predicates, thus supporting the development of a comprehensive catalogue, from the linguistic to the knowledge level, of event and event participant types. Conclusions PreMOn is both an ontology extending lemon for representing predicate models and their mappings, and a LOD dataset based on that ontology that contains interlinked predicate data for several predicate models. Future works will leverage the possibility to query and reason on the PreMOn Dataset and will focus on: (i) extending the mappings between predicate models, integrating data from the Predicate Matrix; (ii) mapping semantic classes and roles to concepts in the FrameBase and ESO ontologies; and (iii) mapping selectional constraints from VN and FN, as well as from works such as (Bryl et al., 2012) , to a Acknowledgements Partially funded by the European Union's FP7 via the NewsReader Project (ICT-316404).",
    "funding": {
        "defense": 0.0,
        "corporate": 0.0,
        "research agency": 1.0,
        "foundation": 0.0,
        "none": 0.0
    },
    "reasoning": "Reasoning: The article acknowledges partial funding from the European Union's FP7 via the NewsReader Project (ICT-316404), which is a research program funded by the European Union, categorizing it as a research agency. There is no mention of funding from defense, corporate entities, foundations, or other sources not listed.",
    "abstract": "We introduce PreMOn (predicate model for ontologies), a linguistic resource for exposing predicate models (PropBank, NomBank,  VerbNet, and FrameNet)  and mappings between them (e.g, SemLink) as Linked Open Data. It consists of two components: (i) the PreMOn Ontology, an extension of the lemon model by the W3C Ontology-Lexica Community Group, that enables to homogeneously represent data from the various predicate models; and, (ii) the PreMOn Dataset, a collection of RDF datasets integrating various versions of the aforementioned predicate models and mapping resources. PreMOn is freely available and accessible online in different ways, including through a dedicated SPARQL endpoint.",
    "countries": [
        "Italy",
        "Europe"
    ],
    "languages": [],
    "numcitedby": 15,
    "year": 2016,
    "month": "May",
    "title": "{P}re{MO}n: a Lemon Extension for Exposing Predicate Models as Linked Data"
}