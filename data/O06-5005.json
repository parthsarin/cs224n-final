{
    "article": "A pragmatic Chinese word segmentation approach is presented in this paper based on mixing language models. Chinese word segmentation is composed of several hard sub-tasks, which usually encounter different difficulties. The authors apply the corresponding language model to solve each special sub-task, so as to take advantage of each model. First, a class-based trigram is adopted in basic word segmentation, which applies the Absolute Discount Smoothing algorithm to overcome data sparseness. The Maximum Entropy Model (ME) is also used to identify Named Entities. Second, the authors propose the application of rough sets and average mutual information, etc. to extract special features. Finally, some features are extended through the combination of the word cluster and the thesaurus. The authors' system participated in the Second International Chinese Word Segmentation Bakeoff, and achieved 96.7 and 97.2 in F-measure in the PKU and MSRA open tests, respectively. Introduction The word is a logical semantic and syntactic unit in natural language. Unlike English, there is no delimiter to mark word boundaries in Chinese language, so, in most Chinese NLP tasks, word segmentation is the foundational task which transforms the Chinese character string into a word sequence. It is a prerequisite to POS tagging, parser or further applications, such as Information Extraction, and the Question Answer system. Word segmentation has attracted long-term attention in the research community for more than two decades. Various methods have been proposed, which fall into two main categories. The first category is made up of rule-based approaches that make use of linguistic knowledge. Cheng [1999] and Liang [1993] described Maximum Forward Match and Maximum Backward Match segmentation. Hockenmaier [1998] and Palmer [1997] used transformation-based error-driven learning. Wu [1998] combined segmentation with a parser and word segmentation became a by-product of the sentence parser. The second category is made up of statistical methods that make use of machine learning algorithms and training on corpus. The typical language model is n-gram [Gao 2002] . Zhang [2003] used the Hierarchical Hidden Markov Model (HMM). In addition, there are some other machine learning methods, such as EM [Peng and Schuurmans 2001] , and the channel noise model [Gao 2003 ]. Sproat [1996] used the WFST method. At present, many state-of-the-art systems use hybrid approaches. Gao [2004] proposed a unified method via the class-based model, and Zhang [2003] presented a unified approach using the Hierarchical Hidden Markov Model. Xue [2003] used Maximum Entropy. Peng [2004] used the Conditional Random Fields model. Though many methods have been proposed and many improvements have been achieved, as a challenge task, word segmentation is not well-performed. The disambiguation and the out-of-vocabulary (OOV) identification are the main bottlenecks. Due to Zipf's Law, the sparse data problem is rarely avoided, while this problem brings great difficulties in improving the performance of the disambiguation and OOV identification. A meaningful direction for exploration to overcome the sparse data problem is to collect more linguistic knowledge or features and incorporate them into the processing systems. In this paper, the authors propose to solve the Chinese word segmentation task based on mixing models. The \"No Free Lunch Theorem\" and \"Ugly Duckling Theorem\" in Machine Learning theory have indicated that domain knowledge is essential for improving the processing performance. For this reason, different language models will be applied to solve each special sub-task, which is classified according to its linguistic phenomenon and the Natural Language Processing (NLP) technology used in the word segmentation. Another consideration is the pragmatic attribution, e.g. some successive processing may require different kinds of balance between precision and efficiency. So, this approach is a pragmatic one, which may incorporate several delicate processing modules, some of which can improve precision by introducing complicated models and utilizing more linguistic knowledge. However, this does result in a decrease in efficiency. Based on the assumption that more delicate linguistic knowledge or some fine linguistic statistical phenomenon can bring information gain to the segmentation task, the authors propose to apply Rough Set Theory and Average Mutual Information, etc. to extract complicated and long distance features. and the authors will also explore combining the word cluster and the thesaurus to extend the features so as to overcome the sparse data problem. This system participated in the Second International Chinese Word Segmentation Bakeoff (SIGHAN 2005) , and a simplified version participated in the SIGHAN 2006. Section 2 describes the structure of the system. Section 3 describes in detail Named Entity Recognition, which is one of the difficult tasks in word segmentation. Section 4 presents experimental results obtained with the authors' system. Finally, some conclusions will be drawn and direction for future work will be given in Section 5. System Description All words in this system are categorized into five types: Lexicon words (LW), Factoid words (FT), Morphological derived words (MDW), Named entities (NE), and New words (NW). Table 1 shows the tag, description, and some examples for each word type. To the sentence \"\u540c\u5b66\u4eec\u4e0b\u5348\u4e24\u70b9\u4e09\u5341\u5206\u5230\u5b59\u6842\u5e73\u5bb6\u505a\u5ba2\" (Some students visit Sun Gui-Ping in his home at 2:30 p.m.), the segmentation result is \"{\u540c\u5b66\u4eec/[MR_Suffix]} {\u4e0b\u5348 \u4e24\u70b9\u4e09\u5341\u5206/[TIME]} {\u5230} {\u5b59\u6842\u5e73/[PER]} {\u5bb6} {\u505a\u5ba2}\". where the word \"\u540c\u5b66\u4eec /[MR_Suffix]\" is a morphologically derived word, and \"\u4e0b\u5348\u4e24\u70b9\u4e09\u5341\u5206/[TIME]\" is a factoid word, all of which can be detected by Segmentation module while \"\u5b59\u6842\u5e73/[PER]\" is a named entity, and detected in NE Recognition module. Figure 1 shows the structure of this system. The input character sequence is converted into one or several sentences, which is the basic dealing unit. The internal encoding is UNICODE, and the \"Code Convert\" module is used to convert the permitted encoding, such as GB2312 and BIG5, into UNICODE. \"Basic Segmentation\" is used to deal with the LW, FT, MDW words, and \"Named Entity Recognition\" is used to detect NW words. The authors adopt the New Word Detection algorithm to detect suffix-based new words. The \"Disambiguation\" module is performed to classify complicated ambiguous words, and all the above results are connected to the final result, namely \"word sequence\", which is denoted by XML format. The sequence of each applied component is decided by the performance of the system. In the following part of this section, the authors will detail the basic theory and the implementation of the system. Trigram and Smoothing Algorithm The authors apply the Trigram model to the word segmentation task [Jiang 2005; Jiang 2007 ], and make use of the Absolute Discount Smoothing algorithm to overcome the sparse data problem. The Trigram model is used to convert the sentence into a word sequence. Let w = w 1 w 2 \u2026w n be a word sequence, then the most likely word sequence w* in Trigram is: 1 2 2 1 1 * argmax ( | ) n n i i i i w w w P w w w \u2212 \u2212 = = \u220f w , (1) where let P(w 0 |w -2 w -1 ) be P(w 0 ) and let P(w 1 |w -1 w 0 ) be P(w 1 |w 0 ), and w i represents LW or a type of FT or MDW. In order to search for the best segmentation way, all the word candidates are filled into the word lattice [Jiang 2006B ], as shown in Figure 2 , and the Viterbi algorithm is used to search for the best word segmentation path over the built word lattice. Figure 2. The class-based word lattice in the segmentation task FT and MDW need to be detected when constructing a word lattice (detailed in section 2.2). The data structure of the lexicon can affect the efficiency of word segmentation, so \u5468\uf98e 1/[Number] \u7eaa\uf9a3 5 \u6708 12 \u65e5/[Date] 5 \u6708 1 2 \u65e5 \u7eaa \uf9a3 1 \u5468 \uf98e \u4e8e lexicon words are represented as a set of TRIEs, which are tree-like structures. Words starting with the same character are represented as a TRIE, where the root represents the first Chinese character, and the children of the root represent the second character, and so on (detailed in section 2.3). When searching a word lattice, there is a zero-probability phenomenon due to the sparse data problem. For instance, if there is no co-occurrence pair \"\u6211\u4eec/\u5403/\u9999\u8549\"(we eat bananas) in the training corpus, then P(\u9999\u8549|\u6211\u4eec\uff0c\u5403) = 0. According to formula (1), the probability of the whole candidate path, which contains \"\u6211\u4eec/\u5403/\u9999\u8549\", is zero as a result of the local zero probability. In order to overcome the sparse data problem, this system has applied the Absolute Discounting Smoothing algorithm [Chen 1999 ]. 1 1 1 1 1 ( ) |{ : ( ) 0 }| i i i n i i n i N w w c w w \u2212 \u2212 + \u2212 + \u2212 + \u2022 = > (2) The notation N 1+ is meant to evoke the number of words that have one or more counts, and the \u2022 is meant to evoke a free variable that is summed over. The function () c represents the count of one word or the co-occurrence count of multi-words. In this case, the smoothing probability can be calculated by the Equation 3 . 1 1 1 1 2 1 max{ ( ) , 0} ( | ) (1 ) ( | ) ( ) i i i i i n i i n i i n i i n w c w D p w w p w w c w \u03bb \u2212 \u2212 \u2212 + \u2212 + \u2212 + \u2212 + \u2212 = +\u2212 \u2211 (3) where 1 1 1 1 1 ( ) ( ) i i i n i i n w D N w c w \u03bb \u2212 + \u2212 + \u2212 + \u239b \u239e \u239c \u239f \u2212 = \u2022 \u239c \u239f \u239d \u23a0 \u2211 (4) In this trigram model, the maximum n may be 3. A fixed discount D (0 \u2264 D \u2264 1) can be set through the deleted estimation on the training data. They arrive at the estimate 1 1 2 2 n D n n = + (5) where n 1 and n 2 are the total number of n-grams with exactly one and two counts, respectively [Jiang 2006B; Jiang 2007] . After basic segmentation, some complicated ambiguous segmentation can be further disambiguated. In the Trigram model, only the previous two words are considered as context features, while in disambiguation processing (detailed in section 2.4), one can use the Maximum Entropy Model-fused features [Jiang 2006A ] or a rule-based method. Factoid and Morphological Words As all of the Factoid words can be represented as regular expressions, the detection of factoid words can be achieved by Finite State Automaton (FSA).The categories of factoid words, which can be detected [Jiang 2006B; Jiang 2006D] by this system, are shown in Table 2 . Deterministic FSA (DFA) is efficient because a unique \"next state\" is determined when given an input symbol and the current state. However, it is common for a linguist to write rules, which can be represented directly as a non-deterministic FSA (NFA), i.e. which allow several \"next states\" to follow a given input and state. Since every NFA has an equivalent DFA, an FT rule compiler was build to convert all the FT generative rules into a DFA [Jiang 2007 ]. The rule description is in Table 3 . // define day <month> -> <integer>\u6708; Table 3. The demonstration of partial // define month <year> -> <digit><integer>\uf98e; // define year <date> ::= <year><month><day>; // define date In order to provide a kind of convenient and powerful description ability, some meta descriptions are assigned to the meta language. Permitted meta rules: <Non-terminator>, terminator, {Loop block}, {Loop block+}, {Loop block*}, [Range block] (e.g. [a..z], [\"a\"..\"z\"]), |, (Optional block), (Optional block +), (Optional block *). Transferred meaning : if the token in the meta rule is the terminator, one needs to transfer its meaning, so one can use double quotation marks to bracket the terminator when it present ambiguity. e.g. \"(\", \"|\", \")\". Rule type: \"->\" is a temporary generative rule, and \"::=\" is a real generative rule or a detected rule. This method makes the rule easily written. The authors built an FT rule compiler to convert all the FT generative rules into a DFA. Obviously, this method makes the system easy to be transferred into a different word segmentation definition, such as from PKU to MSRA. In fact, the authors have used it in SIGHAN 2005 and SIGHAN 2006 . Correspondingly, the DFA is represented by the matrix [Jiang 2007 ], and a run API is provided to make this method easily used. FT detection is important in building the word lattice in word segmentation and also important in the POS tagging task. The proposed system tries to deal with five main categories of morphologically derived words in real application, the same as Wu [2003] and Gao [2004] : 1) Affixation : \uf934\u5e08\u4eec (teachers), \u670b\u53cb\u4eec(friends); 2) Reduplication: \u9ad8\u9ad8\u5174\u5174(happily); 3) Splitting:\u73a9\u4f1a\u7403(play ball for a while)\uff0c\u6d17\uf9ba\u6fa1(already wash), \u5403\uf9ba\u996d(already ate); 4) Merging: \"\u8fdb\u51fa\u53e3\" comes from \"\u8fdb\u53e3\"(importation)and \"\u51fa\u53e3\"(exportation); 5) Head Particle: \"\u8d70\u51fa\u53bb\"comes from \"\u8d70\"(walk) and \"\u51fa\u53bb\"(out). The authors collate the possible MDW into a morphological dictionary from a large corpus, according to the morphological categories mentioned above. Then, some manual selections are needed to select fitting MDW words. As the segmentation specifications of all kinds of corpora are usually different, one needs to collect the corresponding MDW words. The Data Structure of Lexicon The data structure of a lexicon affects the efficiency of word segmentation, as the word candidate in the word lattice is generated through searching the lexicon. When given a sentence string, the candidate comes from matching the substring (starting from the current Chinese character), and judging whether this substring exists in the lexicon. The authors represent lexicon words as a set of TRIEs, which is a tree-like structure. Words starting with the same character are represented as a TRIE, where the root represents the first Chinese character, and the children of the root represent the second characters, and so on, as shown in Figure 3 . The lexical word starts from the \"Start state\", and ends in the \"End state\". When matching the input sentence and generating the word candidate in the word lattice, each time \"End State\" is passed, a word candidate is formed and the properties of the current word represented in the \"End State\" are filled into word lattice. Since each Chinese character in the input sentence needs to match the word candidate, the authors build many TRIEs, as shown in Figure 3 , to form a lexicon. The example in Figure 3 , \"\u793e\u4f1a\u4e3b\u4e49\" (socialism), is a word, and this tree is used to match the candidate from the start to the end in the sentence. If one constructs a word lattice in the opposite direction, the tree needs to be built correspondingly, e.g. \"\u4e49\u4e3b\u4f1a\u793e\". This data structure can improve speed in generating the word lattice. The Disambiguation It is necessary to effectively exploit the context in the disambiguation process. The authors have proposed using rough sets to extract complicated features and long distance features for disambiguation, which has been reported in previous work [Jiang 2006A ]. In that paper, the authors proposed introducing a variable precision Rough Set in feature extraction, in order to acquire a balance of features in disambiguation processing, along with attempting to process complicated and consecutive ambiguity segmentation in the paper. In this paper, the ambiguity segmentations come from the error-total results after evaluating the system. In Rough Set theory, knowledge is represented via relational tables. An Information System can be defined as follows: ( , , , ) a a a A I U A V f \u2208 = , where U is a non-empty set of objects; A is a non-empty set of attribute a 's; for each attribute a A \u2208 , there is an attribute value a V set and an information function : a a f U V \u2192 . An equivalence \u03b8 on set U is called an indiscernible relation, and lower approximation for an object set X U \u2286 is defined as { } : X x x X \u03b8 \u03b8 \u03b8 = \u2286 . However, this formula is too strict to fit the requirements of Natural Language Processing. For this reason, the concept of \u03b1 -approximation is provided: | | ( ) : | | x X X x x \u03b8 \u03b8 \u03b1 \u03b8 \u03b1 \u03b8 \u23a7 \u23ab = \u2265 \u23a8 \u23ac \u23a9 \u23ad \u2229 \u222a , where \u03b1 is an external parameter [Jiang 2006A ]. When extracting features, \u03b1 -Approximation will probably cause unbalanced support, since each segmentation of the ambiguities possibly has disproportionate distribution. In order to let all the features that were added in provide more evidence in guiding toward the correct { } ( ) , , | ( ) i n t tn d d R r G r X \u03b8 \u03b1 = \u2208 \u2208 , where 1 In order to make effective use of contextual knowledge, the authors adopt the Maximum Entropy model (ME), which is a conditional probabilistic model, and relax the feature independent assumption. Disambiguation is regarded as a classifying problem in ambiguous words by the Maximum Entropy model, which is defined over H\u00d7T in segmentation disambiguation, where H is the set of possible contexts around the target word that will be tagged, and T is the set of allowable tags. Then, the model's conditional probability is defined as: f n A = \u2212 , [1, ] i K \u2208 and , t n G represents generalized LIT. In ' ( , ) ( | ) ( , ') t T p h t p t h p h t \u2208 = \u2211 (6) where, ( , ) 1 ( , ) j k f h t j j p h t \u03c0\u00b5 \u03b1 = = \u220f (7) It has been pointed out that two kinds of ambiguities were dealt with. One is the simple two categories problem, such as \"\u4ece/\u5c0f\u5b66\"(from elementary school) and \"\u4ece\u5c0f/\u5b66\"(study since youth), where the tags are 0 and 1; here 0 represents the first segmentation and 1 represents the second. H includes the near context and long distance context. The former is comprised of two words around the target word, and the latter features can be obtained by Average Mutual Information, Information Gain, etc. In fact, a rough statistical result showed that the \"one segmentation error\" occupied more than 90% of all errors when not considering the errors caused by Named Entity Recognition. Here, \"one segmentation error\" means that the segmentations surrounding this segmentation error are correct. So, the authors focus on \"one segmentation error\", which may be seen in two types of Chinese segmentation ambiguities: overlapping ambiguity and combining ambiguity. Rough rule features are added in the ME model as a new kind of feature: to the tag of ambiguous word. (More details were reported in the paper \" [Jiang 2006A ]\".) The Suffix Based New Word Detection New word (NW) in this system refers to the out-of-vocabulary word that isn't an FT word, MDW word or NE word. The authors do not try to detect all the NW words, since the precision is not satisfactory based on the existing methods in some applications. On the other hand, in some applications, it is meaningful to recognize some special new words. For instance, \"\u666f\u89c2+\u706f\" (sightseeing light), \"\u6d77\u98ce+\u724c\" (Sea Breeze brand). Since some prefixes or some suffixes are paid attention to by this system, such as \"\u73b0\u4ee3 + \u5316\"(modernization), \"x + \u5f0f\"(x + way), \"x + \u706f\"(x + light), the authors propose to apply a variance algorithm to acquire the prefix or suffix candidate, leaving some minor manual selections possibly required. Hereafter, this paper takes the suffix as an instance, and collects the new words, e.g. \"\u65e5\u5149+\u706f\" (sunlight), \"\u9713\u8679+\u706f\" (neon light), \"\u666f\u89c2+\u706f\" (sightseeing light), etc. Table 4 illustrates the method. Table 4. The variance method to obtain the suffix S 1 S 2 \u2026 S m W 1 c 11 c 21 \u2026 S m1 W 2 c 12 c 22 \u2026 S m2 \u2026. \u2026 \u2026 \u2026 \u2026 W n c 1n c 2n \u2026 S mn Use S 1 ..S m to represent m candidate suffixes, W 1 ..W n represent n remained word with the suffix being razed. e.g. S 1 is \"\u706f\" (light), then W 1 represents \"\u666f\u89c2\" (sightseeing), W 1 S 1 is the W 1 +S 1 =\"\u666f\u89c2\u706f\" (sightseeing light). Now, suppose C xy =Count(S x ,W y ) 2 , and N xy is the existence of a co-occurring pair (S x ,W y ) 3 , then, one gets the following formula: m x x i i 1 CV(S ) = N = \u2211 , m x x i i 1 Sum(S )= C = \u2211 , avg(S x )= Sum(S x )/CV(S x ), p xi =C xi /Sum(S x ),V xi =p xi *(C xi -avg(S x )) *(C xi -avg(S x )) So, the variance V (S x )= m xi i 1 V = \u2211 . Besides the variance, one also needs to consider two other factors: (1) the occurrence count in the corpus; (2) the type count that this suffix has constructed words in the lexicon. By considering the above two factors in Sighan2005 evaluation [Jiang 2005 ], the researchers selected 25 new word suffixes, e.g. \u5236 (method), \u724c(brand), \u578b (type)\u3001\u5f0f (way). These suffixes also seem to be useful in the Information Retrieval task. The detection process adopts the Local Maximum Entropy Model, and this process is similar to the NER module [Jiang 2007 ]. Named Entity Recognition Named Entity Recognition (NER) is one of the common message understanding tasks. The objective is to identify and categorize all members of certain categories of \"proper names\". In MUC-7, there are seven categories: person, organization, location, date, time, percentage, and monetary amount. Named Entities (NE) are broadly distributed in original texts from many domains. In this work, the authors only focus on those more difficult, yet commonly used categories: PER, LOC and ORG. Other NE, such as times and quantities can be recognized simply via Finite State Automata (Section 2.2), and do not need to be aided by a disambiguation algorithm (Section 2.4). The extensive evaluation of NER systems in recent years (such as CoNLL-2002 and CoNLL-2003) indicates the best statistical systems are typically achieved by using a linear (or log-linear) classification algorithm, such as the Maximum Entropy model, together with a vast amount of carefully designed linguistic features. This still seems true at present in terms of statistics based methods. In this section, the authors adopt the ME model, which is a linear (or log-linear) classification, to identify the Named Entities, and the focus will be on the utilization of the features [Jiang 2006C ]. In addition, the authors propose to build double-layer fixing models to detect the Named Entities, which has also been reported in another paper [Jiang 2007 ]. The authors use w i (i=0,1,\u2026n) to denote the input sequence, then every token w i should be assigned a tag t i . B-I-O encoding, e.g., B-CPN, I-CPN as the beginning of Chinese person's name and the continued part of person's name, respectively, is adopted. Furthermore, in order to improve the ability of describing the rich tagging knowledge, part of the role tags [Zhang 2003 ] is appended, including the Named Entity prefix, suffix and infix. As there are distinct differences between a Chinese person's name and the translation of the person's name in terms of the person construction, the person name is divided into Chinese Person Name (CPN) and the Translation Person Name (FPN). In addition, the authors do not distinguish the type of infix, so the tag number for NER in this system is: 4 * 4 + 1 (O) + 1 (INFIX) = 18. The Context Features The \"Ugly Duckling Theorem\" has denoted that there is no generic feature extraction method suitable for all kinds of tasks. The basic feature template is shown in Table 5 . Table 5. Feature templates for Named Entity Recognition Type Feature Template one order feature w i-2 , w i-1 , w i , w i+1 , w i+2 two order feature w i-1:i , w i:i+1 NER tag feature t i-1 In addition, in order to solve the unstable feature collection problem caused by having no delimiters to separate Chinese words, inspired by the term extraction in text classification, the authors construct a novel feature template of \"word->tag\" to extract the trigger features, which have a flexible distance between the two units [Jiang 2006C ]. Mutual Information (MI) measures the interdependence between a trigger word and a NE type, being defined as: P(W C) MI(W, C) log P(W) P(C) \u039b = \u00d7 (9) where P(W) represents the probability of the trigger word, and P(C) is the probability of the corresponding NE category. However, this method does not consider the influence of lacking one point. In contrast, average mutual information (AMI) is defined as: . However, MI is only a point in the whole set of distributions. Let m be the number of the possible categories count, the average mutual information is m avg i i i 1 AMI (W) P(C ) AMI(W, C ) = = \u00d7 \u2211 (12) or another optional formula adopted in this paper: m max i 1 i AMI (W) MAX AMI(W, C ) = = (13) The authors select the top triggers with higher AMI value, and acquire the trigger words. The Entity Features Besides context features, entity features are also very important in the NER task, such as the suffix of Location or Organization. The authors performed statistical analysis of foreign resources, including the corpora and the collected entity name on the Internet. The authors built 8 kinds of dictionaries: 6 gives several kinds of resource dictionaries used in this system. Take the \"Suffix of ORG\" as an example, the suffix \"\u5c40\", \"\u7ec4\u7ec7\" is a good hint to detect the Organization Name, so the authors collected them into a \"Suffix of ORG\" dictionary. When used in the Maximum Entropy Model, this dictionary is used to judge the existing cases of the specified context feature. The Feature Extension Feature extension is used to overcome the sparse data problem and to increase robustness. In addition, semantic and pragmatic knowledge is useful in language processing, e.g., if one knows \"\u6559\u6388\" (professor) is a good hint to label a person's name, the similar words {\uf934\u5e08 teacher), \u52a9\u6559(assistant), \u8bb2\u5e08(lecturer)}, should have the same effect. So, one can build a semantic class by combining word clusters and using a thesaurus. A vector for word w is derived from the close neighbors of w in the corpus. Close neighbors are all words that co-occur with w in a sentence or a larger context. The entry for word v in the vector for w records the number of times that word v occurs close to w in the corpus. The authors refer this vector space to as Word Space. Figure 4 gives a schematic example of two words being represented in a two-dimensional space. This vector representation captures the typical topic or subject matter of a word. By looking at the amount of overlap between two vectors, one can roughly determine how closely they are related semantically. This is because related meanings are often expressed by similar sets of words. Semantically related words will, therefore, co-occur with similar neighbors and their vectors will have considerable overlap. Figure 4. A demonstration of word vectors The authors combine the basic semantic word in a thesaurus --HOWNET2005 --with the TF-IDF algorithm [Zhao 2005B ], and use a frequency cutoff to select the 2000 words to serve as the dimensions of Word Space. Compared with the traditional TF-IDF method, this method increases the taxonomical information, so this method can give a better measure of the word similarity. After constructing word vectors, the similarity can be measured by the cosine between two vectors. The cosine is equivalent to the normalized correlation coefficient: 1 2 2 1 1 ( , ) N i i i N N i i i i v w corr v w v w = = = = \u2211 \u2211 \u2211 (14) The word cluster algorithm in the word vectors is used to measure the similarity by totaling the pragmatic knowledge from the corpora. Evaluation and Discussion The authors evaluated the system with two kinds of corpora: 1) The corpora in the International Chinese Word Segmentation Bakeoff; 2) The prior six-month corpora of Peoples' Daily (China) in 1998, which came from Peking University, and have been annotated with lexical tags, including word segmentation, POS tagging, and Named Entity Recognition tags. The International Chinese Word Segmentation Bakeoff This system participated in the Second International Chinese Word Segmentation Bakeoff (SIGHAN-2005) held in 2005, and also participated in SIGHAN-2006. The performance of ELUS in the SIGHAN-2005 bakeoff is presented in Table 7 and  Table 8 respectively This system has good performance in terms of F-measure in the simplified Chinese open test, including the PKU and MSR open tests. In addition, its In-vocabulary word (IV, namely, Lexical words) identification performance is remarkable, ranging from 97.7% to 99.1%, standing at the top or near the top in all the tests in which it has participated. This good performance in the R iv is due to the class-based Trigram, Absolute Discount Smoothing and Word Disambiguation module with the rough rule features. In this bakeoff, the Name Entity Recognition is a two layer mixing approach, which is reported in detail in a previous paper [Jiang 2007 ]. The Maximum Entropy Model in the mixing method is similar to that found in Section 3. The performance of this system in the SIGHAN-2006 bakeoff is presented in Table 9 . The system has good performance in terms of R iv measure. The R iv measure in a closed test and in an open test was 99.1% and 98.9%, respectively. This good performance is due to a class-based Trigram with the Absolute Smoothing and Word Disambiguation algorithm. In this system, the following reasons illustrate why the open test had better performance than the closed test: (1) Named Entity Recognition module is added into the open test system. And Named Entities, including PER, LOC, ORG, occupy the most of the out-of-vocabulary words. (2) The system of closed test can only use the dictionary that is collected from the given training corpus, while the system of open test can use a better dictionary, which includes the words that exist in MSRA training corpus in SIGHAN-2005. As is known, the dictionary is one of the important factors that affects the performance, because the LW candidates in the word lattice are generated from the dictionary. As for the dictionary, the authors compare the two collections in SIGHAN-2005 and SIGHAN2006, and in evaluating the SIGHAN-2005 MSRA closed test. There are less training sentences in SIGHAN-2006 . As a result, there is at least a 1.2% performance decrease. So, this result indicates that the dictionary can have an important impact in a system. The Detailed Evaluation of the System In this section, some detailed evaluation results are presented. The authors mainly focus on two difficult sub-tasks in the word segmentation task, namely disambiguation and Named Entity Recognition. The measurements in the following experiments include: the precision P = the right count / the model count, the recall rate R = the right count / the corpus count, and F-measure = (2 * P * R) / (P + R). The authors firstly evaluate the disambiguation performance. Training was done with the preceding five month's Corpus of the People's Daily Newspaper, 1998, including 664,805 sentences, and the test corpus was the sixth month corpus, including 136,647 sentences. The authors applied the Rough Set (RS) theory to extract the rough rule features, and fused this theory into the Maximum Entropy Model. The basic feature templates are the w i-2 , w i-1 , w i , w i+1 , w i+2 , furthermore, the rough rule features were fused into the ME disambiguation model [Jiang 2006A ], the results are shown in Table 10 . Table 10 demonstrates that RS model may achieve improvement over the baseline ME model. There are at least two main advantages in the proposed method: 1) As a conditional probabilistic model, ME can be fused to more effective features, which relaxes the features independent assumption that is suffered from by the N-Gram model; 2) The authors apply the rough set theory to extract complicated and long distance features. Due to how more effective features are utilized, the new method overcomes the sparse data problem to a certain extent. Now, the authors evaluate the second group of difficult sub-tasks, namely, the NER module. The experimental corpora also came from the Chinese People's Daily Newspaper in the first half-year of 1998. The overview of the entity distribution is shown in Table 11 . Figure 5 shows that the distribution of the entities complies with the Zipf's law. As a result, the entities exhibit the sparse property; thereby bringing trouble to the model. The authors compared several Named Entity Recognition Models, and Table 12 gives the evaluation result. The baseline result is obtained by selecting the NER tag that is most frequently associated with the current word. The authors add several tags in the tag set (Called adding \"role\"), including the entity prefix, infix and suffix. These tags are used to enhance the ability of the context repetition. In this experiment, HMM is one order model, and ME, CRF use the feature template:W -2 ,W -1 ,W 0 ,W 1 ,W 2 ,W -1:0 ,W 0:1 ,T -1 .  In another experiment, the authors selected the pairs using two methods, one is to filter by the threshold, such as AMI>0.001, the other method is to select the top pair after ranking the pair in descending order, e.g. selecting the top 500 pairs, having the maximum value. The partial pairs are shown in Table 13 , including the MI, AMI value and their rank. Figure 5. The entities that exhibit Zipf's law Then, the trigger features were collected, respectively, from above corpora. Taking AMI as an example, after being put in descending order, the top 500 features were selected. Table 14 shows the compared performance with trigger selected by AMI. 6 . Figure 6. The comparison about MI in F-measure The effectiveness of the proposed method has been confirmed. A similar result is also achieved for the IG approach. Experimental results show that the new method is more efficient. In the last part of this section, the authors evaluate the word cluster performance. The word vectors method is performed in the large-scale corpora, in the 1998 and 2000 People's Daily Newspaper, the window of size k =8 being used in this experiment. The hierarchical cluster analysis or other cluster analysis methods can be used to obtain the word cluster result. Table 15 demonstrates the proximity matrix, and Figure 7 gives its corresponding hierarchical cluster result. The authors used a synonym dictionary \"Word Forest of The Synonym\" to reduce the cluster space and increase prior knowledge. For instance, there are about 63 synonyms to the word \"\u6559\u6388\" (professor). Though it is helpful to build the word classes for the NER task by combining the word cluster and the thesaurus, some manual correction is also needed, because the linguistic phenomenon is too complicated, therefore making it impossible to acquire all the perfect word Figure 7. The demonstration about hierarchical cluster Based on the analysis of the errors, one finds that the sparse data problem is the main problem [Jiang 2006A; Jiang 2007] . In this paper, the authors apply the Smoothing Algorithm, Word Cluster Method, etc. to overcome the sparse data problem. Conclusion A pragmatic Chinese word segmentation approach having balance between the precision, efficiency and model complication is described in this paper. The disambiguation and out-of-vocabulary detection are the two main difficulties found in the Word Segmentation task. Accordingly, a lot of work is done in order to improve the performance of the above two problems. The contributions of this research are: 1) Apply multiple models to build a word segmentation model, and a special sub-task can be effectively solved via an optimized language model. 2) The authors propose to apply Average Mutual Information, etc. to extract stable entity features, and also present a novel method to provide an auxiliary function in extending the features by combining the word cluster and the thesaurus. 3) Rough Set theory is present to extract the complicated features and the long distance features for the segmentation disambiguation and for the Named Entity Recognition. The work in the future will concentrate on two sides: improving the NER performance and exploring New Word Detection Algorithm. Acknowledgements The authors thank Dr. Yan Zhao and Dr. Jian Zhao for their valuable suggestions in the proposed system. The authors also thank the members of the Natural Language Computing Group at School of Computer Science and Technology of the Harbin Institute of Technology. The authors especially thank the anonymous reviewers for their insightful comments and suggestions, based on which the paper has been improved.",
    "abstract": "A pragmatic Chinese word segmentation approach is presented in this paper based on mixing language models. Chinese word segmentation is composed of several hard sub-tasks, which usually encounter different difficulties. The authors apply the corresponding language model to solve each special sub-task, so as to take advantage of each model. First, a class-based trigram is adopted in basic word segmentation, which applies the Absolute Discount Smoothing algorithm to overcome data sparseness. The Maximum Entropy Model (ME) is also used to identify Named Entities. Second, the authors propose the application of rough sets and average mutual information, etc. to extract special features. Finally, some features are extended through the combination of the word cluster and the thesaurus. The authors' system participated in the Second International Chinese Word Segmentation Bakeoff, and achieved 96.7 and 97.2 in F-measure in the PKU and MSRA open tests, respectively.",
    "countries": [
        "China"
    ],
    "languages": [
        "Chinese"
    ],
    "numcitedby": "12",
    "year": "2006",
    "month": "December",
    "title": "A Pragmatic {C}hinese Word Segmentation Approach Based on Mixing Models"
}