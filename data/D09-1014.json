{
    "article": "Traditionally, machine learning approaches for information extraction require human annotated data that can be costly and time-consuming to produce. However, in many cases, there already exists a database (DB) with schema related to the desired output, and records related to the expected input text. We present a conditional random field (CRF) that aligns tokens of a given DB record and its realization in text. The CRF model is trained using only the available DB and unlabeled text with generalized expectation criteria. An annotation of the text induced from inferred alignments is used to train an information extractor. We evaluate our method on a citation extraction task in which alignments between DBLP database records and citation texts are used to train an extractor. Experimental results demonstrate an error reduction of 35% over a previous state-of-the-art method that uses heuristic alignments. Introduction A substantial portion of information on the Web consists of unstructured and semi-structured text. Information extraction (IE) systems segment and label such text to populate a structured database that can then be queried and mined efficiently. In this paper, we mainly deal with information extraction from text fragments that closely resemble structured records. Examples of such texts include citation strings in research papers, contact addresses on person homepages and apartment listings in classified ads. Pattern matching and rule-based approaches for IE (Brin, 1998; Agichtein and Gravano, 2000; Etzioni et al., 2005) that only use specific patterns, and delimiter and font-based cues for segmentation are prone to failure on such data because these cues are generally not broadly reliable. Statistical machine learning methods such as hidden Markov models (HMMs) (Rabiner, 1989; Seymore et al., 1999; Freitag and McCallum, 1999) and conditional random fields (CRFs) (Lafferty et al., 2001; Peng and McCallum, 2004; Sarawagi and Cohen, 2005) have become popular approaches to address the text extraction problem. However, these methods require labeled training data, such as annotated text, which is often scarce and expensive to produce. In many cases, however, there already exists a database with schema related to the desired output, and records that are imperfectly rendered in the available unlabeled text. This database can serve as a source of significant supervised guidance to machine learning methods. Previous work on using databases to train information extractors has taken one of three simpler approaches. In the first, a separate language model is trained on each column of the database and these models are then used to segment and label a given text sequence (Agichtein and Ganti, 2004; Canisius and Sporleder, 2007) . However, this approach does not model context, errors or different formats of fields in text, and requires large number of database entries to learn an accurate language model. The second approach (Sarawagi and Cohen, 2004; Michelson and Knoblock, 2005; Mansuri and Sarawagi, 2006) uses database or dictionary lookups in combination with similarity measures to add features to the text sequence. Although these features are very informative, learning algorithms still require annotated data to make use of them. The final approach heuristically labels texts using matching records and learns extractors from these annotations (Ramakrishnan and Mukherjee, 2004; Bellare and McCallum, 2007; Michelson and Knoblock, 2008) . Heuris-tic labeling decisions, however, are made independently without regard for the Markov dependencies among labels in text and are sensitive to subtle changes in text. Here we propose a method that automatically induces a labeling of an input text sequence using a word alignment with a matching database record. This induced labeling is then used to train a text extractor. Our approach has several advantages over previous methods. First, we are able to model field ordering and context around fields by learning an extractor from annotations of the text itself. Second, a probabilistic model for word alignment can exploit dependencies among alignments, and is also robust to errors, formatting differences, and missing fields in text and the record. Our word alignment model is a conditional random field (CRF) (Lafferty et al., 2001 ) that generates alignments between tokens of a text sequence and a matching database record. The structure of the graphical model resembles IBM Model 1 (Brown et al., 1993) in which each target (record) word is assigned one or more source (text) words. The alignment is generated conditioned on both the record and text sequence, and therefore supports large sets of rich and nonindependent features of the sequence pairs. Our model is trained without the need for labeled word alignments by using generalized expectation (GE) criteria (Mann and McCallum, 2008 ) that penalize the divergence of specific model expectations from target expectations. Model parameters are estimated by minimizing this divergence. To limit over-fitting we include a L 2 -regularization term in the objective. The model expectations in GE criteria are taken with respect to a set of alignment latent variables that are either specific to each sequence pair (local) or summarizing the entire data set (global). This set is constructed by including all alignment variables a that satisfy a certain binary feature (e.g., f (a, x 1 , y 1 , x 2 ) = 1, for labeled record (x 1 , y 1 ), and text sequence x 2 ). One example global criterion is that \"an alignment exists between two orthographically similar 1 words 95% of the time.\" Here the criterion has a target expectation of 95% and is defined over alignments {a = i, j | x 1 [i] \u223c x 2 [j], \u2200x 1 , x 2 }. Another criterion for extraction can be \"the word 'EMNLP' is always aligned with the record label booktitle\". This criterion has a target of 100% and defined for {a = i, j | y 1 [i] = booktitle \u2227 x 2 [j] = 'EMNLP', \u2200y 1 , x 2 }. One-to-one correspondence between words in the sequence pair can be specified as collection of local expectation constraints. Since we directly encode prior knowledge of how alignments behave in our criteria, we obtain sufficiently accurate alignments with little supervision. We apply our method to the task of citation extraction. The input to our training algorithm is a set of matching DBLP 2 -record/citation-text pairs and global GE criteria 3 of the following two types: (1) alignment criteria that consider features of mapping between record and text words, and, (2) extraction criteria that consider features of the schema label assigned to a text word. In our experiments, the parallel record-text pairs are collected manually but this process can be automated using systems that match text sequences to records in the DB (Michelson and Knoblock, 2005; Michelson and Knoblock, 2008) . Such systems achieve very high accuracy close to 90% F1 on semi-structured domains similar to ours. 4 Our trained alignment model can be used to directly align new record-text pairs to create a labeling of the texts. Empirical results demonstrate a 20.6% error reduction in token labeling accuracy compared to a strong baseline method that employs a set of high-precision alignments. Furthermore, we provide a 63.8% error reduction compared to IBM Model 4 (Brown et al., 1993) . Alignments learned by our model are used to train a linear-chain CRF extractor. We obtain an error reduction of 35.1% over a previous state-of-the-art extraction method that uses heuristically generated alignments. Record-Text Alignment Here we provide a brief description of the recordtext alignment task. For the sake of clarity and space, we describe our approach on a fictional restaurant address data set. The input to our system is a database (DB) consisting of records (possibly containing errors) and corresponding texts that are realizations of these DB records. An example of a matching record-text pair is shown in An example word alignment between the record and text is shown in Table 2 . Tokenization of record/text string is based on whitespace characters. We add a special *null* token at the field boundaries for each label in the schema to model word insertions. The record sequence is obtained by concatenating individual fields according to the DB schema order. As in statistical word alignment, we assume the DB record to be our source and the text to be our target. The induced labeling of the text is given by (name, address, address, address, city, city, state) which can be used to train an information extractor. In the next section, we present our approach to address this task. Approach We first define notation that will be used throughout this section. Let (x 1 , y 1 ) be a database record with token sequence x 1 = x 1 [1], x 1 [2], . . . , x 1 [m] and label sequence y 1 = y 1 [1], y 1 [2], . . . , y 1 [m] with y 1 [ * ] \u2208 Y where Y is the database schema. Let x 2 = x 2 [1], x 2 [2], . . . , x 2 [n] be the text sequence. Let a = a 1 , a 2 , . . . , a n be an alignment sequence of same length as the target text sequence. The alignment a i = j assigns the DB token-label pair (x 1 [j], y 1 [j]) to the text token x 2 [i]. Conditional Random Field for Alignment Our conditional random field (CRF) for alignment has a graphical model structure that resembles that of IBM Model 1 (Brown et al., 1993) . The CRF is an undirected graphical model that defines a probability distribution over alignment sequences a conditioned on the inputs (x 1 , y 1 , x 2 ) as: p \u0398 (a|x 1 , y 1 , x 2 ) = exp( P n t=1 \u0398 f (at,x 1 ,y 1 ,x 2 ,t)) Z \u0398 (x 1 ,y 1 ,x 2 ) , (1) where f (a t , x 1 , y 1 , x 2 , t) are feature functions defined over the alignments and inputs, \u0398 are the model parameters and Z \u0398 (x 1 , y 1 , x 2 ) = a exp( n t=1 \u0398 f (a t , x 1 , y 1 , x 2 , t)) is the partition function. The feature vector f (a t , x 1 , y 1 , x 2 , t) is the concatenation of two types of feature functions: (1) alignment features f align (a t , x 1 , x 2 , t) defined on source-target tokens, and, (2) extraction features f extr (a t , y 1 , x 2 , t) defined on source labels and target text. To obtain the probability of an alignment in a particular position t we marginalize out the alignments over the rest of the positions {1, . . . , n}\\{t}, p \u0398 (a t |x 1 , y 1 , x 2 ) = {a[1...n]}\\{at} p \u0398 (a|x 1 , y 1 , x 2 ) = exp(\u0398 f (a t , x 1 , y 1 , x 2 , t)) exp( a \u0398 f (a , x 1 , y 1 , x 2 , t)) (2) Furthermore, the marginal over label y t assigned to the text token x 2 [t] at time step t during alignment is given by p \u0398 (y t |x 2 ) = {at|y 1 [at]=yt} p \u0398 (a t |x 1 , y 1 , x 2 ), (3) where {a t | y 1 [a t ] = y t } is the set of alignments that result in a labeling y t for token x 2 [t]. Hence- forth, we abbreviate p \u0398 (a t |x 1 , y 1 , x 2 ) to p \u0398 (a t ). The gradient of p \u0398 (a t ) with respect to parameters \u0398 is given by \u2202p \u0398 (a t ) \u2202\u0398 = p \u0398 (a t ) f (a t , x 1 , y 1 , x 2 , t) \u2212E p \u0398 (a) f (a, x 1 , y 1 , x 2 , t) ,( 4 ) where the expectation term in the above equation sums over all alignments a at position t. We use the Baum-Welch and Viterbi algorithms to compute marginal probabilities and best alignment sequences respectively. Expectation Criteria and Parameter Estimation Let D = (x (1) 1 , y (1) 1 , x (1) 2 ), . . . , (x (K) 1 , y (K) 1 , x (K) 2 ) be a data set of K record-text pairs gathered manually or automatically through matching (Michelson and Knoblock, 2005; Michelson and Knoblock, 2008) . A global expectation criterion is defined on the set of alignment latent variables A f = {a|f (a, x (i) 1 , y (i) 1 , x (i) 2 ) = 1, \u2200i = 1 . . . K} on the entire data set that satisfy a given binary feature f (a, x 1 , y 1 , x 2 ). Similarly a local expectation criterion is defined only for a specific instance (x (i) 1 , y (i) 1 , x (i) 2 ) with the set A f = {a|f (a, x (i) 1 , y (i) 1 , x (i) 2 ) = 1}. For a feature function f , a target expectation p, and, a weight w, our criterion minimizes the squared divergence \u2206(f, p, w, \u0398) = w E p \u0398 (A f ) |A f | \u2212 p 2 , (5) where E p \u0398 (A f ) = a\u2208A f p \u0398 (a) is the sum of marginal probabilities given by Equation (2) and |A f | is the size of the variable set. The weight w influences the importance of satisfying a given expectation criterion. Equation ( 5 ) is an instance of generalized expectation criteria (Mann and Mc-Callum, 2008 ) that penalizes the divergence of a specific model expectation from a given target value. The gradient of the divergence with respect to \u0398 is given by, \u2202\u2206(f, p, w, \u0398) \u2202\u0398 = 2w E p \u0398 (A f ) |A f | \u2212 p \u00d7 \uf8ee \uf8f0 1 |A f | a\u2208A f \u2202p \u0398 (a) \u2202\u0398 \u2212 p \uf8f9 \uf8fb , (6) where the gradient \u2202p \u0398 (a) \u2202\u0398 is given by Eq. ( 4 ). Given expectation criteria C = F, P, W with a set of binary feature functions F = f 1 , . . . , f l , target expectations P = p 1 , . . . , p l and weights W = w 1 , . . . , w l , we maximize the objective O(\u03b8; D, C) = max \u0398 \u2212 l i=1 \u2206(f i , p i , w i , \u0398)\u2212 ||\u0398|| 2 2 , (7) where ||\u0398|| 2 /2 is the regularization term added to limit over-fitting. Hence the gradient of the objective is \u2202O(\u03b8; D, C) \u2202\u0398 = \u2212 l i=1 \u2202\u2206(f i , p i , w i , \u0398) \u2202\u0398 \u2212 \u0398. We maximize our objective (Equation 7 ) using the L-BFGS algorithm. It is sometimes necessary to restart maximization after resetting the Hessian calculation in L-BFGS due to non-convexity of our objective. 5 Also, non-convexity may lead to a local instead of a global maximum. Our experiments show that local maxima do not adversely affect performance since our accuracy is within 4% of a model trained with gold-standard labels. Linear-chain CRF for Extraction The alignment CRF (AlignCRF) model described in Section 3.1 is able to predict labels for a text sequence given a matching DB record. However, without corresponding records for texts the model does not perform well as an extractor because it has learned to rely on the DB record and alignment features (Sutton et al., 2006) . Hence, we train a separate linear-chain CRF on the alignmentinduced labels for evaluation as an extractor. The extraction CRF (ExtrCRF) employs a fully-connected state machine with a unique state per label y \u2208 Y in the database schema. The CRF induces a conditional probability distribution over label sequences y = y 1 , . . . , y n and input text sequences x = x 1 , . . . , x n as p \u039b (y|x) = exp n t=1 \u039b g(y t\u22121 , y t , x, t) Z \u039b (x) . (8) In comparison to our earlier zero-order AlignCRF model, our ExtrCRF is a first-order model. All the feature functions in this model g(y t\u22121 , y t , x, t) are a conjunction of the label pair (y t\u22121 , y t ) and input observational features. Z \u039b (x) in the equation above is the partition function. Inference in the model is performed using the Viterbi algorithm. Given expectation criteria C and data set D = (x (1) 1 , y (1) 1 , x (1) 2 ), . . . , (x (K) 1 , y (K) 1 , x (K) 2 ) , we first estimate the parameters \u0398 of AlignCRF model as described in Section 3.2. Next, for all text sequences x (i) 2 , i = 1 . . . K we compute the marginal probabilities of the labels p \u0398 (y t |x (i) 2 ), \u2200t using Equation (3). To estimate parameters \u039b we minimize the KL-divergence between p \u0398 (y|x) = n t=1 p \u0398 (y t |x) and p \u039b (y|x) for all sequences x, KL(p \u0398 p \u039b ) = y p \u0398 (y|x) log( p \u0398 (y|x) p \u039b (y|x) ) = H(p \u0398 (y|x)) \u2212 t,y t\u22121 ,yt E p \u0398 (y t\u22121 ,yt) [\u039b g(y t\u22121 , y t , x, t)] + log(Z \u039b (x)). (9) The gradient of the above equation is given by \u2202KL \u2202\u039b = t,y t\u22121 ,yt E p \u039b (y t\u22121 ,yt|x) [ g(y t\u22121 , y t , x, t)] \u2212E p \u0398 (y t\u22121 ,yt|x) [ g(y t\u22121 , y t , x, t)]. ( 10 ) Both the expectations can be computed using the Baum-Welch algorithm. The parameters \u039b are estimated for a given data set D and learned parameters \u0398 by optimizing the objective O(\u039b; D, \u0398) = min \u039b K i=1 KL(p \u0398 (y|x (i) 2 ) p \u039b (y|x (i) 2 ) + \u039b 2 /2. The objective is minimized using L-BFGS. Since the objective is convex we are guaranteed to obtain a global minima. Experiments In this section, we present details about the application of our method to citation extraction task. Data set. We collected a set of 260 random records from the DBLP bibliographic database. The schema of DBLP has the following labels {author, editor, address, title, booktitle, pages, year, journal, volume, number, month, url, ee, cdrom, school, publisher, note, isbn, chapter, se-ries}. The complexity of our alignment model depends on the number of schema labels and number of tokens in the DB record. We reduced the number of schema labels by: (1) mapping the labels address, booktitle, journal and school to venue, (2) mapping month and year to date, and (3) dropping the fields url, ee, cdrom, note, isbn and chapter, since they never appeared in citation texts. We also added the other label O for fields in text that are not represented in the database. Therefore, our final DB schema is {author, title, date, venue, volume, number, pages, editor, publisher, series, O}. For each DBLP record we searched on the web for matching citation texts using the first author's last name and words in the title. Each citation text found is manually labeled for evaluation purposes. An example of a matching DBLP record-citation text pair is shown in Table 3 . Our data set 6 contains 522 record-text pairs for 260 DBLP entries. Features and Constraints. We use a variety of rich, non-independent features in our models to optimize system performance. The input features in our models are of the following two types: (a) Extraction features in the AlignCRF model (f (a t , y 1 , x 2 , t)) and ExtrCRF model (g(y t\u22121 , y t , x, t)) are conjunctions of assigned labels and observational tests on text sequence at time step t. The following observational tests are used: (1) regular expressions to detect tokens containing all characters (ALLCHAR), all digits (ALLDIGITS) or both digits and characters (AL-PHADIGITS), (2) number of characters or digits in the token (NUMCHAR=3, NUMDIGITS=1), (3) domain-specific patterns for date and pages, (4) token identity, suffixes, prefixes and character ngrams, (5) presence of a token in lexicons such as \"last names,\" \"publisher names,\" \"cities,\" (6) lexicon features within a window of 10, (7) regular 6 The data set can be found at http://www.cs.umass.edu/\u223ckedarb/dbie cite data.sgml. DBLP record Citation text (Cohen et al., 2003) between the tokens, (3) substring token match tests whether one token is a substring of the other, (4) prefix token match returns true if the prefixes match for lengths {1, 2, 3, 4}, (5) suffix token match returns true if the prefixes match for lengths {1, 2, 3, 4}, and (6) exact and approximate token matches at offsets {\u22121, \u22121} and {+1, +1} around the alignment. Thus, a conditional model lets us use these arbitrary helpful features that cannot be exploited tractably in a generative model. As is common practice (Haghighi and Klein, 2006; Mann and McCallum, 2008) , we simulate user-specified expectation criteria through statistics on manually labeled citation texts. For extraction criteria, we select for each label, the top N extraction features ordered by mutual information (MI) with that label. Also, we aggregate the alignment features of record tokens whose alignment with a target text token results in a correct label assignment. The top N alignment features that have maximum MI with this correct labeling are selected as alignment criteria. We bin target expectations of these criteria into 11 bins as [0.05, 0.1, 0.2, 0.3, . . . , 0.9, 0.95]. 7 In our experiments, we set N = 10 and use a fixed weight w = 10.0 for all expectation criteria (no tuning of parameters was performed). Table 4 Experimental Setup. Our experiments use a 3:1 split of the data for training and testing. We repeat the experiment 20 times with different random splits of the data. We train the AlignCRF model using the training data and the automatically created expectation criteria (Section 3.2). We evaluate our alignment model indirectly in terms of token labeling accuracy (i.e., percentage of correctly labeled tokens in test citation data) since we do not have annotated alignments. The alignment model is then used to train a ExtrCRF model as described in Section 3.3. Again, we use token labeling accuracy for evaluation. We also measure F1 performance as the harmonic mean of precision and recall for each label. Alternate approaches We compare our method against alternate approaches that either learn alignment or extraction models from training data. Alignment approaches. We use GIZA++ (Och and Ney, 2003) to train generative directed alignment models: HMM and IBM Model4 (Brown et al., 1993) from training record-text pairs. These models are currently being used in state-of-the-art machine translation systems. Alignments between matching DB records and text sequences are then used for labeling at test time. Extraction approaches. The first alternative (DB-CRF) trains a linear-chain CRF for extraction on fields of the database entries only. Each field of the record is treated as a separate labeled text sequence. Given an unlabeled text sequence, it is segmented and labeled using the Viterbi algorithm. This method is an enhanced representative for (Agichtein and Ganti, 2004) in which a language model is trained for each column of the DB. Another alternative technique constructs partially annotated text data using the matching records and a labeling function. The labeling function employs high-precision alignment rules to assign labels to text tokens using labeled record tokens. We use exact and approximate token matching rules to create a partially labeled sequence, skipping tokens that cannot be unambiguously labeled. In our experiments, we achieve a precision of 97% and a recall of 70% using these rules. Given a partially annotated citation text, we train a linear-chain CRF by maximizing the marginal likelihood of the observed labels. This marginal CRF training method (Bellare and Mc-Callum, 2007 ) (M-CRF) was the previous stateof-the-art on this data set. Additionally, if a matching record is available for a test citation text, we can partially label tokens and use constrained Viterbi decoding with labeled positions fixed at their observed values (M+R-CRF approach). Our third approach is similar to (Mann and Mc-Callum, 2008) . We create extraction expectation criteria from labeled text sequences in the training data and uses these criteria to learn a linear-chain CRF for extraction (MM08). The performance achieved by this approach is an upper bound on methods that: (1) use labeled training records to create extraction criteria, and, (2) only use extraction criteria without any alignment criteria. Finally, we train a supervised linear-chain CRF (GS-CRF) using the labeled text sequences from the training set. This represents an upper bound on the performance that can be achieved on our task. All the extraction methods have access to the same features as the ExtrCRF model. Results Table 5 This problem may be alleviated by training on a large parallel corpus. Additionally, our alignment model is superior to Model4 since it leverages rich non-independent features of input sequence pairs. Table 6 shows the performance of various extraction methods. Except M+R-CRF, all extraction approaches, do not use any record information at test time. In comparison to the previous stateof-the-art M-CRF, the ExtrCRF method provides an error reduction of 35.1%. ExtrCRF also produces an error reduction of 21.7% compared to M+R-CRF without the use of matching records. These reductions are significant at level p = 0.005 using the two-tailed t-test. Training only on DB records is not helpful for extraction as we do not learn the transition structure 9 and additional context information 10 in text. This explains the low accuracy of the DB-CRF method. Furthermore, the MM08 approach (Mann and McCallum, 2008) achieves low accuracy since it does not use any Note that we do not observe a decrease in performance of ExtrCRF over AlignCRF although we are not using the test records during decoding. This is because: (1) a first-order model in Extr-CRF improves performance compared to a zeroorder model in AlignCRF and (2) the use of noisy DB records in the test set for alignment often increases extraction error. Both our models have a high F1 value for the other label O because we provide our algorithm with constraints for the label O. In contrast, since there is no realization of the O field in the DB records, both M-CRF and M+R-CRF methods fail to label such tokens correctly. Our alignment model trained using expectation criteria achieves a performance of 92.7% close to gold-standard training (GS-CRF) (96.5%). Furthermore, Ex-trCRF obtains an accuracy of 92.8% similar to AlignCRF without access to DB records due to better modeling of transition structure and context. Related Work Recent research in information extraction (IE) has focused on reducing the labeling effort needed to train supervised IE systems. For instance, Grenager et al. (2005) perform unsupervised HMM learning for field segmentation, and bias the model to prefer self-transitions and transi-tions on boundary tokens. Unfortunately, such unsupervised IE approaches do not attain performance close to state-of-the-art supervised methods. Semi-supervised approaches that learn a model with only a few constraints specifying prior knowledge have generated much interest. Haghighi and Klein (2006) assign each label in the model certain prototypical features and train a Markov random field for sequence tagging from these labeled features. In contrast, our method uses GE criteria (Mann and McCallum, 2008 )allowing soft-labeling of features with target expectation values -to train conditional models with complex and non-independent input features. Additionally, in comparison to previous methods, an information extractor trained from our record-text alignments achieves accuracy of 93% making it useful for real-world applications. Chang et al. (2007) use beam search for decoding unlabeled text with soft and hard constraints, and train a model with top-K decoded label sequences. However, this model requires large number of labeled examples (e.g., 300 annotated citations) to bootstrap itself. Active learning is another popular approach for reducing annotation effort. Settles and Craven (2008) provide a comparison of various active learning strategies for sequence labeling tasks. We have shown, however, that in domains where a database can provide significant supervision, one can bootstrap accurate extractors with very little human effort. Another area of research, related to the task described in our paper, is learning extractors from database records. These records are also known as field books and reference sets in literature (Canisius and Sporleder, 2007; Michelson and Knoblock, 2008) . Both Agichtein and Ganti (2004) and Canisius and Sporleder (2007) train a language model for each database column. The language modeling approach is sensitive to word re-orderings in text and other variability present in real-world text (e.g., abbreviation). We allow for word and field re-orderings through alignments and model complex transformations through feature functions. Michelson and Knoblock (2008) extract information from unstructured texts using a rule-based approach to align segments of text with fields in a DB record. Our probabilistic alignment approach is more robust and uses rich features of the alignment to obtain high performance. Recently, Snyder and Barzilay (2007) and Liang et al. (2009) have explored record-text matching in domains with unstructured texts. Unlike a semistructured text sequence obtained by noisily concatenating fields from a single record, an unstructured sequence may contain fields from multiple records embedded in large amounts of extraneous text. Hence, the problems of record-text matching and word alignment are significantly harder in unstructured domains. Snyder and Barzilay (2007) achieve a state-of-the-art performance of 80% F1 on matching multiple NFL database records to sentences in the news summary of a football game. Their algorithm is trained using supervised machine learning and learns alignments at the level of sentences and DB records. In contrast, this paper presents a semi-supervised learning algorithm for learning token-level alignments between records and texts. Liang et al. (2009) describe a model that simultaneously performs record-text matching and word alignment in unstructured domains. Their model is trained in an unsupervised fashion using EM. It may be possible to further improve their model performance by incorporating prior knowledge in the form of expectation criteria. Traditionally, generative word alignment models have been trained on massive parallel corpora (Brown et al., 1993) . Recently, discriminative alignment methods trained using annotated alignments on small parallel corpora have achieved superior performance. Taskar et al. (2005) train a discriminative alignment model from annotated alignments using a large-margin method. Labeled alignments are also used by Blunsom and Cohn (2006) to train a CRF word alignment model. Our method is trained using a small number of easily specified expectation criteria thus avoiding tedious and expensive human labeling of alignments. An alternate method of learning alignment models is proposed by McCallum et al. (2005) in which the training set consists of sequence pairs classified as match or mismatch. Alignments are learned to identify the class of a given sequence pair. However, this method relies on carefully selected negative examples to produce high-accuracy alignments. Our method produces good alignments as we directly encode prior knowledge about alignments. Conclusion and Future Work Information extraction is an important first step in data mining applications. Earlier approaches for learning reliable extractors have relied on manually annotated text corpora. This paper presents a novel approach for training extractors using alignments between texts and existing database records. Our approach achieves performance close to supervised training with very little supervision. In the future, we plan to surpass supervised accuracy by applying our method to millions of parallel record-text pairs collected automatically using matching. We also want to explore the addition of Markov dependencies into our alignment model and other constraints such as monotonicity and one-to-one correspondence. Acknowledgments This work was supported in part by the Center for Intelligent Information Retrieval and in part by The Central Intelligence Agency, the National Security Agency and National Science Foundation under NSF grant #IIS-0326249. Any opinions, findings and conclusions or recommendations expressed in this material are the authors' and do not necessarily reflect those of the sponsor.",
    "abstract": "Traditionally, machine learning approaches for information extraction require human annotated data that can be costly and time-consuming to produce. However, in many cases, there already exists a database (DB) with schema related to the desired output, and records related to the expected input text. We present a conditional random field (CRF) that aligns tokens of a given DB record and its realization in text. The CRF model is trained using only the available DB and unlabeled text with generalized expectation criteria. An annotation of the text induced from inferred alignments is used to train an information extractor. We evaluate our method on a citation extraction task in which alignments between DBLP database records and citation texts are used to train an extractor. Experimental results demonstrate an error reduction of 35% over a previous state-of-the-art method that uses heuristic alignments.",
    "countries": [
        "United States"
    ],
    "languages": [],
    "numcitedby": "18",
    "year": "2009",
    "month": "August",
    "title": "Generalized Expectation Criteria for Bootstrapping Extractors using Record-Text Alignment"
}