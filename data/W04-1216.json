{
    "article": "Although there exists a huge number of biomedical texts online, there is a lack of tools good enough to help people get information or knowledge from them. Named entity Recognition (NER) becomes very important for further processing like information retrieval, information extraction and knowledge discovery. We introduce a Hidden Markov Model (HMM) for NER, with a word similarity-based smoothing. Our experiment shows that the word similarity-based smoothing can improve the performance by using huge unlabeled data. While many systems have laboriously hand-coded rules for all kinds of word features, we show that word similarity is a potential method to automatically get word formation, prefix, suffix and abbreviation information automatically from biomedical texts, as well as useful word distribution information. Introduction In the Message Understanding Conference (MUC), Named entity Recognition aims to classify proper nouns, dates, time, measures and locations, etc. Many researchers adapt their systems from MUC to the biomedical domain, such as (Fukuda et al 1998) , (Proux et al 1998) , (Nobata et al 2000) , (Collier et al 2000) , (Gaizauskas et al 2000) , (Kazama et al 2002) , (Takeuchi et al 2002) , (Lee et al 2003) and (Zhou et al 2004) . As opposed to rule-based systems, machine learning-based systems could train their models on labeled data. But due to the irregular forms of biomedical texts, people still need to carefully choose word features for their systems. This work requires domain specific knowledge. How to get the domain knowledge automatically is a question that has not been fully investigated. Our system is built on an HMM model with the words themselves as the features. Huge unlabeled corpus is gathered from MEDLINE. Word similarity information is computed from the corpus and we use a word similarity-based smoothing to overcome the data sparseness. Data Preparation Labeled Data Our labeled data is from GENIA 3.02 (Ohta et al 2002) , which contains 2,000 abstracts (360K words). It has been annotated with semantic information such as DNA, protein annotations. These are useful for training models. It contains Part of Speech (POS) information as well. Although POS is not considered very useful for NER in newspaper articles, it can dramatically improve the performance of NER in biomedical texts (Zhou et al 2004) . Our model is trained from this labeled data. Unlabeled Data We downloaded 17G XML abstract data from MEDLINE, which contains 1,381,132 abstracts. Compared to the labeled data, we have far more unlabeled data, and the amount of available unlabeled data increases every day. We used this unlabeled data for computing word similarity. We extracted 66,303,526 proximity relationships from the unlabeled data. Distributional Word Similarity \"Words that tend to appear in the same contexts tend to have similar meanings.\" (Harris 1968 ). For example, the words corruption and abuse are similar because both of them can be subjects of verbs like arouse, become, betray, cause, continue, cost, exist, force, go on, grow, have, increase, lead to, and persist, etc, and both of them can modify nouns like accusation, act, allegation, appearance, and case, etc. Many methods have been proposed to compute distributional similarity between words, e.g., (Hindle, 1990) , (Pereira et al. 1993) , (Grefenstette 1994) and (Lin 1998) . Almost all of the methods represent a word by a feature vector where each feature corresponds to a type of context in which the word appeared. Proximity-based Similarity It is natural to use dependency relationship (Mel'\u010duk, 1987) as features, but a parser has to be available. Since biomedical text is highly irregular, and is very different from text like newspaper, a parser developed for the newspaper domain may not perform very well on biomedical text. Since most dependency relationships involve words that are situated close to one another, the dependency relationships can often be approximated by cooccurrence relationships within a small window (Turney 2001) ; (Terra and Clarke 2003) . We define the features of the word w to be the first non-stop word on either side of w and the intervening stop words (which can be defined as the top-k most frequent words in the corpus). For example, for a sentence \"He got a job from this company.\" (Considering a, from and this to be stop words.), the features of job provided by this sentence are shown in Table 1 . Features Computing Word Similarity Once the contexts of a word are represented as a feature vector, the similarity between two words can be computed using their context vectors. We use (u 1 , u 2 \u2026 u n ) and (v 1 , v 2 \u2026 v n ) to denote the feature vectors for the words u and v respectively, where n is the number of feature types extracted from a corpus. We use f i to denote the ith feature. The point-wise mutual information (PMI) between a feature f i and a word u measures the strength association between them. It is defined as: ( ) ( ) ( ) ( ) \uf8f7 \uf8f7 \uf8f8 \uf8f6 \uf8ec \uf8ec \uf8ed \uf8eb \u00d7 = u P f P u f P u f pmi i i i , log , where P(f i ,u) is the probability of f i co-occurring with u; P(f i ) is the probability of f i co-occurring with any word; and P(u) is the probability of any feature co-occurring with u. The similarity between word u and v is defined as the Cosine of PMI: ( ) ( ) ( ) ( ) ( ) \u2211 \u2211 \u2211 = = = \u00d7 \u00d7 = n i i n i i n i i i word v f pmi u f pmi v f pmi u f pmi v u sim 1 2 1 2 1 , , , , , Different similarity measures of distributional similarity can affect the quality of the result to s statistically significant degree. (Zhao and Lin 2004) shows that the Cosine of PMI is a significantly better similarity measure than several other commonly used similarity measures. Similar words are computed for each word in the unlabeled data. Only a subset of the similarity information is useful, because the similarity of words outside of the training data and test data vocabulary is not used. We only take into account the similar words that occur in the training data more than 10 times and only those word pairs which have point-wise mutual information greater than a threshold (0.04). Table 2 shows the computing result for \"IL-0\" 2 also shows that the similar words can capture word formation (IL-00, IL-0beta, and IL0 etc) and abbreviation (interleukin-0) information. A complete list of these word pairs and their similarity is available online 2 . The rule-based system may not able to capture words like IL-0ra, IL-0Ralpha, which are in the similar word list of IL-0, and it is very likely that they belong to the same semantic category. Many different kinds of expressions for numbers (like 0, 00-00, 00.00, -00, 0/0, five, six, 0-, iii, IV etc) are grouped together automatically. HMM Model and Smoothing Schema We follow the HMM model introduced in (Zhou et al 2004) . The structure of an HMM model contains States and observations. In our model, each state is represented by a semantic tag, or a POS tag if the semantic tag is not available; each observation contains a word sequence. The main computing difficulty in (Zhou et al 2004) is the probability of a tag given a word sequence: formula (1) . We use formula (2) to estimate formula (1) . If the bigram is unseen in the training data, we use formula (3) . If the unigram is also unseen, we use the unknown information which is gathered from the low frequency words in the training data. We find that about 26% of the bigrams (word t , word t+1 ) in the testing data is unseen, so the smoothing is critical. ( ) ( ) ( ) (3) | (2) , | (1) In order to compute formula (1), we can use the back-off (Katz 1987); (Bikel et al 1999) approach. Baseline1 and Baseline2 in our system use different back-off schema. The following formula is introduced in (Lee 1999) for word similarity-based smoothing: where S(w) is a set of candidate similar words and sim(w,w') is the similarity between word w and w'. Word similarity-based smoothing approach is used in our system to make advantage of the huge unlabeled corpus. In order to plug the word similarity-based smoothing into our HMM model, we made several extensions to formula (4) . ) 4 ( ) , ( ) | ( ) , ( ) | ( ) ( ) ( 1 \u2211 \u2211 \u2208 \u2032 \u2208 \u2032 + \u2032 \u2032 \u2032 = t t For each word w, we define p as the distribution of w's tags, which are annotated in the training data. We use the KL-Divergence to compute the distance between two distributions: We define the similarity between the tag distributions of word w and w' as: ( ) ( ) ( ) ( ) w tag P w tag P KLD w w sim tag \u2032 + = \u2032 | || | 1 1 , The harmonic average of word similarity and tag distribution similarity is defined as the similarity of word w and w' used in our system. \u2032 + \u2032 \u2032 \u00d7 \u2032 = \u2032 , , , , 2 , So, we get formula ( 5 ) and (6) . Formula ( 5 ) is for bigram smoothing and formula ( 6 ) is for unigram smoothing. ( ) ( ) ( ) 5 Experiment Result The experiment results are shown in  The Baseline2 outperforms Baseline1 because it prevents from using low frequency unigrams, and our system outperforms Baseline1 and Baseline2 because it prevents from using low frequency bigrams and unigrams. Our system benefits from huge unlabeled corpus. Conclusion We trained an HMM model on labelled data to recognize named entities in biomedical texts. Word similarity information was computed from huge unlabeled data. A word similarity-based smoothing method was integrated into the system, and improved the overall performance. We would like to see if it could also be plugged into other existing systems, and hopefully also improve their performance. We also argue that the automatically acquired similar words are rich with word features, such as word formation, prefix, suffix, abbreviation, expression variation and clustering information. We will further investigate the usefulness of them in the future. Acknowledgements Thanks to Dekang Lin and other members in the Natural Language Processing Group at the University of Alberta for helpful discussion, the anonymous reviewers for their insightful comments. This material is based upon work supported by the Alberta Ingenuity Centre for Machine Learning (AICML). Because it is natural to back-off from bigram to unigram, in our system, a back-off smoothing approach is combined with the word similaritybased smoothing. We follow these procedures to compute formula (1) .",
    "funding": {
        "defense": 0.0,
        "corporate": 0.0,
        "research agency": 0.9356557299927307,
        "foundation": 0.8584453398815554,
        "none": 0.0
    },
    "reasoning": "Reasoning: The article acknowledges support from the Alberta Ingenuity Centre for Machine Learning (AICML), which is a research initiative, suggesting it falls under the category of a research agency or foundation depending on its funding structure. There is no mention of defense, corporate, or other specific foundation funding, and the AICML's involvement suggests the research was not unfunded.",
    "abstract": "Although there exists a huge number of biomedical texts online, there is a lack of tools good enough to help people get information or knowledge from them. Named entity Recognition (NER) becomes very important for further processing like information retrieval, information extraction and knowledge discovery. We introduce a Hidden Markov Model (HMM) for NER, with a word similarity-based smoothing. Our experiment shows that the word similarity-based smoothing can improve the performance by using huge unlabeled data. While many systems have laboriously hand-coded rules for all kinds of word features, we show that word similarity is a potential method to automatically get word formation, prefix, suffix and abbreviation information automatically from biomedical texts, as well as useful word distribution information.",
    "countries": [
        "Canada"
    ],
    "languages": [
        ""
    ],
    "numcitedby": 91,
    "year": 2004,
    "month": "August 28th and 29th",
    "title": "Named Entity Recognition in Biomedical Texts using an {HMM} Model"
}