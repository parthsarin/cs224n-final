{
    "article": "This paper focuses on the tourism-related opinion mining, including tourism-related opinion detection and tourist attraction target identification. The experimental data are blog articles labeled as in the domestic tourism category in a blogspace. Annotators were asked to annotate the opinion polarity and the opinion target for every sentence. Different strategies and features have been proposed to identify opinion targets, including tourist attraction keywords, coreferential expressions, tourism-related opinion words, a 2-level classifier, and so on. We used machine learning methods to train classifiers for tourism-related opinion mining. A retraining mechanism was proposed to obtain the system decisions of preceding sentences as a new feature. The precision and recall scores of tourism-related opinion detection were 55.98% and 59.30%, respectively, and the scores of tourist attraction target identification among known tourism-related opinionated sentences were 90.06% and 89.91%, respectively. The overall precision and recall scores were 51.30% and 54.21%, respectively. Introduction The blogspace is a large resource for opinion mining. Opinion extraction methods are valuable for a wide range of applications. Our initial interest is to extract opinions related to tourist attractions from blog articles. When planning a tour, it is helpful to see other people's opinions about the tourist attractions. However, two issues arise when trying to apply published methods to retrieve opinions of tourist attractions: (1) Sentence-level or document-level: A travel article is often multi-topic because a travel route often includes several tourist attractions. Therefore, the opinion analysis for a specific tourist attraction should be carried out in sentence level, not in document level. (2) Opinion topic or opinion target: Tourist attractions may be treated as topics (queries in IR) or targets of opinions. Consider the following two sentences selected and adapted from our dataset: The Dream Lake is a beautiful place. The water is green and clear. Both kinds of sentences are considered as tourism-related opinions by us. However, their opinion targets are not the same. The opinion target of the first sentence is \"the Dream Lake\" itself, while the target of the second sentence is \"the water (in the Dream Lake)\". Both sentences are related to the same topic \"the Dream Lake\", but the second sentence does not contain its topic. We find difficulties to apply known-developed methods due to these reasons discussed here. Opinion mining and analysis have been widely studied in several topics, including opinion detection and polarity classification [1] [2] [3] [4] , opinion holder finding [5] [6] [7] , and opinion summarization [8] . Opinion retrieval is one of the research topics relevant to our work. Godbole et al. [9] estimated the polarity scores for a large set of named entities. But they measured the scores by the co-occurrences of named entities and opinion words, so the opinionated sentences which did not contain named entities were skipped. Ku et al. [8] retrieved documents containing relevant opinions regarding to TREC-like topics. Zhang et al. [10] accepted short queries (titles only) and expanded the queries by web resources and relevance feedback. However, the units of their retrieval work were documents, not in sentence-level as we wanted to do. Okamoto et al. [11] extracted relevant opinionated sentences by language model. Unfortunately, a large-scale training set is required to build a reliable probabilistic model. It is labor-consuming to prepare one in the tourism domain. Opinion target identification is another research topic that is relevant to our work. Many researchers focused on learning features of pre-defined types of products from reviews [12] [13] [14] . However, it remains a question whether the features of all kinds of tourist attractions are common. Moreover, in the conventional definition, an opinion target in a tourism-related opinion is not always the name of the tourist attraction. Therefore, we define the tourism-related opinion mining as a new topic and propose several approaches to solve the problem, including rule-based approaches and machine learning approaches. Although the experimental data used in this paper are written in Chinese, many of the rules and features are not language-dependent, or can be easily adopted if necessary resources are available. We also hope that the experiences learned from these experiments can be applied to other domains where articles are often multi-topic, such as baseball game critics. The structure of this paper is as follows. Section 2 gives the main ideas of tourism-related opinion identification and introduces the resources prepared for the work. Section 3 describes the design of a rule-based opinion identification system. Section 4 defines the features for training classifiers to build an opinion identification system. Section 5 discusses the experimental results and Section 6 concludes this paper. 2 Tourism-Related Opinion Analysis Problem Definition Opinionated sentences related to tourist attractions are the main interest of this paper. We call such an opinionated sentence a tourism-related opinion (hereafter \"TR-opinion\" for short) and its targeting tourist attraction a tourist attraction target (hereafter \"TA-target\" for short). The main goal of this paper is to retrieve TR-opinions and determine their TA-targets. That is, given an opinionated sentence, determine whether it is tourism-related or not, and then decide which tourist attraction is the focus of this opinion. Opinion identification is not the main focus of this paper. There has been a lot of research on this topic and it is easy to integrate an opinion identification module in our system. In this paper, the input sentences are already labeled as opinionated or not. Tourist attraction name recognition is not focused in this paper, either. It requires a named entity recognition system designed for tourist attraction names specifically but we cannot find one. Although some of the tourist attractions are locations or organizations such as parks or museums, there are more various types of names such as monuments or scenic spots waiting to be learned. In this paper, we simply prepare a list of tourist attraction names and manually check the correctness of the occurrences of the attraction names in the articles. Tourist attraction name recognition will be studied in the future. Main ideas to do the tasks are: (1) Some opinion words strongly hint that a sentence is tourism-related. (2) The frequency of a tourist attraction and its distance to an opinionated sentence can be useful information. (3) A tourist attraction can be expressed in several ways in an article. That is the well-known coreference problem. (4) A sentence may target on some tourist attraction if its preceding sentence also focuses on some tourist attraction. Before designing rules or features according to these ideas, some resources were prepared beforehand as described in the following subsections. Experimental Dataset Preparation 200 travel articles were collected from a blog site called the Wretch 1 . These articles were categorized as \"domestic travel\" in the blog site. We chose the most recommended articles by the readers in order to assure that the articles were really about traveling. Three annotators were asked to annotate the data. Each sentence was labeled as opinionated or not, as well as its opinion polarity, and its TA-target if the annotator considered it as a TR-opinion. The final annotations of the experiment dataset were determined by a two-stage voting. The first stage determined a sentence being positive-, neutral-, negative-, or non-opinionated. The second stage determined the sentence being a TR-opinion or not by deciding its TA-target. In each stage, an option agreed by at least two annotators became the final annotation. If no majority was found, the authors of this paper would choose one of the decisions made by the annotators. Those sentences voted as \"non-opinionated\" in the first stage were automatically labeled as \"not TR-opinion\" in the second stage. Table 1 lists the agreements of TR-opinion and TA-target measured by Cohen's kappa coefficient. The first three rows show the agreements among the annotators. The last three rows give the agreements between the final experiment dataset and each annotator. We can see that the agreements are not high enough. That means TR-opinion detection and TA-target identification are very challenging. Among the 200 articles, 44 of them do not contain any TR-opinions. After removing them, there are totally 10,904 sentences in the remaining 156 articles, with 3,542 opinionated sentences and 1,199 TR-opinions, which leads to a precision of 33.9% if we guess that all the opinions are TR-opinions. Tourism-Related Opinion Words Some opinion words are more related to tourist attractions than others. Consider the following two examples: I am so excited that the vacation is coming. The lake is so large and clear. The adjective \"excited\" is often used when describing personal feelings. On the other hand, \"clear\" is often seen in sentences describing scenic spots. We can say that opinion words are often domain-dependent. Many papers have focused on finding domain-specific opinion words and deciding their polarities as mentioned in Section 1. But it is slightly different from our need. \"Domain\" in their works often refers to \"a product type\", such as digital cameras. Opinion words related to digital cameras are the adjectives used to express the features of digital cameras, such as \"long\" for battery life and \"heavy\" for weight. However, it remains a question whether there are common features or attributes among the tourist attractions. The feature clearness only relates to water bodies such as rivers and lakes, while the feature design only relates to buildings or cathedrals. Moreover, there are many adjectives expressing opinions directly without modifying any features, such as amazing and beautiful. Therefore, we want to collect a set of opinion words which are often used in tourism-related opinionated sentences without considering features. We define a simple function TRscore(ow), the tourism relatedness score, to estimate the likelihood of an opinion word ow appearing in a TR-opinion by evaluating the ratio of the opinionated sentences where the word ow appears being tourism-related: ) opinion in ( # ) opinion - TR in ( # ) ( ow ow ow TRscore \uf03d (1) Opinion words whose TR-scores are higher than a predetermined threshold are collected as the tourism-related opinion words (hereafter \"TR-opword\" for short). The determination of the value of the threshold of TR-scores is discussed in Section 5.1. Coreferential Expressions Coreference is an important problem in natural language processing. When a tourist attraction is mentioned in an article, it is quite often to be expressed in several different ways. Consider the following three sentences selected and adapted from our experimental dataset: My family and I went to the Wufeng Resort last week. We were impressed by the fresh air when we arrived at the resort. Wufeng thoughtfully provided parking service. All three underlined expressions refer to the same tourist attraction \"the Wufeng Resort\", where \"resort\" is its category, \"Wufeng\" its name, and \"the Wufeng Resort\" its full name. It is quite common to refer a tourist attraction by the category keyword in its name. For this reason, we created a list of tourist attraction keywords (hereafter TA-keywords for short) which are tourist attraction categories. Note that there are several synonymous keywords related to the same category. The process of creating a TA-keyword list is as follows. First, a tourism website called Travel King 2 was visited and 1,836 tourist attraction names located in Taiwan were collected. All names were written in Chinese without word segmentation. For every pair of tourist attraction names, their longest common trailing substring was extracted. The substrings containing only one Chinese character were discarded. After checking their correctness by human, 158 TA-keywords were collected, such as \u570b\u5bb6\u516c\u5712 (national park) and \u6eab\u6cc9 (hot spring). We do not resolve the coreference problem directly. Instead, we try to find potential coreferential expressions. The frequency or distance feature of a tourist attraction is measured by the occurrences of all kinds of coreferential expressions of this tourist attraction. The first kind of coreferences is expressed by the longest TA-keyword found in a tourist attraction's name. (a) the set of all possible coreferential expressions of a tourist attraction a in(x, j, k) 1 if a string x appears in one of the sentences S j , S j+1 ..., S k ; 0 otherwise fst(x, j, k) the index of the first sentence in S j , S j+1 ..., S k which contains a string x; \uf0a5 if none of the sentences contains x lst(x, j, k) the index of the last sentence in S j , S j+1 ..., S k which contains a string x; 0 if none of the sentences contains x Nop \uf02d (S i ) ) ( max , k op k S S i k \uf0ce \uf03c , the id of the nearest opinion which precedes S i ; -1 if no preceding opinionated sentences Nop + (S i ) ) ( min , k op k S S k i \uf0ce \uf03c , the id of the nearest opinion which follows S i ; , the id of the nearest sentence which contains any tourist attraction and follows the sentence S i \uf0a5 if no following opinionated sentences Sid \uf02d (a, S i ) ) 1 , 1 , ( max ) ( \uf02d \uf0ce i x lst a ref x c , The list of the TA-keywords may not be complete enough. Some types of names are not in the list. In order to make the system more robust, we also take the trailing substring (the last two characters) of a full name as one of its possible coreferential expressions. Similarly, although we can extract the name part of a tourist attraction by deleting the keyword part from its full name, we simply take its leading substring (the first two characters) as one of its possible coreferential expressions. The function ref all (a) is defined to denote all possible coreferential expressions of a tourist attraction a. For example, ref all (\u4e94\u5cf0\u6e21\u5047\u6751) = {\u4e94\u5cf0\u6e21\u5047\u6751, \u6e21\u5047\u6751, \u4e94\u5cf0, \u5047 \u6751}, i.e. for the tourist attraction \u4e94\u5cf0\u6e21\u5047\u6751, its possible coreferential expressions include its full name \"\u4e94\u5cf0\u6e21\u5047\u6751\" (Wufeng Resort), its TA-keyword \"\u6e21\u5047\u6751\" (Resort), its leading substring \"\u4e94\u5cf0\" (Wufeng), and its trailing substring \"\u5047\u6751\". This strategy has its limitation. If a tourist attraction does not reveal its category in its name, it would be difficult to know its category. How to detect a tourist attraction and identify its category will be our future work. Rule-Based Approaches To describe our approaches more clearly, Table 2 lists the definitions of notations and functions used in this paper to define opinion-mining rules and features. The set of opinionated sentences S op and the set of tourist attractions TA appearing in a document D are given in advanced. Our goal is to predict a set of TR-opinions S to as similar to the correct set S # to as possible, and then determine each TR-opinion's TA-target. Note that we have n sentences and m tourist attractions in a document D, and S # to \uf0cd S op \uf0cd S. Our rule-based approaches to do TR-opinion mining include the following decisions: (1) Select a set of TR-opinion candidates S c . We can consider only a subset of the opinionated sentences S op as potential TR-opinions. (2) Select a set of TA-target candidates TA c . We can take only a subset of tourist attractions TA as TA-target candidates. (3) Select a function of possible coreferential expressions ref c (a) of a tourist attraction a. We can consider only some types of expressions as coreferences to the tourist attraction a. (4) Determine if a sentence s in S c is a TR-opinion. (5) Determine which tourist attraction a in TA c is the TA-target of a TR-opinion s. Two TR-opinion mining rules, Rnt1 and Rnt2, are proposed to guess a sentence S i in S c being a TR-opinion and its TA-target. Their definitions are illustrated in Table 3 and explained here. Nearest Preceding Tourist Attraction Rule (Rnt1): If there is a TA-target candidate appearing inside or before S i , it is predicted as a TR-opinion and its TA-target is the nearest tourist attraction. Nearest in-Window Tourist Attraction Rule (Rnt2): Set the window size as b sentences. If there is a TA-target candidate appearing inside, before, or after S i in the same window, it is predicted as a TR-opinion and its TA-target is the nearest tourist attraction. 4 and described more clearly in the following paragraphs. Baselines The baseline systems use the simplest way to make the first three decisions: In order to filter non-tourism-related sentences such as bloggers' sentiments, an opinionated sentence is considered as a TR-opinion candidate only if it contains any TR-opword. The selection of S c is given in the second row of Table 4 . Most Frequent Tourist Attraction Rule (Rmf) The most frequent tourist attraction appearing in a document D may be the focus of D. Many TR-opinions will target on this tourist attraction. So we only choose the most frequent tourist attractions in an article as the TA-target candidates, i.e. TA c =A maxf . Coreferential Expression Rule (Rcr) All kinds of coreferential expressions as stated in Section 2.4 are considered when determining the occurrences of a tourist attraction a, i.e. ref c (a) = ref all (a). Machine Learning Approach Approaches to build a TR-opinion analysis system by machine learning are described in this section. Remark that such a system takes a whole article (including opinions and non-opinions) as its input and replies a set of TR-opinions together with their TA-targets. Features can be divided into two sets which are defined in Section 4.1 and Section 4.2. The options of the system's architecture and training techniques are discussed in Section 4.3 and Section 4.4. Features for TR-Opinion Detection The first set of features is used to detect TR-opinions, i.e. to determine whether an opinionated sentence S i is tourism-related. Therefore, these features are designed for an opinionated sentence S i . These features are quickly demonstrated in First Sentence Feature (ffs) The first sentence in an article often states the overall opinion of the author. It is interesting to see if the first sentence is tourism-related. The feature ffs finds the first sentence. TR-Opword Features (fow all and fow k ) If S i contains a TR-opword, it is likely to be a TR-opinion. Based on this idea, 2 kinds of features are defined: fow all checks if S i contains any TR-opword and fow k checks if S i contains a specific TR-opword ow k . Table 5 and described more clearly in the following paragraphs. First Sentence Feature (ffs) The first sentence in an article often states the overall opinion of the author. It is interesting to see if the first sentence is tourism-related. The feature ffs finds the first sentence. TR-Opword Features (fow all and fow k ) If S i contains a TR-opword, it is likely to be a TR-opinion. Based on this idea, 2 kinds of features are defined: fow all checks if S i contains any TR-opword and fow k checks if S i contains a specific TR-opword ow k . (x, i+1, i+1) = 1]; 0 otherwise fta d-/ ftac d-1 \uf02d (i\uf02dNid \uf02d (S i ))/n fta d+ / ftac d+ 1 \uf02d (Nid + (S i )\uf02di)/n fop -1 1 if Nop \uf02d (S i ) = i\uf02d1; 0 otherwise fop +1 1 if Nop + (S i ) = i+1; 0 otherwise fop d- 1 \uf02d (i\uf02dNop \uf02d (S i ))/n fop d+ 1 \uf02d (Nop + (S i )\uf02di)/n fto - TR-Opinion Context Feature (fto) If an opinionated sentence is close to a TR-opinion, it is likely to be tourist-related, too. 2 features are introduced here: fto -1 : the sentence preceding S i is a TR-opinion fto d-: the distance score of the nearest TR-opinion preceding S i Note that we do not know the values of these 2 features for a new article (nor should we when testing on the test set). In such a case, both feature values of the first sentence are set to be 0 because there is no preceding sentence. The predicted result of a sentence will be used to determine these 2 feature values of its following sentence. More ideas about these features are discussed in Section 4.4. Features for TR-Target Identification The second set of features is used to identify TA-targets, i.e. to determine whether a tourist attraction A j is the TA-target of an opinionated sentence S i . Therefore, these features are designed for a pair of an opinionated sentence S i and a tourist attraction A j . These features are quickly demonstrated in Table 6 and described more clearly in the following paragraphs. Remark that the candidates of TA-targets are the set of tourist attractions appearing in the article. ) fna n-/ fnac n-1 if Nta \uf02d (S i ) = A j ; 0 otherwise fna n+ / fnac n+ 1 if Nta + (S i ) = A j ; 0 otherwise fna d-/ fnac d-1 \uf02d (i\uf02dSid \uf02d (A j , S i ))/n fna d+ / fnac d+ 1 \uf02d (Sid + (A j , S i )\uf02di)/n Frequency Feature (ffq) Similar to the idea of the Most-Frequent-Tourist-Attraction Rule, the most frequent tourist attraction is most likely to be a TA-target. The feature ffq finds the most frequent tourist attraction. Distance Feature (fna and fnac) It is intuitive that a TR-opinion is often close to its targeting tourist attraction. 8 features are invented to measure the distance of an opinionated sentence S i and a tourist attraction A j . The first 4 fna features only consider full-name coreference, i.e. ref c (a) = {a}: fna n-: check if A j is the nearest tourist attraction which precedes S i fna n+ : check if A j is the nearest tourist attraction which follows S i fna d-: the distance score of A j and S i when A j precedes S i fna d+ : the distance score of A j and S i when A j follows S i The next 4 features, fnac n-, fnac n+ , fnac d-, fnac d+ , are defined as the same as the 4 fna features only that the choice of coreference is using all kinds coreferential expressions, i.e. ref c (a) = ref all (a). Retraining by Prediction The TR-Opinion Context Feature (fto) is very useful but also dangerous. We conducted a pseudo testing where the values of the TR-Opinion Context Feature of the test data were set correctly (denoted as fto # ), and found that the performance was the best. But if the feature values came from the predictions of the classifier, the errors were propagated and harmed the performance largely. Our TA-target identification system is constructed as follows: for each sentence in an article, it is paired with each of the tourist attractions appearing in the article and labeled by a classifier. If none of the pairs is classified as positive, this sentence is not a TR-opinion. Otherwise, the sentence is predicted as a TR-opinion and all the tourist attractions in the pairs receiving positive predictions are its TR-targets. The process of TA-target identification can be divided into two steps: detecting TR-opinions and assigning TR-targets to them. Hence we can train two classifiers for the two steps separately, or train a single classifier to identify the TA-targets directly. Two different models are designed as follows given that the input is a pair of an opinionated sentence S i and a tourist attraction A j . Single-Layer Model The classifier directly determines whether the tourist attraction A j is the TR-target of the sentence S i . All features introduced in Section 4.1 and 4.2 are used for training even if a feature only relates to the sentence S i only. Dual-Layer Model The classification module consists of two classifiers. The first-layer classifier determines whether S i is a TR-opinion. Only features introduced in Section 4.1 are used to train the first-layer classifier. If S i is classified as a TR-opinion, the pair <S i , A j > is passed to the second-layer classifier. The second-layer classifier determines whether A j is the TR-target of S i . Only features introduced in Section 4.2 are used to train the second-layer classifier. Experiments The experiments shown in this section were all conducted in a leave-one-out cross-validation fashion that each of the 156 articles in the experimental data set was kept out as the test data Both TR-opinion detection and TA-target identification are evaluated by the micro-average precision (P), recall (R), and F-measure (F). Tourism-Related Opinion Word Selection As introduced in Section 2.3, we want to find opinion words highly related to tourism. A preliminary experiment was conducted to determine the threshold of TR-scores to select TR-opwords. The candidates of TR-opwords were the opinion words collected in NTUSD, the National Taiwan University Sentiment Dictionary [15] . The threshold of the TR-scores was determined by the baseline experiment of TR-opinion detection. Set the threshold values varying from 0 to 1 with a step of 0.01 and selected those opinion words whose TR-scores were higher than the threshold to predict TR-opinions by the TR-Opword Rule only. Table 7 shows the results of TR-opinion detection under different threshold settings. The threshold value achieving the best performance is 0.25 and 0.26, but not significantly the best if comparing to a nearby setting. We chose 0.25 as the threshold in the following experiments. Note that the sets of TR-opwords were different in each iteration of cross-validation because the training sets were different. The second column of Table 7 depicts the average number of TR-opwords selected in each iteration. Experiments of Machine Learning Approaches We used the LIBSVM tool [16] to train the classifiers. We chose SVM because some features' domains were numerical, not sets of tags. The dual-layer model first detects the TR-opinions and then identifies the TA-targets. We evaluated the first-layer and second-layer classifiers separately. Table 9 presents the selected results of TR-opinion detection by different combinations of features where fxxdenotes all fxx features regarding objects preceding the sentence, and fxx 0-denotes all fxx features regarding objects preceding or inside the sentence. The results are represented in groups. The first group shows that the Preceding Tourist Attraction Distance Features with or without Coreferential Expressions (ftaand ftac -) are useful. The second and the third groups also show that the TR-opinion Context Feature after Retraining (fto 2 ) is useful, too. The retraining process did improve the performance. To see the usefulness of features, we used an adapted version of WLLR (Weighted Log Likelihood Ratio) [17] to measure the usefulness of the features. The adapted equation of WLLR in our work is: )) ( ( )) ( ( log )) ( ( ) ( x f avg x f avg x f avg f WLLR N x P x P x \uf0ce \uf0ce \uf0ce \uf03d (2) where f is a feature, avg(x) means the average over a set But the feature combination achieving the best performance consists of all kinds of features, where F-measure score is 57.59%. It outperforms the combination by feature selection significantly (p<0.001). Table 10 lists the experimental results of TA-target identification by different approaches. The second row gives the performance of the second-layer classifier where the first-layer was replaced by a perfect model, i.e. only known TR-opinions were waited to be assigned TA-targets. The precision and recall scores were 90.06% and 89.91%, respectively, and the F-measure score was around 90%. It means that the bottleneck of this work is TR-opinion detection. The third row shows the performance of the overall dual-layer system consisting of the best models of the two layers, which F-measure is 52.72% and is the best among all TA-target identification models. The models of the fourth and the fifth rows are single-layer classifiers. Even using the correct values of TR-Opinion Context Features (fto # ), they still cannot compete with the dual-layer model. It concludes that dual-layer classification is a better approach. The sixth row of Table 10 gives the performance of TA-target identification by rules. Although the best rule-based approach performs well in TR-opinion detection, its ability to identify TA-targets is weaker. The last three rows present the performance of the results of the three annotators. We can see that the best F-measure of a ML-based system is about 60% to 75% of human ability. So there is still room to improve. This paper aims at detecting tourism-related opinionated sentences and identifying their tourist attraction targets. Several rules and features are invented and tested in combinations. The performance is improved by building a dual-layer classification system where the classifiers of TR-opinion detection and TA-target identification are trained separately. A retraining by prediction method is introduced to decide the values of the TR-Opinion Context Features. This feature, together with the tourism-related opinion words and distances to the tourist attractions were verified to be useful. The best overall performance of TA-target identification is 52.72%, which is about 60% to 75% of human ability.",
    "abstract": "This paper focuses on the tourism-related opinion mining, including tourism-related opinion detection and tourist attraction target identification. The experimental data are blog articles labeled as in the domestic tourism category in a blogspace. Annotators were asked to annotate the opinion polarity and the opinion target for every sentence. Different strategies and features have been proposed to identify opinion targets, including tourist attraction keywords, coreferential expressions, tourism-related opinion words, a 2-level classifier, and so on. We used machine learning methods to train classifiers for tourism-related opinion mining. A retraining mechanism was proposed to obtain the system decisions of preceding sentences as a new feature. The precision and recall scores of tourism-related opinion detection were 55.98% and 59.30%, respectively, and the scores of tourist attraction target identification among known tourism-related opinionated sentences were 90.06% and 89.91%, respectively. The overall precision and recall scores were 51.30% and 54.21%, respectively.",
    "countries": [
        "Taiwan"
    ],
    "languages": [
        "Chinese"
    ],
    "numcitedby": "4",
    "year": "2010",
    "month": "September",
    "title": "Tourism-Related Opinion Mining"
}