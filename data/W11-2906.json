{
    "article": "Instance-weighting has been shown to be effective in statistical machine translation (Foster et al., 2010) , as well as crosslanguage adaptation of dependency parsers (S\u00f8gaard, 2011) . This paper presents new methods to do instance-weighting in stateof-the-art dependency parsers. The methods are evaluated on Danish and English data with consistent improvements over unadapted baselines. Introduction The default assumption in theoretical machine learning is that training and test data are independently and identically (iid) drawn from the same distribution. If the distributions differ, we face what is referred to as sample selection bias in the statistical literature. Sample selection bias is typically ignored in machine learning, but it occurs often in practice. In natural language processing, the problem shows up in almost any real-world application. Machine translation systems are trained on large amounts of parallel text, but typically this text comes from a small set of sources or institutions, e.g. the Europarl corpora of transcribed debates from the European Parliament (Koehn, 2005) . Machine translation systems are used to translate many different kinds of texts, however. In machine translation, which can be seen as a structured learning problem of predicting target sentence y given a source sentence x, we typically see a bias in P (y) and P (x), but not in P (y|x). Statistical parsers for English are typically trained on annotated text from the Wall Street Journal corpus of newspaper articles (Marcus et al., 1993) , but are used to process many different kinds of text. Since the problem of sample selection bias in natural language processing is typically related to differences in textual domains, computational linguists typically refer to the problem as domain adaptation. Domain adaptation is one of the most fundamental yet-to-be-solved problems in natural language processing. While statistical parsers have accuracies of 90-92% parsing newspaper articles, accuracy on transcribed telephone conversations or child-directed speech often drop to 60-70% (Nivre et al., 2007a) . Domain adaptation is therefore also receiving more and more attention, and it has recently been studied in the context of named entity recognition (Daume III, 2007) , sentiment analysis (Blitzer et al., 2007) , dependency parsing (Sagae and Tsujii, 2007; Kawahara and Uchimoto, 2009 ), text classification (Chen et al., 2009) , context-free parsing (McClosky et al., 2010) and machine translation (Foster et al., 2010) . Domain adaptation is the problem of learning a target distribution from a labeled sample of source data with a similar, but different distribution. The problem comes in two variants; one where we also have a small amount of labeled target domain data, and one in which we only have labeled source domain data and must rely on unlabeled source and target domain data to do the actual adaptation of the model that can be learned from source domain data. Much work in natural language processing has assumed a small amount of labeled target domain data (Daume III, 2007; Foster et al., 2010 ), but we consider the more difficult case where none is available. This is sometimes referred to as unsupervised domain adaptation. How domain adaptation is tackled depends much on the assumptions we may have about the similarities and differences between the two distributions. One line of approaches to domain adaptation is to change the feature representation of the source domain data, typically focusing on the features that are also predictive in the target domain (Ben-David et al., 2007) . Such approaches assume a bias in P (x), but may also try to deal with sce-narios where there is a bias in P (y|x). Others have proposed using priors to encode knowledge about one domain in a model induced from data in another domain, or they have promoted frequent target domain classes if they were less frequent in the source domain. Such approaches assume a bias in P (y) and have become popular in word sense disambiguation (Zhu and Hovy, 2007) , for example, where a particular reading of bank may be much more frequent in some domains rather than others. Classes can be promoted using instance weighting, but instance weighting can also be used to change the marginal distribution of data. The first case is typically referred to as solving class imbalance, while the second case is called covariate shift (Shimodaira, 2000) . We will, assuming a bias in P (x), consider the covariate shift scenario. A fourth line of research in domain adaptation applies semi-supervised or transductive learning algorithms to domain adaptation problems, using unlabeled data from the target domain. In dependency parsing, domain adaptation received attention in the CoNLL 2007 Shared Task. While semi-supervised learning and structural correspondence learning were used by participants in the CoNLL 2007 Shared Task, none of the participants used instance-weighting techniques. In this paper, we follow suggestions in the related literature on learning under sample selection bias to transform the density ratio estimation problem in co-variate shift into a problem of predicting whether an instance is from the source domain or from the target domain (Zadrozny, 2004; Bickel and Scheffer, 2007) . We show how to do this in the context of graph-based and transition-based dependency parsing. S\u00f8gaard (2011) who uses perplexity per word to select the source data most similar to the target data, so a form of instance weighting with weights 0 and 1, but applies the technique to cross-language adaptation of dependency parsers; but also Plank and van Noord (2011) who in a similar fashion use topic similarity measures to select articles rather than sentences. Related work includes Our instance-weighted parsers are evaluated primarily on a new data set, namely a partitioning of the Danish treebank (Buch-Kromann, 2003) into four different textual domains. We do experiments with all pair-wise combinations of the four domain-specific treebanks. Our results are supplemented by a subset of the CoNLL 2007 Shared Task data. It has been noted in several places that there were annotation differences between the source and target data in the original data which makes domain adaptation almost impossible (Dredze et al., 2007) . Consequently, we only use the three small target domain evaluation datasets, which were annotated more consistently, and do experiments with all pair-wise combinations of these datasets. Our experiments can also be seen as transductive learning experiments, since no target data other than the data used for evaluation is used. 2 Sentence-Based Instance-Weighting in Dependency Parsing Using Text Classification for Instance-Weighting The source and target plain text corpora are first extracted, and each sentence is assigned a label saying whether the sentence was sampled from source or target data. The idea is then to train a text classifier on the data and use the probability that a sentence comes from the target domain to weight the source instances. This is also the approach to learning under sample selection bias suggested by Zadrozny (2004) . Our text classifier was a logistic regression classifier implemented in Mallet. It represents each sentence by a vector representing occurrences of n-grams in the sentence (n \u2264 3). No stop word lists were used. The text classifier was used to approximate the probability that each source sentence was sampled from the target domain. The weights are obtained using ten-fold crossvalidation. We store one weight for each sentence in the labeled source data. Graph-Based Dependency Parsing Graph-based dependency parsing is a heterogeneous family of approaches to the dependency parsing algorithms, each of which couples a learning algorithm and a parsing algorithm. Some of these algorithms assume dependency trees are projective (Eisner, 1996) , while others allow for non-projective dependency trees (McDonald et al., 2005) . One approach to graph-based parsing of nonprojective dependency trees is applying minimum spanning tree algorithms to matrices of weighted head-dependent candidate pairs. The learning al- (Crammer and Singer, 2003) . The MIRA algorithm considers one sentence at each update of the weight vector, and the successive values of the vector are accumulated to later produce an averaged weight vector in a way similar to using averaged perceptron. Unlike using averaged perceptron, MIRA aggressively maximizes the margin between the correct dependency structure and the parser's prediction enforcing it to be larger than the loss of that prediction. In our experiments we weight the margin such that a large margin between the correct and predicted structures is less aggressively enforced when learning from distant data points. This is achieved by weighting the loss of incorrect classifications by the probability that the sentence was sampled from the target domain. Transition-Based Dependency Parsing Transition-based parsing reduces the problem of finding the most likely dependency tree for a sentence to a series of classification problems by seeing parsing as transitions between configurations. Parsing is incremental and left-to-right. A configuration typically consists of the next couple of words to be read, the first couple words on a stack storing previously read words, and part of the dependency structure already build. Each configuration is a feature vector used to predict the parser's next transition. The guiding classifier is trained on canonical derivations of the dependency trees in the labeled training data. 1 http://sourceforge.net/projects/mstparser/ The most widely used transition-based dependency parser is the MaltParser (Nivre et al., 2007b) . 2 The parser comes with several parsing algorithms, but uses a projective and very efficient algorithm by default. MaltParser is bundled with LibSVM 2.91, implementing a wide range of support vector machine algorithms that are used to learn classifiers to guide parsing. LibSVM 2.91 does not allow for instance weighting. However, LibSVM 3.0 does. In our experiments with the MaltParser, we use LibSVM 3.0 in conjunction with the MaltParser providing it with sentencelevel instance weights from our Mallet text classifier. This means that configuration-transition pairs in the canonical derivations of a sentence with weight w will have weight w when training the support vector machine used by our parser. Data We evaluate our instance-weighted parsers on two domain adaptation data sets from English and Danish annotated corpora, one of which (Danish) has not previously been used in the literature. The Danish corpus is a balanced corpus, annotated building the Danish Dependency Treebank (DD (Buch-Kromann, 2003) and used in the CoNLL-X Shared Task (Buchholz and Marsi, 2006) . The DDT comes with metadata revealing the original source of each sentence. This metadata was used to split the DDT into four domains: law (77 sent.), literature (lit; 984 sent.), magazines (magz; 190 sent.) and newspapers (news; 5052 sent.). The second dataset was also used for the CoNLL 2007 Shared Task on domain adaptation for dependency parsers (Nivre et al., 2007a) . In the shared task, the Penn-III treebank (Marcus et al., 1993) was used as source domain, and test domains were chemical and biomedical research articles and transcribed child-directed speech. The quality of the shared task data was questioned by participants (Dredze et al., 2007) , and there is some consensus today that annotation styles were too different for evaluation results to be useful. We therefore use data from the target domains only: biomedical literature (160 sent.), chemical literature (195 sent.) and child-directed speech (666 sent.). We consider all pairwise combinations of datasets within the two languages. Results Our results for both Danish and English (see Table 1 and 2), reporting unlabeled attachment scores including punctuation, show rather consistent improvements across all pairwise combinations of datasets. Error reductions vary greatly from dataset to dataset, however. The average error reduction on the Danish data is \u2265 3% for the instance-weighted MSTParser, and \u2265 2.5% for the instance-weighted MaltParser. It is interesting to note that there were no significant improvements when English input data was weighted by a text classifier trained on biomedical and chemical literature. These two text types are of course more similar to each other than to childdirected speech. This is reflected in the text classification accuracy, which is as high as 98-99% when comparing sentences sampled from technical literature and sentences sampled from childdirected speech, but considerably lower (\u223c93.5%) when trying to differentiate biomedical sentences from chemical ones. Table 1 plots the correlation between system improvements and text classification accuracy for the Danish data. It is easy to see that high text classification accuracy is necessary for substantial improvements over the non-  Finally we note that we did similar experiments on the Penn-III treebank using the metadata also used by Webber (2009) , with less robust results and smaller average improvements. The distribution of text types is very skewed in the Wall Street Journal, however, making text classification on this data alone a difficult job. Conclusion We have presented ways of implementing instance-weighting in transition-based and graph-based dependency parsing based on text classification and showed that this leads to consistent improvements over non-adapted baselines in domain adaptation scenarios, especially across very different domains.",
    "abstract": "Instance-weighting has been shown to be effective in statistical machine translation (Foster et al., 2010) , as well as crosslanguage adaptation of dependency parsers (S\u00f8gaard, 2011) . This paper presents new methods to do instance-weighting in stateof-the-art dependency parsers. The methods are evaluated on Danish and English data with consistent improvements over unadapted baselines.",
    "countries": [
        "Denmark"
    ],
    "languages": [
        "Danish",
        "English"
    ],
    "numcitedby": "7",
    "year": "2011",
    "month": "October",
    "title": "Sentence-Level Instance-Weighting for Graph-Based and Transition-Based Dependency Parsing"
}