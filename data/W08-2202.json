{
    "article": "This paper presents a WSD strategy which combines a knowledge-based method that exploits sense definitions in a dictionary and relations among senses in a semantic network, with supervised learning methods on annotated corpora. The idea behind the approach is that the knowledge-based method can cope with the possible lack of training data, while supervised learning can improve the precision of a knowledge-based method when training data are available. This makes the proposed method suitable for disambiguation of languages for which the available resources are lacking in training data or sense definitions. In order to evaluate the effectiveness of the proposed approach, experimental sessions were carried out on the dataset used for the WSD task in the EVALITA 2007 initiative, devoted to the evaluation of Natural Language Processing tools for Italian. The most effective hybrid WSD strategy is the one that integrates the knowledgebased approach into the supervised learning method, which outperforms both methods taken singularly. Background and Motivations The inherent ambiguity of human language is a greatly debated problem in many research areas, such as information retrieval and text categorization, since the presence of polysemous words might result in a wrong relevance judgment or classification of documents. These problems call for alternative methods that work not only at the lexical level of the documents, but also at the meaning level. The task of Word Sense Disambiguation (WSD) consists in assigning the most appropriate meaning to a polysemous word within a given context. Applications such as machine translation, knowledge acquisition, common sense reasoning and others, require knowledge about word meanings, and WSD is essential for all these applications. The assignment of senses to words is accomplished by using two major sources of information (Nancy and V\u00e9ronis, 1998) : 1. the context of the word to be disambiguated, e.g. information contained within the text in which the word appears; 2. external knowledge sources, including lexical resources, as well as hand-devised knowledge sources, which provide data useful to associate words with senses. All disambiguation work involves matching the context of the instance of the word to be disambiguated with either information from an external knowledge source (also known as knowledge-driven WSD), or information about the contexts of previously disambiguated instances of the word derived from corpora (data-driven or corpusbased WSD). Corpus-based WSD exploits semantically annotated corpora to train machine learning algorithms to decide which word sense to choose in which context. Words in such annotated corpora are tagged manually using semantic classes chosen from a particular lexical semantic resource (e.g. WORDNET (Fellbaum, 1998) ). Each sense-tagged occurrence of a particular word is transformed into a feature vector, which is then used in an automatic learning process. The applicability of such supervised algorithms is limited to those few words for which sense tagged data are available, and their accuracy is strongly influenced by the amount of labeled data available. Knowledge-based WSD has the advantage of avoiding the need of sense-annotated data, rather it exploits lexical knowledge stored in machine-readable dictionaries or thesauri. Systems adopting this approach have proved to be ready-to-use and scalable, but in general they reach lower precision than corpus-based WSD systems. Our hypothesis is that the combination of both types of strategies can improve WSD effectiveness, because knowledge-based methods can cope with the possible lack of training data, while supervised learning can improve the precision of knowledge-based methods when training data are available. This paper presents a method for solving the semantic ambiguity of all words contained in a text 1 . We propose a hybrid WSD algorithm that combines a knowledgebased WSD algorithm, called JIGSAW, which we designed to work by exploiting WORDNET-like dictionaries as sense repository, with a supervised machine learning algorithm (K-Nearest Neighbor classifier). WORDNET-like dictionaries are used because they combine the characteristics of both a dictionary and a structured semantic network, supplying definitions for the different senses of words and defining groups of synonymous words by means of synsets, which represent distinct lexical concepts. WORDNET also organize synsets in a conceptual structure by defining a number of semantic relationship (IS-A, PART-OF, etc.) among them. Mainly, the paper concentrates on two investigations: 1. First, corpus-based WSD is applied to words for which training examples are provided, then JIGSAW is applied to words not covered in the first step, with the advantage of knowing the senses of the context words already disambiguated in the first step; 2. First, JIGSAW is applied to assign the most appropriate sense to those words that can be disambiguated with a high level of confidence (by setting a specific parameter in the algorithm), then the remaining words are disambiguated by the corpus-based method. The paper is organized as follows: After a brief discussion about the main works related to our research, Section 3 gives the main ideas underlying the proposed hybrid WSD strategy. More details about the K-NN classification algorithm and JIGSAW, on which the hybrid WSD approach is based, are provided in Section 4 and Section 5, respectively. Experimental sessions have been carried out in order to evaluate the proposed approach in the critical situation when training data are not much reliable, as for Italian. Results are presented in Section 6, while conclusions and future work close the paper. Related Work For some Natural Language Processing (NLP) tasks, such as part of speech tagging or named entity recognition, there is a consensus on what makes a successful algorithm, regardless of the approach considered. Instead, no such consensus has been reached yet for the task of WSD, and previous work has considered a range of knowledge sources, such as local collocational clues, common membership in semantically or topically related word classes, semantic density, and others. In recent SENSEVAL-3 evaluations 2 , the most successful approaches for all words WSD relied on information drawn from annotated corpora. The system developed by Decadt et al. (2002) uses two cascaded memory-based classifiers, combined with the use of a genetic algorithm for joint parameter optimization and feature selection. A separate word expert is learned for each ambiguous word, using a concatenated corpus of English sense tagged texts, including SemCor, SENSEVAL datasets, and a corpus built from WORDNET examples. The performance of this system on the SENSEVAL-3 English all words dataset was evaluated at 65.2%. Another top ranked system is the one developed by Yuret (2004) , which combines two Na\u00efve Bayes statistical models, one based on surrounding collocations and another one based on a bag of words around the target word. The statistical models are built based on SemCor and WORDNET, for an overall disambiguation accuracy of 64.1%. All previous systems use supervised methods, thus requiring a large amount of human intervention to annotate the training data. In the context of the current multilingual society, this strong requirement is even increased, since the so-called \"sense-tagged data bottleneck problem\" is emphasized. To address this problem, different methods have been proposed. This includes the automatic generation of sense-tagged data using monosemous relatives (Leacock et al., 1998) , automatically bootstrapped disambiguation patterns (Mihalcea, 2002) , parallel texts as a way to point out word senses bearing different translations in a second language (Diab, 2004) , and the use of volunteer contributions over the Web (Mihalcea and Chklovski, 2003) . More recently, Wikipedia has been used as a source of sense annotations for building a sense annotated corpus which can be used to train accurate sense classifiers (Mihalcea, 2007) . Even though the Wikipedia-based sense annotations were found reliable, leading to accurate sense classifiers, one of the limitations of the approach is that definitions and annotations in Wikipedia are available almost exclusively for nouns. On the other hand, the increasing availability of large-scale rich (lexical) knowledge resources seems to provide new challenges to knowledge-based approaches (Navigli and Velardi, 2005; Mihalcea, 2005) . Our hypothesis is that the complementarity of knowledge-based methods and corpus-based ones is the key to improve WSD effectiveness. The aim of the paper is to define a cascade hybrid method able to exploit both linguistic information coming from WORDNET-like dictionaries and statistical information coming from sense-annotated corpora. A Hybrid Strategy for WSD The goal of WSD algorithms consists in assigning a word w i occurring in a document d with its appropriate meaning or sense s. The sense s is selected from a predefined set of possibilities, usually known as sense inventory. We adopt ITALWORDNET (Roventini et al., 2003) as sense repository. The algorithm is composed by two procedures: 1. JIGSAW -It is a knowledge-based WSD algorithm based on the assumption that the adoption of different strategies depending on Part-of-Speech (PoS) is better than using always the same strategy. A brief description of JIGSAW is given in Section 5, more details are reported in Basile et al. (2007b) , Basile et al. (2007a) and Semeraro et al. (2007) . 2. Supervised learning procedure -A K-NN classifier (Mitchell, 1997) , trained on MultiSemCor corpus 3 is adopted. Details are given in Section 4. MultiSem-Cor is an English/Italian parallel corpus, aligned at the word level and annotated with PoS, lemma and word senses. The parallel corpus is created by exploiting the SemCor corpus 4 , which is a subset of the English Brown corpus containing about 700,000 running words. In SemCor, all the words are tagged by PoS, and more than 200,000 content words are also lemmatized and sense-tagged with reference to the WORDNET lexical database. SemCor has been used in several supervised WSD algorithms for English with good results. MultiSemCor contains less annotations than SemCor, thus the accuracy and the coverage of the supervised learning for Italian might be affected by poor training data. The idea is to combine both procedures in a hybrid WSD approach. A first choice might be the adoption of the supervised method as first attempt, then JIGSAW could be applied to words not covered in the first step. Differently, JIGSAW might be applied first, then leaving the supervised approach to disambiguate the remaining words. An investigation is required in order to choose the most effective combination. Supervised Learning Method The goal of supervised methods is to use a set of annotated data as little as possible, and at the same time to make the algorithm general enough to be able to disambiguate all content words in a text. We use MultiSemCor as annotated corpus, since at present it is the only available semantic annotated resource for Italian. The algorithm starts with a preprocessing stage, where the text is tokenized, stemmed, lemmatized and annotated with PoS. Also, the collocations are identified using a sliding window approach, where a collocation is considered to be a sequence of words that forms a compound concept defined in ITALWORDNET (e.g. artificial intelligence). In the training step, a semantic model is learned for each PoS, starting with the annotated corpus. These models are then used to disambiguate words in the test corpus by annotating them with their corresponding meaning. The models can only handle words that were previously seen in the training corpus, and therefore their coverage is not 100%. \u2022 Nouns -2 features are included in feature vector: the first noun, verb, or adjective before the target noun, within a window of at most three words to the left, and its PoS; \u2022 Verbs -4 features are included in feature vector: the first word before and the first word after the target verb, and their PoS; \u2022 Adjectives -all the nouns occurring in two windows, each one of six words (before and after the target adjective) are included in the feature vector; \u2022 Adverbs -the same as for adjectives, but vectors contain adjectives rather than nouns. The label of each feature vector consists of the target word and the corresponding sense, represented as word#sense. Table 1 describes the number of vectors for each PoS. To annotate (disambiguate) new text, similar vectors are built for all content-words in the text to be analyzed. Consider the target word bank, used as a noun. The algorithm catches all the feature vectors of bank as a noun from the training model, and builds the feature vector v f for the target word. Then, the algorithm computes the similarity between each training vector and v f and ranks the training vectors in decreasing order according to the similarity value. The similarity is computed as Euclidean distance between vectors, where POS distance is set to 1, if POS tags are different, otherwise it is set to 0. Word distances are computed by using the Levenshtein metric, that measures the amount of difference between two strings as the minimum number of operations needed to transform one string into the other, where an operation is an insertion, deletion, or substitution of a single character (Levenshtein, 1966) . Finally, the target word is labeled with the most frequent sense in the first K vectors. JIGSAW -Knowledge-based Approach JIGSAW is a WSD algorithm based on the idea of combining three different strategies to disambiguate nouns, verbs, adjectives and adverbs. The main motivation behind our approach is that the effectiveness of a WSD algorithm is strongly influenced by the POS tag of the target word. JIGSAW takes as input a document d = (w 1 , w 2 , . . . , w h ) and returns a list of synsets X = (s 1 , s 2 , . . . , s k ) in which each element s i is obtained by disambiguating the target word w i based on the information obtained from the sense repository about a few immediately surrounding words. We define the context C of the target word to be a window of n words to the left and another n words to the right, for a total of 2n surrounding words. The algorithm is based on three different procedures for nouns, verbs, adverbs and adjectives, called JIGSAW nouns , JIGSAW verbs , JIGSAW others , respectively. JIGSAW nouns -Given a set of nouns W = {w 1 , w 2 , . . . , w n }, obtained from document d, with each w i having an associated sense inventory S i = {s i1 , s i2 , . . . , s ik } of possible senses, the goal is assigning each w i with the most appropriate sense s ih \u2208 S i , according to the similarity of w i with the other words in W (the context for w i ). The idea is to define a function \u03d5(w i , s i j ), w i \u2208 W , s i j \u2208 S i , that computes a value in [0, 1] representing the confidence with which word w i can be assigned with sense s i j . In order to measure the relatedness of two words we adopted a modified version of the Leacock and Chodorow (1998) measure, which computes the length of the path between two concepts in a hierarchy by passing through their Most Specific Subsumer (MSS). We introduced a constant factor depth which limits the search for the MSS to depth ancestors, in order to avoid \"poorly informative\" MSSs. Moreover, in the similarity computation, we introduced both a Gaussian factor G(pos(w i ), pos(w j )), which takes into account the distance between the position of the words in the text to be disambiguated, and a factor R(k), which assigns s ik with a numerical value, according to the frequency score in ITALWORDNET. JIGSAW verbs -We define the description of a synset as the string obtained by concatenating the gloss and the sentences that ITALWORDNET uses to explain the usage of a synset. JIGSAW verbs includes, in the context C for the target verb w i , all the nouns in the window of 2n words surrounding w i . For each candidate synset s ik of w i , the algorithm computes nouns(i, k), that is the set of nouns in the description for s ik . Then, for each w j in C and each synset s ik , the following value is computed: (1) max jk = max w l \u2208nouns(i,k) sim(w j ,w l ,depth) where sim(w j ,w l ,depth) is the same similarity measure adopted by JIGSAW nouns . Finally, an overall similarity score among s ik and the whole context C is computed: (2) \u03d5(i, k) = R(k) \u2022 \u2211 w j \u2208C G(pos(w i ), pos(w j )) \u2022 max jk \u2211 h G(pos(w i ), pos(w h )) where both R(k) and G(pos(w i ), pos(w j )), that gives a higher weight to words closer to the target word, are defined as in JIGSAW nouns . The synset assigned to w i is the one with the highest \u03d5 value. JIGSAW others -This procedure is based on the WSD algorithm proposed in Banerjee and Pedersen ( 2002 ). The idea is to compare the glosses of each candidate sense for the target word to the glosses of all the words in its context. Experiments The main goal of our investigation is to study the behavior of the hybrid algorithm when available training resources are not much reliable, e.g. when a lower number of sense descriptions is available, as for Italian. The hypothesis we want to evaluate is that corpus-based methods and knowledge-based ones can be combined to improve the accuracy of each single strategy. Experiments have been performed on a standard test collection in the context of the All-Words-Task, in which WSD algorithms attempt to disambiguate all words in a text. Specifically, we used the EVALITA WSD All-Words-Task dataset 5 , which consists of about 5,000 words labeled with ITALWORDNET synsets. An important concern for the evaluation of WSD systems is the agreement rate between human annotators on word sense assignment. While for natural language subtasks like part-of-speech tagging, there are relatively well defined and agreed-upon criteria of what it means to have the \"correct\" part of speech assigned to a word, this is not the case for word sense assignment. Two human annotators may genuinely disagree on their sense assignment to a word in a context, since the distinction between the different senses for a commonly used word in a dictionary like WORDNET tend to be rather fine. What we would like to underline here is that it is important that human agreement on an annotated corpus is carefully measured, in order to set an upper bound to the performance measures: it would be futile to expect computers to agree more with the reference corpus that human annotators among them. For example, the inter-annotator agreement rate during the preparation of the SENSEVAL-3 WSD English All-Words-Task dataset (Agirre et al., 2007) was approximately 72.5%. Unfortunately, for EVALITA dataset, the inter-annotator agreement has not been measured, one of the reasons why the evaluation for Italian WSD is very hard. In our experiments, we reasonably selected different baselines to compare the performance of the proposed hybrid algorithm. Integrating JIGSAW into a supervised learning method The design of the experiment is as follows: firstly, corpus-based WSD is applied to words for which training examples are provided, then JIGSAW is applied to words not covered by the first step, with the advantage of knowing the senses of the context words already disambiguated in the first step. The performance of the hybrid method was measured in terms of precision (P), recall (R), F-measure (F) and the percentage A of disambiguation attempts, computed by counting the words for which a disambiguation attempt is made (the words with no training examples or sense definitions cannot be disambiguated). Table 2 shows the baselines chosen to compare the hybrid WSD algorithm on the All-Words-Task experiments. The simplest baseline consists in assigning a random sense to each word (Random), another common baseline in Word Sense Disambiguation is first sense (1 st sense): each word is tagged using the first sense in ITALWORDNET that is the most commonly (frequent) used sense. The other baselines are the two methods combined in the hybrid WSD, taken separately, namely JIGSAW and K-NN, and the basic hybrid algorithm \"K-NN + 1 st sense\", which applies the supervised method, and then adopts the first sense heuristic for the words without examples into training data. The K-NN baseline achieves the highest precision, but the lowest recall due to the low coverage in the training data (19.38%) makes this method useless for all practical purposes. Notice that JIGSAW was the only participant to EVALITA WSD All-Words-Task, therefore it currently represents the only available system performing WSD All-Words task for the Italian language. 59.58 37.38 45.93 62.74 Table 3 reports the results obtained by the hybrid method on the EVALITA dataset. We study the behavior of the hybrid approach with relation to that of JIGSAW, since this specific experiment aims at evaluating the potential improvements due to the inclusion of JIGSAW into K-NN. Different runs of the hybrid method have been performed, each run corresponding to setting a specific value for \u03d5 (the confidence with which a word w i is correctly disambiguated by JIGSAW). In each different run, the disambiguation carried out by JIGSAW is considered reliable only when \u03d5 values exceed a certain threshold, otherwise any sense is assigned to the target word (this the reason why A decreases by setting higher values for \u03d5). A positive effect on precision can be noticed by varying \u03d5 between 0.50 and 0.90. It tends to grow and overcomes all the baselines, but a corresponding decrease of recall is observed, as a consequence of more severe constraints set on \u03d5. Anyway, recall is still too low to be acceptable. Better results are achieved when no restriction is set on \u03d5 (K-NN+JIGSAW in Table 3): the recall is significantly higher than that obtained in the other runs. On the other hand, the precision reached in this run is lower than in the others, but it is still acceptable. To sum up, two main conclusions can be drawn from the experiments: \u2022 when no constraint is set on the knowledge-based method, the hybrid algorithm K-NN+JIGSAW in general outperforms both JIGSAW and K-NN taken singularly (F values highlighted in bold in Tables 3 and 4 ); \u2022 when thresholding is introduced on \u03d5, no improvement is observed on the whole compared to K-NN+JIGSAW. A deep analysis of results revealed that lower recall was achieved for verbs and adjectives rather than for nouns. Indeed, disambiguation of Italian verbs and adjectives is very hard, but the lower recall is probability due also to the fact that JIGSAW uses glosses for verbs and adjectives disambiguation. As a consequence, the performance depends on the accuracy of word descriptions in the glosses, while for nouns the algorithm relies only the semantic relations between synsets. Integrating supervised learning into JIGSAW In this experiment we test whether the supervised algorithm can help JIGSAW to disambiguate more accurately. The experiment has been organized as follows: JIGSAW is applied to assign the most appropriate sense to the words which can be disambiguated with a high level of confidence (by setting the \u03d5 threshold), then the remaining words are disambiguated by the K-NN classifier. The dataset and the baselines are the same as in Section 6.1. Note that, differently from the experiments described in Table 3 , run JIGSAW+K-NN has not been reported since JIGSAW covered all the target words in the first step of the cascade hybrid method, then the K-NN method is not applied at all. Therefore, for this run, results obtained by JIGSAW+K-NN correspond to those get by JIGSAW alone (reported in Table 2 ). Table 4 reports the results of all the runs. Results are very similar to those obtained in the runs K-NN+JIGSAW with the same settings on \u03d5. Precision tends to grow, while a corresponding decrease in recall is observed. The main outcome is that the overall accuracy of the best combination JIGSAW+K-NN (\u03d5 \u2265 0.70, F value highlighted in bold in Table 4 ) is outperformed by K-NN+JIGSAW. Indeed, this result was largely expected because the small size of the training set does not allow to cover words not disambiguated by JIGSAW. Even if K-NN+JIGSAW is not able to achieve the baselines set on the 1 st sense heuristic (first and last row in Table 2 ), we can conclude that a step toward these hard baselines has been moved. The main outcome of the study is that the best hybrid method on which further investigations are possible is K-NN+JIGSAW. Conclusions and Future Work This paper presented a method for solving the semantic ambiguity of all words contained in a text. We proposed a hybrid WSD algorithm that combines a knowledgebased WSD algorithm, called JIGSAW, which we designed to work by exploiting WORDNET-like dictionaries as sense repository, with a supervised machine learning algorithm (K-Nearest Neighbor classifier). The idea behind the proposed approach is that JIGSAW can cope with the possible lack of training data, while K-NN can improve the precision of JIGSAW method when training data are available. This makes the proposed method suitable for disambiguation of languages for which the available resources are lacking in training data or sense definitions, such as Italian. Extensive experimental sessions were performed on the EVALITA WSD All-Words-Task dataset, the only dataset available for the evaluation of WSD systems for the Italian language. An investigation was carried out in order to evaluate several combinations of JIGSAW and K-NN. The main outcome is that the most effective hybrid WSD strategy is the one that runs JIGSAW after K-NN, which outperforms both JIG-SAW and K-NN taken singularly. Future work includes new experiments with other combination methods, for example the JIGSAW output could be used as feature into supervised system or other different supervised methods could be exploited.",
    "abstract": "This paper presents a WSD strategy which combines a knowledge-based method that exploits sense definitions in a dictionary and relations among senses in a semantic network, with supervised learning methods on annotated corpora. The idea behind the approach is that the knowledge-based method can cope with the possible lack of training data, while supervised learning can improve the precision of a knowledge-based method when training data are available. This makes the proposed method suitable for disambiguation of languages for which the available resources are lacking in training data or sense definitions. In order to evaluate the effectiveness of the proposed approach, experimental sessions were carried out on the dataset used for the WSD task in the EVALITA 2007 initiative, devoted to the evaluation of Natural Language Processing tools for Italian. The most effective hybrid WSD strategy is the one that integrates the knowledgebased approach into the supervised learning method, which outperforms both methods taken singularly.",
    "countries": [
        "Italy"
    ],
    "languages": [
        "Italian",
        "English"
    ],
    "numcitedby": "3",
    "year": "2008",
    "month": "",
    "title": "Combining Knowledge-based Methods and Supervised Learning for Effective {I}talian Word Sense Disambiguation"
}