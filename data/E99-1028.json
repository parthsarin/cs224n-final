{
    "article": "This paper describes unsupervised learning algorithm for disambiguating verbal word senses using term weight learning. In our method, collocations which characterise every sense are extracted using similarity-based estimation. For the results, term weight learning is performed. Parameters of term weighting are then estimated so as to maximise the collocations which characterise every sense and minimise the other collocations. The resuits of experiment demonstrate the effectiveness of the method. Introduction One of the major approaches to disambiguate word senses is supervised learning (Gale et al., 1992) , (Yarowsky, 1992) , (Bruce and Janyce, 1994) , (Miller et al., 1994) , (Niwa and Nitta, 1994) , (Luk, 1995) , (Ng and Lee, 1996) , (Wilks and Stevenson, 1998) . However, a major obstacle impedes the acquisition of lexical knowledge from corpora, i.e. the difficulties of manually sensetagging a training corpus, since this limits the applicability of many approaches to domains where this hard to acquire knowledge is already available. This paper describes unsupervised learning algorithm for disambiguating verbal word senses using term weight learning. In our approach, an overlapping clustering algorithm based on Mutual information-based (Mu) term weight learning between a verb and a noun is applied to a set of verbs. It is preferable that Mu is not low (Mu(x,y) _> 3) for a reliable statistical analysis (Church et al., 1991) . However, this suffers from the problem of data sparseness, i.e. the co-occurrences which are used to represent every distinct senses does not appear in the test data. To attack this problem, for a low Mu value, we distinguish between unobserved co-occurrences that are likely to occur in a new corpus and those that are not, by using similarity-based estimation between two cooccurrences of words. For the results, term weight learning is performed. Parameters of term weighting are then estimated so as to maximise the collocations which characterise every sense and minimise the other collocations. In the following sections, we first define a polysemy from the viewpoint of clustering, then describe how to extract collocations using similaritybased estimation. Next, we present a clustering method and a method for verbal word sense disambiguation using the result of clustering. Finally, we report on an experiment in order to show the effect of the method. 2 Polysemy in Context Most previous corpus-based WSD algorithms are based on the fact that semantically similar words appear in a similar context. Semantically similar verbs, for example, co-occur with the same nouns. The following sentences from the Wall Street Journal show polysemous usages of take. (sl) Coke has typically taken a minority stake in such ventures. (sl') Guber and pepers tried to buy a stake in mgm in 1988. (s2) That process of sorting out specifies is likely to take time. (s2') We spent a lot of time and money in building our group of stations. Let us consider a two-dimensional Euclidean space spanned by the two axes, each associated with stake and time, and in which take is assigned a vector whose value of the i-th dimension is the value of Mu between the verb and the noun assigned to the i-th axis. Take co-occurs with the two nouns, while buy and spend co-occur only with one of the two nouns. Therefore, the distances between take and these two verbs are large In order to capture the synonymy of take with the two verbs correctly, one has to decompose the vector assigned to take into two component vectors, takel and take2, each of which corresponds to one of the two distinct usages of take (in Figure 1 ). (we call them hypothetical verbs in the following). The decomposition of a vector into a set of its component vectors requires a proper decomposition of the context in which the word occurs. Furthermore, in a general situation, a polysemous verb co-occurs with a large group of nouns and one has to divide the group of nouns into a set of subgroups, each of which correctly characterises the context for a specific sense of the polysemous word. Therefore, the algorithm has to be able to determine when the context of a word should be divided and how. The approach proposed in this paper explicitly introduces new entities, i.e. hypothetical verbs when an entity is judged polysemous and associates them with contexts which are sub-contexts of the context of the original entity\u2022 Our algorithm has two basic operations, splitting and lumping\u2022 Splitting means to divide a polysemous verb into two hypothetical verbs and lumping means to combine two hypothetical verbs to make one verb out of them (Fukumoto and Tsujii, 1994) . 3 Extraction of Collocations Given a set of verbs, vl, v2,--., v,~, the algorithm produces a set of semantic clusters, which are ordered in the ascending order of their semantic deviation values\u2022 Semantic deviation is a measure of the deviation of the set in an n-dimensional Euclidean space, where n is the number of nouns which co-occur with the verbs\u2022 In our algorithm, if vi is non-polysemous, it belongs to at least one of the resultant semantic clusters. If it is polysemous, the algorithm splits it into several hypothetical verbs and each of them belongs to at least one of the clusters\u2022 Table 1 summarises the sample result from the set {close, open, end}. '. Mu(vi,n) is the value of mutual information between a verb and a noun. If a polysemous verb is followed by a noun which belongs to a set of the nouns, the meaning of the verb within the sentence can be determined accordingly, because a set of the nouns characterises one of the possible senses of the verb. The basic assumption of our approach is that a polysemous verb could not be recognised correctly if collocations which represent every distinct senses of a polysemous verb were not weighted correctly. In particular, for a low Mu value, we have to distinguish between those unobserved co-occurrences that are likely to occur in a new corpus and those that are not. We extracted these collocations which represent every distinct senses of a polysemous verb using similarity-based estimation. Let (wv, nq) and (w~i , nq) be two different co-occurrence pairs. We say that wv and nq are semantically related if w~i and nq are semantically related and (wp, nq) and (w~i , nq) are semantically similar (Dagan et al., 1993) . Using the estimation, collocations are extracted and term weight learning is performed. Parameters of term weighting are then estimated so as to maximise the collocations which characterise every sense and minimise the other collocations. Let v be two senses, wp and wl, but not be judged correctly. Let N_Setl be a set of nouns which co-occur with both v and wp, but do not cooccur with wl. Let also N.Set2 be a set of nouns which co-occur with both v and wl, but do not co-occur with wp, and N-Set3 be a set of nouns which co-occur with v, wp and wl. 2, (a-l ) is the procedure to extract collocations which were not weighted correctly and (a-2) and (b) are the procedures to extract other words which were not weighted correctly. Sim (vi, v~) in Figure 2 is the similarity value ofvl and v~ which is measured by the inner product of their normalised vectors, and is shown in formula (1). v i \u00d7 ~)~ vi = (v~:,..-,v~) (1) { Mu(vi,nj) ifMu(vi,nj) >_ 3 vii = 0 otherwise (2) In formula (1), k is the number of nouns which co-occur with vi. vii is the Mu value between vl and nj. We recall that wp and nq are semantically related if w~i and nq are semantically related and (wv,n q) and (w'pi,nq) are semantically similar. (a) ' and nq are se-in Figure 2 , we represent wpi mantically related when Mu(w~i,nq) >__ 3. Also, (wv,nq) and (w'pi,nq) are semantically similar if t For wt, we can replace wp with wt, nq 6 N_Sett -N_Sets with nq E N_Set, -N.Sets, and Sim(wp, w'pl) > 0 with Sirn(wt, w'pi) > O. Sim(wp, w~i ) > 0. In (a)of Figure 2 , for example, when (wp,nq) is judged to be a collocation which represents every distinct senses, we set Mu values of (wp,nq) and (v,nq) to a x Mu(wp,nq) and a x Mu(v,r%), 1 < a. On the other hand, when nq is judged not to be a collocation which represents every distinct senses, we set Mu values of these co-occurrence pairs to fl x Mu(wp,nq) and /3 x Mu(v,nq), 0 < j3 < 1 2  Let v be an element included in both Seti and Set 3. To determine whether v has two senses wp, where wp is an element of Seti, and wl, where wl is an element of Set3, we make two clusters, as shown in (4) and their merged cluster, as shown in (5). {vl, wp}, {v=, wl,---, (4) {v, wp,---, Here, v and wp are verbs and wl, \u2022 \u2022 -, w,~ are verbs or hypothetical verbs, wl, \"-', wp, -.-, w,~ in (5) satisfy Dev(v, wi) < Dev (v,wj) (1 < i _< j < n). vl and v2 in (4) are new hypothetical verbs which correspond to two distinct senses of v. If v is a polysemy, but is not recognised correctly, then Extraction-of-Collocations shown in Figure 2 is applied. In Extraction-of-Collocations, for (4) and ( 5 ), a and /3 are estimated so as to satisfy ( 6 ) and (7). D,v(,.,,,~,,)_< O~v(,,~,,,-.-,~,,,,.-,,=n) (6) Dev(v2,w,,...,w,~) < Oev (v,w,,...,wp,..,,w,~) (7) The whole process is repeated until the newly obtained cluster, Setx, contains all the verbs in the input or the ICS is exhausted. Word Sense Disambiguation We used the result of our clustering analysis, which consists of pairs of collocations of a distinct sense of a polysemous verb and a noun. Let v has senses vl, v2, \"--, v,~. The sense of a polysemous verb v is vi ( 1 < i < m) if t ~- Ej Mu(vi,ni) is largest among Ej Mu(vl,nj), \u2022 .. and Et~ Mu (v,~,nj) . Here, t is the number of nouns which co-occur with v within the five-word distance. Experiment This section describes an experiment conducted to evaluate the performance of our method. Data The data we have used is 1989 Wall Street Journal (WSJ) in ACL/DCI CD-ROM which consists of 2,878,688 occurrences of part-of-speech tagged words (Brill, 1992) . The inflected forms of the same nouns and verbs are treated as single units. For example, 'book' and 'books' are treated as single units. We obtained 5,940,193 word pairs in a window size of 5 words, 2,743,974 different word pairs. From these, we selected collocations of a verb and a noun. As a test data, we used 40 sets of verbs. We selected at most four senses for each verb, the best sense, from among the set of the Collins dictionary and thesaurus (McLeod, 1987) , is determined by a human judge. Results The results of the experiment are shown in Table 2 , Table 3 and Table 4 . In Table 2 , 3 and 4, every polysemous verb has two, three and four senses, respectively. Column 1 in Table 2 , 3 and 4 shows the test data. The verb v is a polysemous verb and the remains show these senses. For example, 'cause' of (1) in Table 2 has two senses, 'effect' and 'produce'. 'Sentence' shows the number of sentences of occurrences of a polysemous verb, and column 4 shows their distributions. 'v' shows the number of polysemous verbs in the data. W in Table 2 shows the number of nouns which co-occur with wp and wl. v n W shows the number of nouns which co-occur with both v and W. In a similar way, W in Table 3 and 4 shows the number of nouns which co-occur with wp ~ w2 and wp ~ w3, respectively. 'Correct' shows the performance of our method. 'Total' in the bottom of Table 4 shows the performance of 40 sets of verbs. Table 2 shows when polysemous verbs have two senses, the percentage attained at 80.0%. When polysemous verbs have three and four senses, the percentage was 77.7% and 76.4%, respectively. This shows that there is no striking difference among them. Column 8 and 9 in Table 2 , 3 and ,---, Set.,,,,;-,, } where Setp = {vi, vj} and Setq = {vk,vt} E ICS (1 ~ p < q < m) satisfy Dev (vi, vj) Mu < 3 shows the number of nouns which satisfy Mu(wp,n) < 3 or Mu(wt,n) <3. 'Correct' shows the total number of collocations which could be estimated correctly. Table 2 ~ 4 show that the frequency of v is proportional to that of v M W. As a result, the larger the number of v M W is, the higher the percentage of correctness of collocations is. Its = {sal 7 Related Work Unsupervised learning approaches, i.e. to determine the class membership of each object to be classified in a sample without using sensetagged training examples of correct classifications, is considered to have an advantage over supervised learning algorithms, as it does not require costly hand-tagged training data. Schiitze and Zernik's methods avoid tagging each occurrence in the training corpus. Their methods associate each sense of a polysemous word with a set of its co-occurring words (Schutze, 1992) , (Zernik, 1991) . Ifa word has several senses, then the word is associated with several different sets of co-occurring words, each of which corresponds to one of the senses of the word. The weakness of Schiitze and Zernik's method, however, is that it solely relies on human intuition for identifying different senses of a word, i.e. the human editor has to determine, by her/his intuition, how many senses a word has, and then identify the sets of co-occurring words that correspond to the different senses. Yarowsky used an unsupervised learning procedure to perform noun WSD (Yarowsky, 1995) . This algorithm requires a small number of training examples to serve as a seed. The result shows that the average percentage attained was 96.1% for 12 nouns when the training data was a 460 million word corpus, although Yarowsky uses only nouns and does not discuss distinguishing more than two senses of a word. A more recent unsupervised approach is described in (Pedersen and Bruce, 1997) . They presented three unsupervised learning algorithms that distinguish the sense of an ambiguous word in untagged text, i.e. McQuitty's similarity analysis, Ward's minimum-variance method and the EM algorithm. These algorithms assign each instance of an ambiguous word to a known sense definition based solely on the values of automatically identifiable features in text. Their methods are perhaps the most similar to our present work. They reported that disambiguating nouns is more successful rather than adjectives or verbs and the best result of verbs was McQuitty's method (71.8%), although they only tested 13 ambiguous words (of these, there are only 4 verbs). Furthermore, each has at most three senses. In future, we will compare our method with their methods using the data we used in our experiment. Conclusion In this study, we proposed a method for disambiguating verbal word senses using term weight learning based on similarity-based estimation. The results showed that when polysemous verbs have two, three and four senses, the average percentage attained at 80.0%, 77.7% and 76.4%, respectively. Our method assumes that nouns which co-occur with a polysemous verb is disambiguated in advance. In future, we will extend our method to cope with this problem and also apply our  method to not only a verb but also a noun and an adjective sense disambiguation to evaluate our method. Acknowledgments The authors would like to thank the reviewers for their valuable comments. This work was supported by the Grant-in-aid for the Japan Society for the Promotion of Science(JSPS).",
    "abstract": "This paper describes unsupervised learning algorithm for disambiguating verbal word senses using term weight learning. In our method, collocations which characterise every sense are extracted using similarity-based estimation. For the results, term weight learning is performed. Parameters of term weighting are then estimated so as to maximise the collocations which characterise every sense and minimise the other collocations. The resuits of experiment demonstrate the effectiveness of the method.",
    "countries": [
        "Japan"
    ],
    "languages": [
        ""
    ],
    "numcitedby": "7",
    "year": "1999",
    "month": "June",
    "title": "Word Sense Disambiguation in Untagged Text based on Term Weight Learning"
}