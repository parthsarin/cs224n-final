{
    "article": "This paper describes a partial parser that assigns syntactic structures to sequences of partof-speech tags. The program uses the maximum entropy parameter estimation method, which Mlows a flexible combination of different knowledge sources: the hierarchical structure, parts of speech and phrasal categories. In effect, the parser goes beyond simple bracketing and recognises even fairly complex structures. We give accuracy figures for different applications of the parser. Introduction The maximum entropy framework has proved to be a powerful modelling tool in many areas of natural language processing. Its applications range from sentence boundary disambiguation (Reynar and Ratnaparkhi, 1997) to part-of-speech tagging (Ratnaparkhi, 1996) , parsing (Ratnaparkhi, 1997) and machine translation (Berger et al., 1996) . In the present paper, we describe a partial parser based on the maximum entropy modelling method. After a synopsis of the maximum entropy framework in section 2, we present the motivation for our approach and the techniques it exploits (sections 3 and 4). Applications and results are the subject of the sections 5 and 6. Maximum Entropy Modelling The expressiveness and modelling power of the maximum entropy approach arise from its ability to combine information coming from different knowledge sources. Given a set X of possible histories and a set Y of futures, ~e can characterise events from the joint event space X, Y by defining a number of features, i.e., equivalence relations over X x Y. By defining these features, we express our insights about information relevant to modelling. In such a formalisation, the maximum entropy technique consists in finding a model that (a) fits the empirical expectations of the predefined features, and (b) does not assume anything specific about events that are not subject to constraints imposed by the features. In other words, we search for the maximum entropy probability distribution p*: p\" = argmax g (p) pEP where P = {p:p meets the empirical feature ex-pectations} and H(p) denotes the entropy of p. For parameter estimation, we can use the Improved Iterative Scaling (IIS) algorithm (Berger et all., 1996) , which assumes p to have the form: p(x, y) = where fi : X x Y ~ {0, 1} is the indicator function of the i-th feature, Ai the weight assigned to this feature, and Z a normalisation constant. IIS iteratively adjusts the weights (Ai) of the features; the model converges to the maximum entropy distribution. One of the most attractive properties of the maximum entropy approach is its ability to cope with feature decomposition and overlapping features. In the following sections, we will show how these advantages can be exploited for partial parsing, i.e., the recognition of syntactic structures of limited depth. 3 Context Information for Parsing An interesting feature of many partial parsers is that they recognise phrase boundaries mainly on the basis of cues provided by strictly local contexts. Regardless of whether or not abstractions such as phrases occur in the model, most of the relevant information is contained directly in the sequence of words and part-of-speech tags to be processed. An archetypal representative of this approach is the method described by Church (1988) , who used corpus frequencies to determine the boundaries of simple non, recursive NPs. For each pair of part-of-speech tags ti, tj, the probability of an NP boundary (' [' or ']') occurring between ti and tj is computed. On the basis of these context probabilities, the program inserts the symbols ' [' and '] ' into sequences of part-of-speech tags. Information about lexical contexts also significantly improves the performance of deep parsers. For instance, Joshi and Srinivas (1994) encode partial structures in the Tree Adjoining Grammar framework and use tagging techniques to restrict a potentially very large amount of alternative structures. Here, the context incorporates information about both the terminal yield and the syntactic structure built so far. Local configurations of words and p~irts of speech are a particularly important knowledge source for lexicalised grammars. In the Link Grammar framework (Lagerty et al., 1992; Della Pietra et al., 1994) , strictly local contexts are naturally combined with long-distance information coming from long-range trigrams. Since modelling syntactic context is a very knowledge-intensive problem, the maximum entropy framework seems to be a particularly appropriate approach. Ratnaparkhi (1997) introduces several conteztual predicates which provide rich information about the syntactic context of nodes in a tree (basically, the structure and category of nodes dominated by or dominating the current phrase). These predicates are used to guide the actions of a parser. The use of a rich set of contextual features is also the basic idea of the approach taken by Hermjakob and Mooney (1997), who employ predicates capturing syntactic and semantic context in their parsing and machine translation system. A Partial Parser for German The basic idea underlying our appr*oach to partial parsing can be characterised as follows: \u2022 An appropriate encoding format makes it possible to express all relevant lexical, categorial and structural information in a finite alphabet of structural tags assigned to words (section 4.1). \u2022 Given a sequence of words tagged with part-of-speech labels, a Markov model is used to determine the most probable sequence of structural tags (section 4.2). \u2022 Parameter estimation is based on the maximum entropy technique, which takes full advantage of the multi-dimensional character of the structural tags (section 4.3). The details of the method employed are explained in the remainder of this section. Relevant Contextual Information Three pieces of information associated with a word wi are considered relevant to the parser: \u2022 the part-of-speech tag ti assigned to wi \u2022 the structural relation ri between wi and its predecessor wi-1 \u2022 the syntactic category ca of parent(wi) On the basis of these three dimensions, structural tags are defined as triples of the form Si = (ti,ri,ca). For better readability, we will sometimes use attribute-value matrices to denote such tags. = Since we consider structures of limited depth, only seven values of the REL attribute are distinguished. r/= 0 if parent(wi) = parent(wi_l) + if parent(wi) = parent2(wi_l) ++ if parent(wi) = parent3(wi_l) - if parent2(wi) = parent(wi_l) -- if parent3(wi) = parent(wi_l) = if parent2(wi) = parent2(wi_t) 1 else If more than one of the conditions above are met, the first of the corresponding tags in the list is assigned. Figure 1 exemplifies the encoding format. A Markovian Parser The task of the parser is to determine the best sequence of triples (ti, ri, Ci ) for a given sequence of part-of-speech tags (to, tl,...tn) . Since the attributes TAG, REL and CAT can take only a finite number of values, the number of such triples will also be finite, and they can be used to construct a 2-nd order Markov model. The triples Si = (ti,ri,ci) are states of the model, which emits POS tags (tj) as signals. In this respect, our approach does not much differ from standard part-of-speech tagging techniques. We simply assign the most probable sequence of structural tags S = (So, &,..., &) to a sequence of part-of-speech tags T = (to, tt,...,tn) . Assuming the Markov property, we obtain: argmax P( SIT) (1) S = argmax P(S). P(TIS) R k = argmax rI P(SilSi-2, Si-t)P(tilSi) R i=1 The part-of-speech tags are encoded in the structural tag (the ti dimension), so S uniquely determines T. Therefore, we have P(ti[Si) = 1 if Si = (ti, ri, ci) and 0 otherwise, which simpli-\u2022 ties calculations. Parameter Estimation The more interesting aspect of our parser is the estimation of contextual probabilities, i.e., calculating the probability of a structural tag Si (the \"future\") conditional on its immediate predecessors Si-1 and Si-2 (the \"history\"). The labels are In the following two subsections, we contrast the traditional HMM estimation method and the maximum entropy approach. 4.3.1 Linear Interpolation One possible way of parameter estimation is to use standard HMM techniques while treating the triples Si = (ti, ci,ri} as atoms. Trigram probabilities are estimated from an annotated corpus by using relative frequencies r: =/(&-2,&-l,&) /(Si-2, Si-1) A standard method of handling sparse data is to use a linear combination of unigrams, bigrams, and trigrams/5: /5(&l&-2,&-,) = Air(&) +X2r(S/l&-1) +Aar(&l&-2, &-l) The Ai denote weights for different context sizes and sum up to 1. They are commonly estimated by deleted interpolation (Brown et hi., 1992) . Features A disadvantage of the traditional method is that it considers only full n-grams Si-n+l, ..., Si and ignores a lot of contextual information, such as regular behaviour of the single attributes TAG, REL and CAT. The maximum entropy approach offers an attractive alternative in this respect since we are now free to define features accessing different constellations of the attributes. For instance, we can abstract over one or more dimensions, like in the context description in figure 1 . history future [REL: 0 REL: !TAG: NNJ Such \"partial n-grams\" permit a better exploitation of information coming from contexts observed in the training data. We say that a feature fk defined by the triple (Mi-2, Mi-1, Mi) of attribute-value matrices is active on a trigram context (S~_2, S~_i, S~) (i.e., fk(S~_ 2, S~_1, S~) = 1) iff Mj unifies with the attribute-value matrix /t'I~ encoding the information contained in S~ for j = i -2, i -1, i. A novel context would on average activate more features than in the standard HMM approach, which treats the (ti, ri, c~> triples as atoms. The actual features are extracted from the training corpus in the following way: we first define a number of feature patterns that say which attributes of a trigram context are relevant. All feature pattern instantiations that occur in the training corpus are stored; this procedure yields several thousands of features for each pattern. After computing the weights Ai of the features occurring in the training sample, we can calculate the contextual probability of a multidimensional structural tag Si following the two tags Si-2 and Si-l: 1 . e~,'~i'Ii(Si-2'&-\"sd p(&l&-2, &-,) = E We achieved the best results with 22 empirically determined feature patterns comprising full and partial n-grams, n _< 3. These patterns are listed in Appendix A. 5 Applications Below, we discuss two applications of our maximum entropy parser: treebank annotation and chunk parsing of unrestricted text. For precise results, see section 6. Treebank Annotation The partial parser described here is used for corpus annotation in a treebank project, cf. (Skut et hi., 1997) . The annotation process is more interactive than in the Penn Treebank approach (Marcus et hi., 1994) , where a sentence is first preprocessed by a partial parser and then edited by a human annotator. In our method, manual and automatic annotation steps are closely interleaved. Figure 3 exemplifies the humancomputer interaction during annotation. The annotations encode four kinds of linguistic information: 1) parts of speech and inflection, 2) structure, 3) phrasal categories (node labels), 4) grammatical functions (edge labels). Part-of-speech tags are assigned in a preprocessing step. The automatic instantiation of labels is integrated into the assignment of structures. The annotator marks the words and phrases to be grouped into a new substructure, and the node and edge labels are inserted by the program, cf. (Brants et al., 1997) . Initially, such annotation increments were just local trees of depth one. In this mode, the annotation of the PP bei etwa acht Millionen Tonnen ([at] around eight million tons) involves three annotation steps (first the number phrase acht Millionen, then the AP, and the PP). Each time, the annotator highlights the immediate constituents of the phrase being constructed. The use of the partial parser described in this paper makes it possible to construct the whole PP in only one step: The annotator marks the words dominated by the PP node, and the internal structure of the new phrase is assigned automatically. This significantly reduces the amount of manual annotation work. The method yields reliable results in the case of phrases that exhibit a fairly rigid internal structure. More than 88% of all NPs, PPs and APs are assigned the correct structure, including PP attachment and complex prenominal modifiers. Further examples of structures recognised by the parser are shown in figure 4 . A more detailed description of the annotation mode can be found in (Brants and Skut, 1998) . NP Chunker Apart from treebank annotation, our partial parser can be used to chunk part-of-speech tagged text into major phrases. Unlike in the previous application, the tool now has to determine not only the internal structure, but also the external boundaries of phrases. This makes the task more difficult; especially for determining FP attachment. However, if we restrict the coverage of the parser to the prenominal part of the NP/PP, it performs quite well, correctly assigning almost 95% of all structural tags, which corresponds to a bracketing precision of ca. 87%. Results In this section, we report the results of a crossvalidation of the parser carried out on the Ne-Gra Treebank (Skut et al., 1997) . The corpus was converted into structural tags and partitioned into a training and a testing part (90% and 10%, respectively). We repeated this procedure ten times with different partitionings;the results of these test runs were averaged. The weights of the features used by the maximum entropy parser were determined with the help of the Maximum Entropy Modelling Toolkit, cf. (Ristad, 1996) . The number of features reached 120,000 for the full training corpus (12,000 sentences). Interestingly, tagging accuracy decreased after after 4-5 iterations of Improved Iterative Scaling, so only 3 iterations were carried out in each of the test runs. The accuracy measures employed are explained as follows. tags: the percentage of structural tags with the correct value r~ of the REL attribute, bracketing: the percentage of correctly recognised nodes, labelled bracketing: like bracketing, but including the syntactic category of the nodes, structural match: the percentage of correctly recognised tree structures (top-level chunks only, labelling is ignored). Treebank Application In the treebank application, information about the external boundaries of a phrase is supplied by an annotator. To imitate this situation, we extracted from the NeGra corpus all sequences of part-of-speech tags spanned by NPs PPs, APs and complex adverbials. Other tags were left out since they do not appear in chunks recognised by the parser. Thus, the sentence shown in figure 3 contributed three substrings to the chunk corpus: ART NN, APPR ADJA NN and APPR ADV CARD NN NN, which would also be typical annotator input. A designated separator character was used to mark chunk boundaries. Table 2 shows the performance of the parser on the chunk corpus. 3 shows precision and recall for the chunking application, i.e., the recognition of kernel NPs and PPs in part-of-speech tagged text. Post-nominal PP attachment is ignored. Unlike in the treebank application, there is no preediting by a human expert. The absolute numbers differ from those in table 2 because certain structures are ignored. The total number of structural tags is higher since we now parse whole sentences rather then separate chunks. In addition to the four accuracy measures defined above, we also give the percentage of chunks with correctly recognised external boundaries (irrespective of whether or not there are errors concerning their internal structure). In the following, we compare the performance of the maximum-entropy parser with the precision of a standard HMM-based approach trained on the same data, but using only the frequencies of complete trigrams, bigrams and unigrams, whose probabilities are smoothed by linear interpolation, as described in section 4.3.1. Figure 5 shows the percentage of correctly assigned values ri of the R.EL attribute depending on the size of the training corpus. Generally, the maximum entropy approach outperforms the linear extrapolation technique by about 0.5% -1.5%, which corresponds to a 1% -3% difference in structural match. The difference decreases as the size of the training sample grows. For the full corpus consisting of 12,000 sentences, the linear interpolation tagger is still inferior to the maximum entropy one, but the difference in precision becomes insignificant (0.2%). Thus, the maximum entropy technique seems to particularly advantageous in the case of sparse data. Conclusion We have demonstrated a partial parser capable of recognising simple and complex NPs, PPs and APs in unrestricted German text. The maximum entropy parameter estimation method allows us to optimally use the context information contained in the training sample. On the other hand, the parser can still be viewed as a Markov model, which guarantees high efficiency (processing in linear time). The program can be trained even with a relatively small amount of treebank data; then it can be J used for parsing unrestricted pre-tagged text. As far as coverage is concerned, our parser can handle recursive structures, which is an advantage compared to simpler techniques such as that described by Church (1988) . On the other hand, the Markov assumption underlying our approach means that only strictly local dependencies are recognised. For full parsing, one would probably need non-local contextual information, such as the long-range trigrams in Link Grammar (Della Pietra et al., 1994) . Our future research will focus on exploiting morphological and lexical knowledge for partial parsing. Lexical context is particularly relevant for the recognition of genitive NP and PP attachment, as well as complex proper names. We hope that our approach will benefit from related work on this subject, cf. (Ratnaparkhi et al., 1994) . Further precision gain can also be achieved by enriching the structural context, e.g. with information about the category of the grandparent node. Many thanks go to Eric S. Ristad. We used his freely available Maximum Entropy. Modelling Toolkit to estimate context probabilities. The symbols r (REL), t (TAG), c (CAT) indicate which attributes are taken into account when generating a feature according to a particular pattern, r sibl is a binary-valued attribute saying whether the word under consideration and its immediate predecessor are siblings (i.e., whether or not r = 0). Appendix B: Tagsets This section contains descriptions of tags used in this paper. These are not complete lists. B.1 Part-of-Speech Tags We use the Stuttgart-T/.ibingen-Tagset. The complete set is described in (Thielen and Schiller, 1995)",
    "abstract": "This paper describes a partial parser that assigns syntactic structures to sequences of partof-speech tags. The program uses the maximum entropy parameter estimation method, which Mlows a flexible combination of different knowledge sources: the hierarchical structure, parts of speech and phrasal categories. In effect, the parser goes beyond simple bracketing and recognises even fairly complex structures. We give accuracy figures for different applications of the parser.",
    "countries": [
        "Germany"
    ],
    "languages": [
        "German"
    ],
    "numcitedby": "78",
    "year": "1998",
    "month": "",
    "title": "A Maximum-Entropy Partial Parser for Unrestricted Text"
}