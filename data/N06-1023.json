{
    "article": "We present an integrated probabilistic model for Japanese syntactic and case structure analysis. Syntactic and case structure are simultaneously analyzed based on wide-coverage case frames that are constructed from a huge raw corpus in an unsupervised manner. This model selects the syntactic and case structure that has the highest generative probability. We evaluate both syntactic structure and case structure. In particular, the experimental results for syntactic analysis on web sentences show that the proposed model significantly outperforms known syntactic analyzers. Introduction Case structure (predicate-argument structure or logical form) represents what arguments are related to a predicate, and forms a basic unit for conveying the meaning of natural language text. Identifying such case structure plays an important role in natural language understanding. In English, syntactic case structure can be mostly derived from word order. For example, the left argument of the predicate is the subject, and the right argument of the predicate is the object in most cases. Blaheta and Charniak proposed a statistical method To address these problems and realize Japanese case structure analysis, wide-coverage case frames are required. For example, let us describe how to apply case structure analysis to the following sentence: bentou-wa taberu lunchbox-TM eat (eat lunchbox) In this sentence, taberu (eat) is a verb, and bentouwa (lunchbox-TM) is a case component (i.e. argument) of taberu. The case marker of \"bentou-wa\" is hidden by the topic marker (TM) \"wa\". The analyzer matches \"bentou\" (lunchbox) with the most suitable case slot (CS) in the following case frame of \"taberu\" (eat) . CS examples taberu ga person, child, boy, \u2022 \u2022 \u2022 wo lunch, lunchbox, dinner, \u2022 \u2022 \u2022 Since \"bentou\" (lunchbox) is included in \"wo\" examples, its case is analyzed as \"wo\". As a result, we obtain the case structure \"\u03c6:ga bentou:wo taberu\", which means that \"ga\" (nominative) argument is omitted, and \"wo\" (accusative) argument is \"bentou\" (lunchbox). In this paper, we run such case structure analysis based on example-based case frames that are constructed from a huge raw corpus in an unsupervised manner. Let us consider syntactic analysis, into which our method of case structure analysis is integrated. Recently, many accurate statistical parsers have been proposed (e.g., (Collins, 1999; Charniak, 2000) for English, (Uchimoto et al., 2000; Kudo and Matsumoto, 2002) for Japanese). Since they somehow use lexical information in the tagged corpus, they are called \"lexicalized parsers\". On the other hand, unlexicalized parsers achieved an almost equivalent accuracy to such lexicalized parsers (Klein and Manning, 2003; Kurohashi and Nagao, 1994) . Accordingly, we can say that the state-of-the-art lexicalized parsers are mainly based on unlexical (grammatical) information due to the sparse data problem. Bikel also indicated that Collins' parser can use bilexical dependencies only 1.49% of the time; the rest of the time, it backs off to condition one word on just phrasal and part-of-speech categories (Bikel, 2004) . This paper aims at exploiting much more lexical information, and proposes a fully-lexicalized probabilistic model for Japanese syntactic and case structure analysis. Lexical information is extracted not from a small tagged corpus, but from a huge raw corpus as case frames. This model performs case structure analysis by a generative probabilistic model based on the case frames, and selects the syntactic structure that has the highest case structure probability. Automatically Constructed Case Frames We employ automatically constructed case frames (Kawahara and Kurohashi, 2002) for our model of case structure analysis. This section outlines the method for constructing the case frames. A large corpus is automatically parsed, and case frames are constructed from modifier-head examples in the resulting parses. The problems of automatic case frame construction are syntactic and semantic ambiguities. That is to say, the parsing results inevitably contain errors, and verb senses are intrinsically ambiguous. To cope with these problems, case frames are gradually constructed from reliable modifier-head examples. First, modifier-head examples that have no syntactic ambiguity are extracted, and they are disambiguated by a couple of a verb and its closest case component. Such couples are explicitly expressed on the surface of text, and can be considered to play an important role in sentence meanings. For instance, examples are distinguished not by verbs (e.g., \"tsumu\" (load/accumulate)), but by couples (e.g., \"nimotsu-wo tsumu\" (load baggage) and \"keiken-wo tsumu\" (accumulate experience)). Modifier-head examples are aggregated in this way, and yield basic case frames. Thereafter, the basic case frames are clustered to merge similar case frames. For example, since \"nimotsu-wo tsumu\" (load baggage) and \"busshi-wo tsumu\" (load supply) are similar, they are clustered. The similarity is measured using a thesaurus (Ikehara et al., 1997) . Using this gradual procedure, we constructed case frames from the web corpus (Kawahara and Kuro-hashi, 2006) . The case frames were obtained from approximately 470M sentences extracted from the web. They consisted of 90,000 verbs, and the average number of case frames for a verb was 34.3. In Figure 1 , some examples of the resulting case frames are shown. In this table, 'CS' means a case slot. <agent> in the table is a generalized example, which is given to the case slot where half of the examples belong to <agent> in a thesaurus (Ikehara et al., 1997) . <agent> is also given to \"ga\" case slot that has no examples, because \"ga\" case components are usually agentive and often omitted. Integrated Probabilistic Model for Syntactic and Case Structure Analysis The proposed method gives a probability to each possible syntactic structure T and case structure L of the input sentence S, and outputs the syntactic and case structure that have the highest probability. That is to say, the system selects the syntactic structure T best and the case structure L best that maximize the probability P (T, L|S): (T best , L best ) = argmax (T,L) P (T, L|S) = argmax (T,L) P (T, L, S) P (S) = argmax (T,L) P (T, L, S) (1) The last equation is derived because P (S) is constant. Generative Model for Syntactic and Case Structure Analysis We propose a generative probabilistic model based on the dependency formalism. This model considers a clause as a unit of generation, and generates the input sentence from the end of the sentence in turn. P (T, L, S) is defined as the product of a probability for generating a clause C i as follows: For example, consider the sentence in Figure 1 . There are two possible dependency structures, and for each structure the product of probabilities indicated below of the tree is calculated. Finally, the model chooses the highest-probability structure (in this case the left one). C i is decomposed into its predicate type f i (including the predicate's inflection) and the rest case structure CS i . This means that the predicate included in CS i is lemmatized. Bunsetsu b h i is also decomposed into the content part w h i and the type f h i . P (C i |b h i ) = P (CS i , f i |w h i , f h i ) = P (CS i |f i , w h i , f h i )P (f i |w h i , f h i ) \u2248 P (CS i |f i , w h i )P (f i |f h i ) (3) The last equation is derived because the content part in CS i is independent of the type of its modifying head (f h i ), and in most cases, the type f i is independent of the content part of its modifying head (w h i ). For example, P (bentou-wa tabete|syuppatsu-shita) is calculated as follows: P (CS(bentou-wa taberu)|te, syuppatsu-suru)P (te|ta.) We call P (CS i |f i , w h i ) generative model for case structure and P (f i |f h i ) generative model for predicate type. The following two sections describe these models. Generative Model for Case Structure We propose a generative probabilistic model of case structure. This model selects a case frame that matches the input case components, and makes correspondences between input case components and case slots. A case structure CS i consists of a predicate v i , a case frame CF l and a case assignment CA k . Case assignment CA k represents correspondences between input case components and case slots as shown in Figure 2 . Note that there are various possibilities of case assignment in addition to that of Figure 2 , such as corresponding \"bentou\" (lunchbox) with \"ga\" case. Accordingly, the index k of CA k ranges up to the number of possible case assignments. By splitting CS i into v i , CF l and CA k , P (CS i |f i , w h i ) is rewritten as follows: P (CS i |f i , w h i ) = P (v i , CF l , CA k |f i , w h i ) = P (v i |f i , w h i ) \u00d7 P (CF l |f i , w h i , v i ) \u00d7 P (CA k |f i , w h i , v i , CF l ) \u2248 P (v i |w h i ) \u00d7 P (CF l |v i ) \u00d7 P (CA k |CF l , f i ) (4) The above approximation is given because it is natural to consider that the predicate v i depends on its modifying head w h i , that the case frame CF l only depends on the predicate v i , and that the case assignment CA k depends on the case frame CF l and the predicate type f i . The probabilities P (v i |w h i ) and P (CF l |v i ) are estimated from case structure analysis results of a large raw corpus. The remainder of this section illustrates P (CA k |CF l , f i ) in detail. Generative Probability of Case Assignment Let us consider case assignment CA k for each case slot s j in case frame CF l . P (CA k |CF l , f i ) can be decomposed into the following product depending on whether a case slot s j is filled with an input case component (content part n j and type f j ) or vacant: P (CA k |CF l , f i ) = s j :A(s j )=1 P (A(s j ) = 1, n j , f j |CF l , f i , s j ) \u00d7 s j :A(s j )=0 P (A(s j ) = 0|CF l , f i , s j ) = s j :A(s j )=1 P (A(s j ) = 1|CF l , f i , s j ) \u00d7P (n j , f j |CF l , f i , A(s j ) = 1, s j ) \u00d7 s j :A(s j )=0 P (A(s j ) = 0|CF l , f i , s j ) (5) where the function A(s j ) returns 1 if a case slot s j is filled with an input case component; otherwise 0. P (A(s j ) = 1|CF l , f i , s j ) and P (A(s j ) = 0|CF l , f i , s j ) in equation ( 5 ) can be rewritten as P (A(s j ) = 1|CF l , s j ) and P (A(s j ) = 0|CF l , s j ), because the evaluation of case slot assignment depends only on the case frame. We call these probabilities generative probability of a case slot, and they are estimated from case structure analysis results of a large corpus. Let us calculate P (CS i |f i , w h i ) using the example in Figure 1 . In the sentence, \"wa\" is a topic marking (TM) postposition, and hides the case marker. The generative probability of case structure varies depending on the case slot to which the topic marked phrase is assigned. For example, when a case frame of \"taberu\" (eat) CF taberu1 with \"ga\" and \"wo\" case slots is used, P (CS(bentou-wa taberu)|te, syuppatsu-suru) is calculated as follows: P 1 (CS(bentou-wa taberu)|te, syuppatsu-suru) = P (taberu|syuppatsu-suru) \u00d7 P (CF taberu1 |taberu) \u00d7 P (bentou, wa|CF taberu1 , te, A(wo) = 1, wo) \u00d7 P (A(wo) = 1|CF taberu1 , wo) \u00d7 P (A(ga) = 0|CF taberu1 , ga) (6) P 2 (CS(bentou-wa taberu)|te, syupatsu-suru) = P (taberu|syuppatsu-suru) \u00d7 P (CF taberu1 |taberu) \u00d7 P (bentou, wa|CF taberu1 , te, A(ga) = 1, ga) \u00d7 P (A(ga) = 1|CF taberu1 , ga) \u00d7 P (A(wo) = 0|CF taberu1 , wo) (7) Such probabilities are computed for each case frame of \"taberu\" (eat), and the case frame and its corresponding case assignment that have the highest probability are selected. We describe the generative probability of a case component P (n j , f j |CF l , f i , A(s j ) = 1, s j ) below. Generative Probability of Case Component We approximate the generative probability of a case component, assuming that: \u2022 a generative probability of content part n j is independent of that of type f j , \u2022 and the interpretation of the surface case included in f j does not depend on case frames. Taking into account these assumptions, the generative probability of a case component is approximated as follows: P (n j , f j |CF l , f i , A(s j ) = 1, s j ) \u2248 P (n j |CF l , A(s j ) = 1, s j ) P (f j |s j , f i ) (8) P (n j |CF l , A(s j ) = 1, s j ) is the probability of generating a content part n j from a case slot s j in a case frame CF l . This probability is estimated from case frames. Let us consider P (f j |s j , f i ) in equation ( 8 ). This is the probability of generating the type f j of a case component that has a correspondence with the case slot s j . Since the type f j consists of a surface case c j 2 , a punctuation mark (comma) p j and a topic marker \"wa\" t j , P (f j |s j , f i ) is rewritten as follows 2 A surface case means a postposition sequence at the end of bunsetsu, such as \"ga\", \"wo\", \"koso\" and \"demo\". (using the chain rule): P (f j |s j , f i ) = P (c j , t j , p j |s j , f i ) = P (c j |s j , f i ) \u00d7 P (p j |s j , f i , c j ) \u00d7 P (t j |s j , f i , c j , p j ) \u2248 P (c j |s j ) \u00d7 P (p j |f i ) \u00d7 P (t j |f i , p j ) (9) This approximation is given by assuming that c j only depends on s j , p j only depends on f j , and t j depends on f j and p j . P (c j |s j ) is estimated from the Kyoto Text Corpus (Kawahara et al., 2002) , in which the relationship between a surface case marker and a case slot is annotated by hand. In Japanese, a punctuation mark and a topic marker are likely to be used when their belonging bunsetsu has a long distance dependency. By considering such tendency, f i can be regarded as (o i , u i ), where o i means whether a dependent bunsetsu gets over another head candidate before its modifying head v i , and u i means a clause type of v i . The value of o i is binary, and u i is one of the clause types described in (Kawahara and Kurohashi, 1999) . P (p j |f i ) = P (p j |o i , u i ) (10) P (t j |f i , p j ) = P (t j |o i , u i , p j ) (11) Generative Model for Predicate Type Now, consider P (f i |f h i ) in the equation ( 3 ). This is the probability of generating the predicate type of a clause C i that modifies b h i . This probability varies depending on the type of b h i . When b h i is a predicate bunsetsu, C i is a subordinate clause embedded in the clause of b h i . As for the types f i and f h i , it is necessary to consider punctuation marks (p i , p h i ) and clause types (u i , u h i ). To capture a long distance dependency indicated by punctuation marks, o h i (whether C i has a possible head candidate before b h i ) is also considered. P V Bmod (f i |f h i ) = P V Bmod (p i , u i |p h i , u h i , o h i ) (12) When b h i is a noun bunsetsu, C i is an embedded clause in b h i . In this case, clause types and a punctuation mark of the modifiee do not affect the probability. P N Bmod (f i |f h i ) = P N Bmod (p i |o h i ) (13) Experiments We evaluated the syntactic structure and case structure outputted by our model. Each parameter is estimated using maximum likelihood from the data described in Table 2 . All of these data are not existing or obtainable by a single process, but acquired by applying syntactic analysis, case frame construction and case structure analysis in turn. The process of case structure analysis in this table is a similarity-based method (Kawahara and Kurohashi, 2002) . The case frames were automatically constructed from the web corpus comprising 470M sentences, and the case structure analysis results were obtained from 6M sentences in the web corpus. The rest of this section first describes the experiments for syntactic structure, and then reports the experiments for case structure. Experiments for Syntactic Structure We evaluated syntactic structures analyzed by the proposed model. Our experiments were run on hand-annotated 675 web sentences 3 . The web sentences were manually annotated using the same criteria as the Kyoto Text Corpus. The system input was tagged automatically using the JUMAN morphological analyzer (Kurohashi et al., 1994) . The syntactic structures obtained were evaluated with re-gard to dependency accuracy -the proportion of correct dependencies out of all dependencies except for the last dependency in the sentence end 4 . Table 3 shows the dependency accuracy. In the table, \"baseline\" means the rule-based syntactic parser, KNP (Kurohashi and Nagao, 1994) , and \"proposed\" represents the proposed method. The proposed method significantly outperformed the baseline method (McNemar's test; p < 0.05). The dependency accuracies are classified into four types according to the bunsetsu classes (VB: verb bunsetsu, NB: noun bunsetsu) of a dependent and its head. The \"NB\u2192VB\" type is further divided into two types: \"TM\" and \"others\". The type that is most related to case structure is \"others\" in \"NB\u2192VB\". Its accuracy was improved by 1.6%, and the error rate was reduced by 10.9%. This result indicated that the proposed method is effective in analyzing dependencies related to case structure. Figure 3 shows some analysis results, where the dotted lines represent the analysis by the baseline method, and the solid lines represent the analysis by the proposed method. Sentence (1) and ( 2 ) are incorrectly analyzed by the baseline but correctly analyzed by the proposed method. There are two major causes that led to analysis errors. Mismatch between analysis results and annotation criteria In sentence (3) in Figure 3 , the baseline method correctly recognized the head of \"iin-wa\" (commissioner-TM) as \"hirakimasu\" (open). However, the proposed method incorrectly judged it as \"oujite-imasuga\" (offer). Both analysis results can be considered to be correct semantically, but from ? ? (1) mizu-ga takai tokoro-kara hikui tokoro-he nagareru. water-nom high ground-abl low ground-all flow (Water flows from high ground to low ground.) ? ? (2) ... Kobe shi-ga senmonchishiki-wo motsu volunteer-wo bosyushita ... Kobe city-nom expert knowledge-acc have volunteer-acc recruited (Kobe city recruited a volunteer who has expert knowledge, ...) ? ? (3) iin-wa, jitaku-de minasan-karano gosoudan-ni oujite-imasuga, ... soudansyo-wo hirakimasu commissioner-TM at home all of you consultation-dat offer window open (the commissioner offers consultation to all of you at home, but opens a window ...)  the viewpoint of our annotation criteria, the latter is not a syntactic relation, but an ellipsis relation. To address this problem, it is necessary to simultaneously evaluate not only syntactic relations but also indirect relations, such as ellipses and anaphora. Linear weighting on each probability We proposed a generative probabilistic model, and thus cannot optimize the weight of each probability. Such optimization could be a way to improve the system performance. In the future, we plan to employ a machine learning technique for the optimization. Experiments for Case Structure We applied case structure analysis to 215 web sentences which are manually annotated with case structure, and evaluated case markers of TM phrases and clausal modifiees by comparing them with the gold standard in the corpus. The experimental results are shown in table 4, in which the baseline refers to a similarity-based method (Kawahara and Kurohashi, 2002) . The experimental results were really good compared to the baseline. It is difficult to compare the results with the previous work stated in the next section, because of different experimental settings (e.g., our evaluation includes parse errors in incorrect cases). Related Work There have been several approaches for syntactic analysis handling lexical preference on a large scale. Shirai et al. proposed a PGLR-based syntactic analysis method using large-scale lexical preference (Shirai et al., 1998) . Their system learned lexical preference from a large newspaper corpus (articles of five years), such as P (pie|wo, taberu), but did not deal with verb sense ambiguity. They reported 84.34% accuracy on 500 relatively short sentences from the Kyoto Text Corpus. Fujio and Matsumoto presented a syntactic analysis method based on lexical statistics (Fujio and Matsumoto, 1998) . They made use of a probabilistic model defined by the product of a probability of having a dependency between two cooccurring words and a distance probability. The model was trained on the EDR corpus, and performed with 86.89% accuracy on 10,000 sentences from the EDR corpus 5 . On the other hand, there have been a number of machine learning-based approaches using lexical preference as their features. Among these, Kudo and Matsumoto yielded the best performance (Kudo and Matsumoto, 2002) . They proposed a chunkingbased dependency analysis method using Support Vector Machines. They used two-fold cross validation on the Kyoto Text Corpus, and achieved 90.46% accuracy 5 . However, it is very hard to learn sufficient lexical preference from several tens of thousands sentences of a hand-tagged corpus. There has been some related work analyzing clausal modifiees and TM phrases. For example, Torisawa analyzed TM phrases using predicateargument cooccurences and word classifications induced by the EM algorithm (Torisawa, 2001) . Its accuracy was approximately 88% for \"wa\" and 84% for \"mo\". It is difficult to compare the accuracy of their system to ours, because the range of target expressions is different. Unlike related work, it is promising to utilize the resultant case frames for subsequent analyzes such as ellipsis or discourse analysis. Conclusion We have described an integrated probabilistic model for syntactic and case structure analysis. This model takes advantage of lexical selectional preference of large-scale case frames, and performs syntactic and case analysis simultaneously. The experiments indicated the effectiveness of our model. In the future, by incorporating ellipsis resolution, we will develop an integrated model of syntactic, case and ellipsis analysis.",
    "abstract": "We present an integrated probabilistic model for Japanese syntactic and case structure analysis. Syntactic and case structure are simultaneously analyzed based on wide-coverage case frames that are constructed from a huge raw corpus in an unsupervised manner. This model selects the syntactic and case structure that has the highest generative probability. We evaluate both syntactic structure and case structure. In particular, the experimental results for syntactic analysis on web sentences show that the proposed model significantly outperforms known syntactic analyzers.",
    "countries": [
        "Japan"
    ],
    "languages": [
        "Japanese",
        "English"
    ],
    "numcitedby": "124",
    "year": "2006",
    "month": "June",
    "title": "A Fully-Lexicalized Probabilistic Model for {J}apanese Syntactic and Case Structure Analysis"
}