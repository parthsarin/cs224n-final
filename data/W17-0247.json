{
    "article": "GF (Grammatical Framework) and UD (Universal Dependencies) are two different approaches using shared syntactic descriptions for multiple languages. GF is a categorial grammar approach using abstract syntax trees and hand-written grammars, which define both generation and parsing. UD is a dependency approach driven by annotated treebanks and statistical parsers. In closer study, the grammatical descriptions in these two approaches have turned out to be very similar, so that it is possible to map between them, to the benefit of both. The demo presents a recent addition to the GF web demo, which enables the construction and visualization of UD trees in 32 languages. The demo exploits another new functionality, also usable as a command-line tool, which converts dependency trees in the CoNLL format to high-resolution L A T E Xand SVG graphics. 1 Introduction GF (Grammatical Framework, (Ranta, 2011) and UD (Universal Dependencies, (Nivre et al., 2016) ) are two attempts to use shared syntactic descriptions for multiple languages. In GF, this is achieved by using abstract syntax trees, similar to the internal representations used in compilers and to Curry's tectogrammatical formulas (Curry, 1961) . The trees can be converted to strings in different languages by linearization functions, similar to pretty-printing rules in compilers and to Curry's phenogrammatical rules. Linearization rules are reversible to parsers (Ljungl\u00f6f, 2004) . In UD, the shared descriptions are dependency labels, part of speech tags and morphological features used in dependency trees. The words in the leaves of UD trees are language-specific, and each language can extend the core descriptions to have a set of its own tags and labels. The relation between trees and strings is not defined by grammar rules, but by constructing a set of example treesa treebank. From a treebank, a parser is typically built using statistical methods (Nivre, 2006) . The abstract syntax trees of GF can be automatically converted to UD trees (Kolachina and Ranta, 2016) , by utilizing the shared abstract syntax of GF to allow simultaneous generation of UD trees in many languages. The proposed demo shows tools that use this conversion. An example is shown in Figure 3 , whose contents are produced by these tools. The configurations used are defined for the GF Resource Grammar Library (GF-RGL) (Ranta, 2009) , which currently contains 32 languages. An inverse conversion from UD to GF is work in progress (Ranta and Kolachina, 2017) and can also be shown in the demo. All grammars, configurations, and software are available from the GF homepage. 1 Command-line functionalities The richest set of functionalities is available in the GF shell (the program launched by the command gf). Figure 1 shows a part of the help entry for these functionalities. The -conll2latex option can be independently interesting for dependency parser community. It is the only tool known to us that converts CoNLL to standard L A T E Xcode (lines, ovals, etc) with no extra packages required. The same code base also produces SVG graphics from CoNLL. UD trees in the incremental parser interface This functionality is the easiest one to test, since it does not require any software to be installed, other  than a web browser. It builds on GF's web-based tool set (Ranta et al., 2010) . It is accessible via the GF Cloud 2 . The currently supported grammar option is \"ResourceDemo\"; see Figure 2 . UD trees in the PGF web service For grammars that have been equipped with a UD label configuration file, UD trees can be requested from the PGF web service. An example request: http://cloud.grammaticalframework. org/grammars/ResourceDemo.pgf?command= deptree&format=svg&to=ResourceDemoEng& tree=... The GF web demo Minibar allows users to select a grammar, construct grammatical sentences in one language and see translations to the other languages supported by the grammar. UD trees can be displayed next to the translations by clicking on a tree icon (Figure 2 ). Annotating Configurations The example in Figures 2 and 3 A configuration consists of an abstract syntax function together with a list of labels, one for each argument of the function. An extended notion of these configurations is described in (Kolachina and Ranta, 2016) . The basic algorithm is a topdown tree-transducer that deterministically maps each argument of a function in the abstract syntax tree to its UD label, generating a connected dependency tree. We refer the reader to Kolachina and Ranta (2016) for more details. Figure 3 : An abstract syntax tree and UD trees in 14 languages. The abstract syntax tree is shown in the middle. The languages corresponding to the UD trees from top-left: Thai, Sindhi, Nepali, French, Icelandic, English, Italian, Bulgarian, Latvian, Japanese, Maltese, Finnish, Greek, Polish. The gf2ud function uses language-independent configurations specified on the abstract syntax to simultaneously generate UD trees for all the languages. Here, we use png dump of the high-resolution originals, due to difficulties in rendering all the fonts in L A T E X.",
    "abstract": "GF (Grammatical Framework) and UD (Universal Dependencies) are two different approaches using shared syntactic descriptions for multiple languages. GF is a categorial grammar approach using abstract syntax trees and hand-written grammars, which define both generation and parsing. UD is a dependency approach driven by annotated treebanks and statistical parsers. In closer study, the grammatical descriptions in these two approaches have turned out to be very similar, so that it is possible to map between them, to the benefit of both. The demo presents a recent addition to the GF web demo, which enables the construction and visualization of UD trees in 32 languages. The demo exploits another new functionality, also usable as a command-line tool, which converts dependency trees in the CoNLL format to high-resolution L A T E Xand SVG graphics.",
    "countries": [
        "Sweden"
    ],
    "languages": [
        "Icelandic",
        "Nepali",
        "Japanese",
        "Sindhi",
        "Maltese",
        "Finnish",
        "Polish",
        "Bulgarian",
        "French",
        "Greek",
        "Italian",
        "Latvian",
        "Thai"
    ],
    "numcitedby": "2",
    "year": "2017",
    "month": "May",
    "title": "Cross-Lingual Syntax: Relating Grammatical Framework with {U}niversal {D}ependencies"
}