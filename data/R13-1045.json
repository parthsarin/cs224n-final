{
    "article": "We describe an approach to building a morphological analyser of Arabic by inducing a lexicon of root and pattern templates from an unannotated corpus. Using maximum entropy modelling, we capture orthographic features from surface words, and cluster the words based on the similarity of their possible roots or patterns. From these clusters, we extract root and pattern lexicons, which allows us to morphologically analyse words. Further enhancements are applied, adjusting for morpheme length and structure. Final root extraction accuracy of 87.2% is achieved. In contrast to previous work on unsupervised learning of Arabic morphology, our approach is applicable to naturally-written, unvowelled Arabic text. Introduction The number and diversity of human languages makes it impractical to manually craft lexicons and morphological processors for more than a very small proportion of them. Further challenges are posed by the need to deal with dialects and colloquial forms of languages. This has motivated recent increased interest in approaches to morphological analysis based on unsupervised learning. Inspired by competitions such as the Morpho Challenge, many techniques have been proposed for unsupervised morphology learning. Although these techniques are often intended to be language independent, they are often directed to a specific group of languages. Most work has aimed at sequential separation or segmentation of morphemes concatenated together in a surface word form. This type of analysis, outputting stems and appended morphemes aims to identify some kind of border between the different morphemes. However, another type of word formation consists of the interdigitation of a root morpheme with an affix or pattern template; in this case there is no boundary between morphemes, since they are rather intercalated with each other. This type of non-concatenative morphology, which is characteristic of the Semitic group of languages, has attracted far less interest for unsupervised learning. In this paper we present an approach to unsupervised learning of non-concatenative morphology, applying it to Arabic. We describe an approach to learning tri-literal roots and affix template of Arabic by first inducing root and affix lexicons. Our approach uses Maximum Entropy modelling to obtain clusters 1 of words based on concatenative and non-concatenative orthographic features, and induces the lexicons from these clusters. Our data is an undiacritized version of the Quranic Arabic Corpus since we assume a realistic setting of unvowelled text, as most Arabic text is written without vowels; we chose this corpus since correct roots of each word are available, facilitating the evaluation process. The fact that the corpus contains a relatively small vocabulary of around 7000 words also simulates the scenario for most of the world's languages of scarcity of linguistic resources and data. This paper is structured as follows: Section 2 surveys previous related work. Section 3 provides an introduction to Arabic root and pattern morphology. Our approach to unsupervised lexicon induction based on Maximum Entropy (ME) modelling is explained in section 4. Section 5 describes the procedure for performing morphological analysis of words, followed by evaluation in section 6 and conclusions in section 7. 2 Related Work An active current area of natural language processing research is applying statistical and information-theoretic approaches to unsupervised learning of morphology and grammar. A common starting point is raw (unannotated) text corpora, inducing the target knowledge from word forms and their patterns of usage. Information theoretic approaches, particularly Minimum Description Length (MDL) as investigated by Goldsmith (2000 Goldsmith ( , 2006) ) and others (Cruetz and Lagus, 2005, 2007) , have brought a theoretical perspective considering input data to be 'compressed' into a morphologically analysed representation. This optimization scheme has achieved good results, and is amongst the most effective approaches for unsupervised morphological analysis. Most work on unsupervised learning of morphology has focused on concatenative morphology (De Pauw and Wagacha 2007; Hammarstr\u00f6m and Borin 2011) . Another perspective adopted by Schone and Jurafsky (2001) incorporates orthographic and phonological features, and induces semantic relatedness between word pairs using Latent Semantic Indexing. Their work shows comparable performance to Goldsmith's (2000) Linguistica system. Yarowsky and Wicentowski (2000) experiment with learning irregular mnaturaorphology using a lightly supervised technique to align irregular words to their lemmas by estimating the distribution of ratios over part-of-speech classes of inflected words to lemmas. More recently, researchers have addressed nonconcatenative morphology, such as for Semitic languages, using a variety of empirical approaches. Daya et al. (2008) learn Semitic roots using supervised learning, building a multi-class classifier for individual root radicals. Clark (2007) uses Arabic as a test-bed to study semi-supervised learning of complex broken plural structure modelled using memory-based algorithms, with the aim of gaining insights into human language acquisition. Most work on unsupervised learning of morphology has focused on concatenative morphology (Hammarstr\u00f6m and Borin 2011) . The few studies that have focussed on nonconcatenative morphology, such as for Semitic languages, have not used naturally written text. For example, Rodriguez and \u0106avar (2005) learn roots using a number of orthographic heuristics and then apply constraint-based learning to improve the quality of roots. Xanthos (2008) works on phonetic transcriptions of Arabic text to decipher roots and patterns. The approach is to initially create crude Root and Pattern (RP) transcriptions from words based on vowel-consonant distinctions, and then to apply an MDL approach similar to Goldsmith's (2006) in order to refine the RP structures. In contrast to previous work, we learn intercalated morphology, identifying the root and transfixes/ incomplete pattern for words from 'natural' text without short vowels or diacritical markers. Root and Pattern Morphology Words in Arabic are formed through three morphological processes. The first (i) is the fusion of a root form and pattern template to derive a base word, which can be a noun, verb or adjective, all of which are semantically related to the root. The second (ii) is affixation, by means of prefixes, suffixes or infixes, including inflectional morphemes marking gender, plurality and/or tense, resulting in a stem. Thirdly (iii) a final layer of clitics may be attached to a word, including a subset of prepositions, conjunctions, determiners and pronouns; these appear at the beginning (proclitics) or end (enclitics) of a word but never in the middle. Since techniques for concatenative morphology learning are fairly advanced we have focused on using stemmed words, computable through such approaches. We used the QAC stem vocabulary where appended morphemes of type (iii) are mostly absent 2 and hence ignored from analysis. Most of type (ii) are present as part of the stem. In the case of (i), most derived forms consist of short vowels and occasional long vowels or a consonant interdigitated with the root. In unvowelled text the short vowels are ignored, so derived words have at most single letter affixation. Table 1 shows two example words with their roots and affix pattern templates. The 'y' and 't' in the respective words are clitic/inflectional markers, which are part of the affix template. 'A' is the derivational infix marker for nouns. Word Root Pattern ktAby Ktb --A-y tEArf Erf t-A-- For analysis, each word, \u202b\u0753\u202c , is decomposed, using a decomposition function, into a set of tuples encoding all \u074a possible combinations of a root (of at least 3 letters) and associated pattern: \u202b\u0753(\u0740\u202c ) \u2192 \u202b\u074e\u2329{\u202c \u0beb , \u202b\u202c \u0beb \u232a} (Eq. 1) where \u202b\u0754\u202c ranges from 1 to \u074a. For example, the decomposition of the word 'yErf', is shown in Figure 1 . \u202b\u0742\u074e\u0727\u0755\u202c \u2192 \u23a9 \u23aa \u23a8 \u23aa \u23a7 \u202b\u0755\u2329\u202c \u202b\u0727\u202c \u202b,\u074e\u202c \u2212 \u2212 \u2212\u0742 \u232a, \u202b\u0755\u2329\u202c \u202b\u0727\u202c \u0742, \u2212 \u2212 \u202b,\u232a\u2212\u074e\u202c \u202b\u0755\u2329\u202c \u202b\u074e\u202c \u0742, \u202b\u0727\u2212\u202c \u2212 \u2212\u232a, \u202b\u0727\u2329\u202c \u202b\u074e\u202c \u0742, \u202b\u0755\u202c \u2212 \u2212 \u2212\u232a, \u202b\u0755\u2329\u202c \u202b\u0727\u202c \u202b\u074e\u202c \u0742, \u2212 \u2212 \u2212 \u2212\u232a \u23ad \u23aa \u23ac \u23aa \u23ab Using Maximum Entropy Modelling for Unsupervised Learning In this study we apply an supervised machine learning technique, Maximum Entropy (ME) modelling, in a completely unsupervised way, taking our inspiration from the work of De Pauw and Wagacha ( 2007 ), who applied the approach for extracting prefixes in an African language. Unlike for supervised learning, no annotated text is used. Instead we simply derive features automatically from the vocabulary words of the dataset. Each word is represented as an output class mapped to by the corresponding features of the words. These word-features are used to train a classifier. Rather than applying the classifier to classify unseen data, we apply the model back to the 'training data' to obtain, not the classification but the proximities of each word/class with every other word/class. These proximities are then utilized to root and pattern lexicons. The advantage of this approach to gauge relatedness of words over other approaches, such as minimum edit distance, is the ability to better capture morpheme dependencies between words with common roots which may be orthographically quite different due to substantial affixing. Building the Lexicons We derive two lexicons: a root lexicon and an affix or pattern lexicon. We do this by training ME classifiers on orthographic features computed from each word in the corpus dataset. The classifiers are then applied to the same data to obtain word clusters relating each word to every other word with respect to either common roots or common patterns. Thus, for the root lexicon we obtain neighbours of words that have the same or similar patterns. Conversely, for the pattern lexicon we obtain neighbours of words that have common root radicals. Modelling Orthographic Features We first extract orthographic features for obtaining word clusters with similar roots (i.e. for pattern lexicon acquisition). We then construct the inverse of these features for obtaining word clusters with similar patterns (i.e. for root lexicon acquisition). In the former case, feature extraction proceeds as follows: we first enclose each word with beginning and end boundary markers, '@' and '#' respectively. (This is in order to provide context information for the first and last characters of a word). We next compute the power-set of all the character combinations in a word, and then exclude features where the first and last letter of the word appear without the boundary markers (to give emphasis to word boundary features). The final set of these features for the word 'yErf' is shown in the first column of Table 2 . In the latter case, pattern features are obtained such that corresponding to each root feature, we replace root radicals with a placeholder; characters between root radicals that are omitted from the root features appear as potential affix characters in the pattern template. These inverse features are shown in the second column of Table 2 . Root Features (for Pattern Lexicon) Pattern features (for Root Lexicon) @y, @yE, @yEr, @yErf#, @yEr#, @yEf#, @yE#, @yr, @yrf#, @yr#, @yf#, @y#, @E, @Er, @Erf#, Er#, @Ef#, @E#, @r, @rf#, @r#, @f#, E, Er, Erf#, Er#, Ef#, E#, r, rf#, r#, f# @-, @--, @---, @----#, @---f#, @--r-#, @--rf#, @-E-, @-E--#, @-E-f#, @-Er-#, @-Erf#, @y-, @y--, @y---#, @y--f#, @y-r-#, @y-rf#, @yE-, @yE--#, @yE-f#, @yEr-#, -, --, ---#, --f#, -r-#, -rf#, -, --#, -f#, -# Word Nearest Neighbors The classifier is trained using Limited Variable LBFGS optimization method. The number of iterations for training is stopped automatically when 100% accuracy on the training data is achieved. Each trained classifier is reapplied to its respective training data features to get proximity values between each word and every other word. Sorting the list gives us the most related word in terms of root based or pattern based proximity values, with the highest value (\u2248 1) for the headword, \u210e, i.e. the word's own features. Table 3 shows an example of the closest neighbours in a cluster, along with their headword. Using these words and proximity measures we next apply a strategy to induce the morpheme. Not all words in the list of N elements for each word are relevant to us since the proximity value starts to drop rapidly towards zero as we go down the ranked list. With each headword we choose a 500 nearest neighbours cluster for each type of morpheme as a sufficient number beyond which we expect no gain in efficiency is expected. Head-Word, h Proximity Dictionary Induction Using the respective word clusters we create dictionaries for two types of morphemes, roots and patterns, such that we score the morphemes thus: Higher scoring morphemes are more plausible and ranked higher in the lexical list than lower ones. The procedure for scoring is adapted and amended from the work of De Pauw and Wagacha (2007). For the pattern lexicon, we score each pattern in the following manner: for each headword, h i (having probability value \u2248 1) in cluster c i (with each of the i = 1,2,\u2026N words in the vocabulary), we obtain all possible decompositins(equation 1) into template patterns \u202b\u202c \u0beb (shown in column 1 of Table 4 ) and roots, \u202b\u074e\u202c \u0beb (column 2 of Table 4 ) with respect to the headword, \u210e . Each pattern is scored with a function \u0735( \u202b\u202c \u0beb ) (equation 2) which aggregates the Logarithmically Scaled ( \u202b\u0735\u072e\u202c ) probability value, \u0732 of words k j (j = 1,2,\u2026500 words in each cluster), such that \u202b\u074e\u202c \u0beb matches any of the roots in word k, \u202b\u074e\u202c \u0bec (y=1,2,\u2026m root combinations in k). This aggregation is not only local to each cluster but covers all occurrences of the pattern in each of the N clusters. \u0735( \u202b\u202c \u0beb ) = \u1240\u202b\u0735\u072e\u202c\u0d6b\u0732 \u0d6f\u00d7 \u202b|(\u0723\u072e\u202c \u0beb |)\u125a \u202b\u074e\u202c \u0beb = \u202b\u074e\u202c \u0bec \u1241 \u0b39 \u0b40\u0b35 \u0bc7 \u0b40\u0b35 (Eq. 2) Logarithmic scaling is necessary since the probability drops too rapidly and too low in order to provide a feasible ratio between words. After taking the log of the probability the resulting ratios are negative which are then adjusted by subtracting the log of a base probability value, \u0732 , thus linearly inverting the ratios (equation 3). \u0732 is hence chosen to be small enough to ensure the resulting logarithmic score is positive. We chose the smallest occurring probability value in our clusters as the value for \u0732 . \u202b\u0735\u072e\u202c\u0d6b\u0732 \u0d6f= log \u0732(\u0747 ) \u2212 log \u0732 (Eq. 3) The score is also exponentially Length Adjusted \u202b)\u0723\u072e(\u202c for each pattern, \u202b,\u202c according to the length of the pattern, \u202b,||\u202c in terms of the number of affix charaters in \u202b.\u202c This boosts the score for lengthier morphemes which are relatively infrequent. The intuition for adjustment formula comes from the work of (Chung and Gildea, 2009) and (Liang and Klein, 2009) , who use a exponential Length Penalty measure to adjust their model for morpheme length. \u202b)||(\u0723\u072e\u202c = \u0741 || (Eq. 4) Thus the pattern is scored according to the score of words containing plausible roots. Commonly occurring patterns such as 'y---' gather weight and ascend the list of the most frequent (and hence potentially sound) affix templates. Table 4 shows how each pattern for the headword 'yErf' is scored, aggregating the logarithmic score over words (in column 4 of Similarly, we score the root, \u0735( \u202b\u074e\u202c \u0beb ), with respect to the pattern occurrence in each word k of cluster c i : \u0735( \u202b\u074e\u202c \u0beb ) = \u1240\u202b\u0735\u072e\u202c\u0d6b\u0732 \u0d6f\u125a \u202b\u202c \u0beb = \u202b\u202c \u0bec \u1241 \u0b39 \u0b40\u0b35 \u0bc7 \u0b40\u0b35 (Eq. 5) The scoring aggregates over the log scaled probability of words in the affix-based clusters having pattern occurrences in a word in each cluster. There is no need for length adjustment to these ratios since we are considering only three letter roots. Table 5 exemplifies this for scoring roots with words (in column 3 of Table 5 ) that have corresponding patterns (in column 2 of Table 5 ). Root Pattern Word Table 6 shows the top lexicon entries for roots and patterns along with their respective scores. The top entries in the lexicon would plausibly be correct morphemes while lower entries would be not so plausible. Root Lexicon Morphological Analysis A word is analysed into its root and pattern template by considering every possible combination of trilateral root and corresponding pattern pairs, \u202b\u074e\u2329\u202c \u0beb , \u202b\u202c \u0beb \u232a , as defined in equation 1 for the word, w i , in the vocabulary, scoring each analysis with the sum of the scores for the root, \u202b\u074e\u202c \u0beb , and pattern, \u202b\u202c \u0beb , in the root lexicon and pattern lexicon, respectively. Due to the different ranges of scores for root and pattern, the score for the former is scaled with respect to the latter, as in equation 6, in order to guarantee equal contributions. \u202b)\u074e(\u0735\u0735\u202c = \u202b)\u074e(\u0735\u202c \u00d7 max(\u0735(\u202b))\u202c max(\u0735(\u202b))\u074e\u202c (Eq. 6) The analysis, x, with the highest score is selected as the output, as illustrated in equation 7. max \u0beb\u0b40\u0b35.. ( \u0735( \u202b\u074e\u202c \u0bea \u0beb ) + \u202b(\u0735\u0735\u202c \u0bea \u0beb ) ) (Eq. 7) Since we are considering text without diacritics, due to absence of short vowels, we only expect words to contain single letter infixes. Hence we experiment with an alternative configuration of the word decomposition, \u202b\u074e\u2329\u202c \u0bed , \u202b\u202c \u0bed \u232a: non-contiguous root radicals formed with more than one intervening character are dropped; correspondingly patterns with more than one consecutive character between radical place holder markers are dropped. Evaluation We carry out our evaluation using the Quranic Arabic Corpus (QAC) 3 , since it identifies the root of each word, facilitating the evaluation. In this section, we first detail some information about our dataset before going onto evaluation of the analyses for correct root extraction. Data The QAC consists of approximately 77,900 word tokens, with a total of around 19,000 unique tokens. Since we are interested in investigating learning from undiacritized text, we removed all short vowels and diacritical markers. The size of the resulting vocabulary, after removal of vowels, is approximately 14,850. We take as input lightly stemmed text, with clitics removed, but with most inflectional markers attached. We assume that stemmed words are obtainable using existing tools for unsupervised concatenative morphology learning. For example, the technique of Poon et al (2009) could be used to obtain accurate stems for each word. The stemmed unvowelled vocabulary size is around 7370. The original corpus is annotated with roots for all derived and inflected words. More than 95% of words are tagged with their root forms since the Quran consists mostly of words of derivable forms, with very few proper nouns. There are 7192 stemmed words with available roots. In Arabic, sometimes alterations in root radicals take place; for example, in hollow roots, when moving from a root containing a long vowel to the surface word, the long vowel might change its form to another type or get dropped. Such words with hollow roots or reduplicated radicals, whose characters do not match every radical of the root, were removed from the evaluation as they are beyond the scope of the learning algorithm to identify. Leaving aside these word and root evaluation pairs we evaluated with 5468 stemmed types. Baseline As a baseline for evaluation, we derived lexicons in a similar manner to procedure for derivation from clusters (section 5.3). Instead of using clusters we simply scored patterns that matched the largest number of vocabulary words having corresponding roots. Likewise, the root score was obtained by counting the number of words with corresponding patterns. Comparing our system to the baseline is meant to elucidate the advantage of using the machine learning technique to enhance our lexicons. In the baseline we do not have the ME based word clusters with proximities to the target word; only one cluster exist: the vocabulary set with unit promitiy of 1. Evaluation of Lexicons In this section we compare our lexicons, built using maximum entropy modeling approach, (ME), to the baseline(BL). We evaluated the effect of logarithmic scaling (ME_LS) comparing it to using raw probability values(ME_RW). Also we gauged the performance improvement with Length Adjustment (ME_LS_LA) for morphemes. Finally, we evaluated morphological analysis restricted to patterns with single affixes which correspond to roots with single non-contiguous characters from words (ME_NC1). We evaluate morphological analysis through correct identification of the root. The accuracy is measured in terms of percentage of the roots that are correctly identified. As stated above, we evaluate on a total of 5468 words. The results for the different configuration evaluations is given in table 7 . The accuracy of 74% shows a sound and competitive baseline. The low results for ME_RW highlights the weakness of considering raw probability values which are too low to provide adequate weightage to morphemes. Hence the dismal performace. The true value for the ME based processing is realized in ME_LS, where the probabilities have been logarithmically scaled be summing. We see an accuracy gain of 6% over the baseline which is quite significant and encouraging. Further improvements can be seen when the score has been adjusted for morpheme length, ME_LS_LA, with performance increase by further 5%. Still more improvement is seen using knowledge of word structure of undiacritized text, ME_LS_LS_NC1, with further accuracy gain of 2.25 %. The final result for ME based analysis with further enhancements gives an promising accuracy result of 87.20%. Configuration Conclusion and Future directions In this paper we have presented an approach to solve the problem of learning intercalated morphology in an unsupervised manner with no parameter settings and minimal linguistic knowledge. We applied the machine learning based techniques to learn clusters of words related on basis of either root or pattern morpheme. Thereafter, plausible morphemes are extracted using a scoring method which takes advantage of knowledge of word proximities from clusters built using a maximum entropy classifier. We further apply enhancements to the procedure by accommodating for length and structure of morphemes. The finalized procedure offers significant boost in performance. The dynamicity of the technique allows its applicability to other types of morphological structures. Also, the system can easily be extended to cater to roots beyond tri-literals by adapting the soring function to accommodate for morpheme length.",
    "funding": {
        "defense": 0.0,
        "corporate": 0.0,
        "research agency": 1.9361263126072004e-07,
        "foundation": 1.9361263126072004e-07,
        "none": 1.0
    },
    "reasoning": "Reasoning: The article does not mention any specific funding sources, including defense, corporate, research agencies, foundations, or any other type of financial support for the research conducted. Therefore, based on the information provided, it is assumed that the article does not report funding from any of the specified sources.",
    "abstract": "We describe an approach to building a morphological analyser of Arabic by inducing a lexicon of root and pattern templates from an unannotated corpus. Using maximum entropy modelling, we capture orthographic features from surface words, and cluster the words based on the similarity of their possible roots or patterns. From these clusters, we extract root and pattern lexicons, which allows us to morphologically analyse words. Further enhancements are applied, adjusting for morpheme length and structure. Final root extraction accuracy of 87.2% is achieved. In contrast to previous work on unsupervised learning of Arabic morphology, our approach is applicable to naturally-written, unvowelled Arabic text.",
    "countries": [
        "United Kingdom"
    ],
    "languages": [
        "Arabic"
    ],
    "numcitedby": 2,
    "year": 2013,
    "month": "September",
    "title": "Unsupervised Induction of {A}rabic Root and Pattern Lexicons using Machine Learning",
    "values": {
        "building on past work": "In this paper we present an approach to unsupervised learning of non-concatenative morphology, applying it to Arabic. This paper is structured as follows: Section 2 surveys previous related work. Section 3 provides an introduction to Arabic root and pattern morphology. Our approach to unsupervised lexicon induction based on Maximum Entropy (ME) modelling is explained in section 4. Section 5 describes the procedure for performing morphological analysis of words, followed by evaluation in section 6 and conclusions in section 7.  Yarowsky and Wicentowski (2000) experiment with learning irregular mnaturaorphology using a lightly supervised technique to align irregular words to their lemmas by estimating the distribution of ratios over part-of-speech classes of inflected words to lemmas. More recently, researchers have addressed nonconcatenative morphology, such as for Semitic languages, using a variety of empirical approaches. Daya et al. (2008) learn Semitic roots using supervised learning, building a multi-class classifier for individual root radicals. Clark (2007) uses Arabic as a test-bed to study semi-supervised learning of complex broken plural structure modelled using memory-based algorithms, with the aim of gaining insights into human language acquisition. The few studies that have focussed on nonconcatenative morphology, such as for Semitic languages, have not used naturally written text. For example, Rodriguez and \u0106avar (2005) learn roots using a number of orthographic heuristics and then apply constraint-based learning to improve the quality of roots. Xanthos (2008) works on phonetic transcriptions of Arabic text to decipher roots and patterns. In contrast to previous work, we learn intercalated morphology, identifying the root and transfixes/ incomplete pattern for words from 'natural' text without short vowels or diacritical markers.",
        "novelty": "We describe an approach to building a morphological analyser of Arabic by inducing a lexicon of root and pattern templates from an unannotated corpus. From these clusters, we extract root and pattern lexicons, which allows us to morphologically analyse words. Further enhancements are applied, adjusting for morpheme length and structure.",
        "performance": "The accuracy of 74% shows a sound and competitive baseline. The low results for ME_RW highlights the weakness of considering raw probability values which are too low to provide adequate weightage to morphemes. Hence the dismal performace. The true value for the ME based processing is realized in ME_LS, where the probabilities have been logarithmically scaled be summing. We see an accuracy gain of 6% over the baseline which is quite significant and encouraging. Further improvements can be seen when the score has been adjusted for morpheme length, ME_LS_LA, with performance increase by further 5%. Still more improvement is seen using knowledge of word structure of undiacritized text, ME_LS_LS_NC1, with further accuracy gain of 2.25 %. The final result for ME based analysis with further enhancements gives an promising accuracy result of 87.20%."
    }
}