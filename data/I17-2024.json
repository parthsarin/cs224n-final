{
    "article": "Emotion Analysis is the task of modelling latent emotions present in natural language. Labelled datasets for this task are scarce so learning good input text representations is not trivial. Using averaged word embeddings is a simple way to leverage unlabelled corpora to build text representations but this approach can be prone to noise either coming from the embedding themselves or the averaging procedure. In this paper we propose a model for Emotion Analysis using Gaussian Processes and kernels that are better suitable for functions that exhibit noisy behaviour. Empirical evaluations in a emotion prediction task show that our model outperforms commonly used baselines for regression. Introduction The goal of Emotion Analysis is to infer latent emotions from textual data (Strapparava and Mihalcea, 2007) . This problem has theoretic roots in psycholinguistics studies such as Clore et al. (1987) and Ortony et al. (1987) , which aim to understand connections between emotions and words. However, Emotion Analysis also has motivations from an applied perspective, being closely related to Opinion Mining (Pang and Lee, 2008) . The main difference is that the latter is usually concerned with coarse polarity predictions, while the former aims at modelling different emotional aspects in a more fine-grained level. Table 1 shows some examples taken from the \"Affective Text\" dataset (Strapparava and Mihalcea, 2007) , in which human judges annotate news headlines according to the taxonomy proposed by Ekman (1993) . Each label is a score in the [0 \u2212 100] range, where 0 means lack of the corresponding emotion and 100 corresponds to maximal emotional load. Given the nature of the task and the available datasets, a sensible approach for Emotion Analysis is through regression models that map texts to emotion scores. This requires the choice of a suitable text representation so it can be incorporated into a model. Bagof-words (BOW) are a common approach that works well in the presence of large amounts of data but it is unsuitable for Emotion Analysis datasets since they tend to be scarce. An alternative is to leverage unlabelled data through the use of word embeddings (Deerwester et al., 1990; Turian et al., 2010; Mikolov et al., 2013) . To obtain a fixed vector representation for a text, one can average the embeddings for each word present in the text. While this method can lose linguistic information such as word order, for some tasks it still gives good empirical performance (Hu et al., 2014; Kenter and de Rijke, 2015) . However, word embeddings are known to be prone to noise due to the different contexts captured in the training procedure (Nguyen et al., 2016) . This effect can be potentialised by simple averaging procedures. In this work we propose to use Gaussian Processes (GPs) (Rasmussen and Williams, 2006) to develop Emotion Analysis models that capture noisy functions that map text representations to the emotion scores. More specifically, we propose the use of the Mat\u00e8rn class of kernels to address this problem. Empirical evaluations show that our approach can outperform simpler out-of-the-box choices commonly employed in regression tasks. Overall, we show that properly motivated choices of kernels can bring benefits in prediction performance. While the focus of this work is on Emotion Analysis, the methods proposed here are general and can be applied to other text regression settings. Gaussian Process Regression In this Section we introduce the basic concepts around GP regression. We follow closely the definition of GPs in Rasmussen and Williams (2006) . Let X = {(x 1 , y 1 ), (x 2 , y 2 ), . . . , (x n , y n )} be a dataset where each x \u2208 R D is a D-dimensional input and y \u2208 R is its corresponding response variable. A GP prior is defined as a stochastic model over the latent function f that maps the inputs in X to their cor- f (x) \u223c GP(m(x), k(x, x )), where m(x) is the mean function and k(x, x ) is the kernel or covariance function, which describes the covariance between values of f at the different locations of x and x . For simplicity, we assume m(x) = 0. The GP prior is combined with a likelihood via Bayes' rule to obtain a posterior over the latent function: p(f |X, y) = p(y|X, f )p(f ) p(y|X) , where X and y are the training inputs and response variables, respectively. In regression, we usually assume a Gaussian likelihood for y, i.e., each y i = f (x i ) + \u03b7, where \u03b7 \u223c N (0, \u03c3 2 n ) is added white noise. This allows us to have an exact, closed formula solution for the posterior, which is itself a Gaussian p(f |X, y) \u223c N (y, K + \u03c3 2 n I), where K is the Gram matrix of kernel evaluations between inputs. To obtain predictions for an unseen input x * we integrate over all possible values of f . Since we assume a Gaussian likelihood for the unseen response variable y * , we can obtain its distribution exactly, p(y * |x * , X, y) = N (f * |\u00b5 * , \u03c3 2 * ) \u00b5 * = k T * (K + \u03c3 2 I n ) \u22121 y \u03c3 2 * = k(x * , x * ) \u2212 k T * (K + \u03c3 2 I n ) \u22121 k * , where k * = [ x 1 , x * , x 2 , x * , . . . , x n , x * ] is the vector of kernel evaluations between the unseen input and each training input. Choosing an appropriate kernel is a crucial step in defining a GP model. One common choice is to employ the squared exponential (SE) kernel, 1 k SE (x, x ) = \u03c3 v exp(\u2212 r 2 2 ) , where r 2 = D i=1 (x i \u2212 x i ) 2 2 is the scaled distance between the two inputs, \u03c3 v is a scale hyperparameter and is a lengthscale hyperparameter. The SE kernel is vastly used not only in GP models but also in Support Vector Machines (SVMs) since it is 1 Also known as Radial Basis Function (RBF) kernel. a simple way to have a flexible non-linear model over the data. However, from a GP perspective it assumes the process is infinitely mean-square differentiable. 2 In practice, this means the resulting GP encodes functions with strong smoothness, which is not an ideal property in the presence of high amounts of noise. Mat\u00e8rn kernels Mat\u00e8rn kernels (Rasmussen and Williams, 2006, Sec. 4.2.1) are an alternative class of kernels that relax the smoothness assumptions made by the SE kernels. Formally, they define GPs which are \u03bd-times mean-square differentiable only. Common values for \u03bd are the halfintegers 3 \u20442 and 5 \u20442, resulting in the following kernels: k Mat32 (x, x ) = \u03c3 v (1 + \u221a 3r 2 ) exp(\u2212 \u221a 3r 2 ) k Mat52 (x, x ) = \u03c3 v 1 + \u221a 5r 2 + 5r 2 3 exp(\u2212 \u221a 5r 2 ) . Higher values for \u03bd are usually not very useful since the resulting behaviour is hard to distinguish from limit case \u03bd \u2192 \u221e, which retrieves the SE kernel. On Figure 1 we plot samples from three GP priors with Mat\u00e8rn kernels with different values for \u03bd. We can see that lower values for \u03bd result in noisier functions. When \u03bd = 1 \u20442 we recover a simple exponential kernel, equivalent to Brownian motion in one dimension (Rasmussen and Williams, 2006, Sec. 4.2) . The Mat\u00e8rn class of kernels allows us to find a compromise between full noise behaviour and extreme smoothness, as in the case of SE. Hyperparameter Optimisation Most kernels rely on appropriate choices of hyperparameters, a problem of model selection. In non-Bayesian approaches such as SVMs, an usual approach for this is grid search, where we evaluate a set of values on a development set and choose the one with best performance. This approach can be brittle as values are constrained to the grid. It also does not scale well with the number of hyperparameters. GPs have an elegant way to perform model selection: maximising the (log) marginal likelihood with respect log p(y|X, \u03b8) = \u2212 y T K\u22121 y 2 \u2212 log | K| 2 \u2212 n log 2\u03c0 2 , where K = K+\u03c3 2 I n and \u03b8 represents the set of hyperparameters (such as the lengthscale and the bias term b). The main advantage of this method is that we can define gradients of the marginal likelihood and employ gradient ascent optimisers, which are much faster than grid and random search. Another advantage of this method is that it obviates the need of a validation set, making full use of the whole available training data. To understand why, we can inspect the terms of the marginal likelihood formula: the first one is the data-fit term and it is the only one that depends on the outputs; the second one is the complexity penalty, which depends only on the inputs and the third one is a normalisation constant. Intuitively, the optimisation procedure balances between complex models that highly fit the data and simple models that give a lower complexity penalty, preventing overfitting. Experiments We performed a set of experiments using two freely available datasets for Emotion Analysis, in order to assess our proposed models. 3 Data and Preprocessing The first dataset was employed in the SemEval2007 Affective Text shared task (Strapparava and Mihalcea, 2007) and is composed of a set of news headlines manually annotated by human judges. 4 We combined the 3 Code to replicate all experiments in this section is available at https://github.com/beckdaniel/ ijcnlp17_emo 4 Available at web.eecs.umich.edu/ \u02dcmihalcea/ downloads.html#affective official \"dev\" and \"test\" sets from the shared task into a single dataset containing 1,250 instances in total. To put our models in perspective with the stateof-the-art, we also tested them in the recently released dataset for the WASSA2017 workshop shared task (Mohammad and Bravo-Marquez, 2017b). 5 The dataset is composed of tweets annotated with four of the six Ekman emotions (anger, fear, joy and sadness), with ratings originally provided by Best-Worst Scaling and transformed into values in the [0 \u2212 1] interval (Mohammad and Bravo-Marquez, 2017a). Unlike SemEval2007, this dataset has different instances per emotion. We combined the official \"train\" and \"dev\" sets and use that as our full training set, for each emotion. All texts were tokenised 6 , lowercased and we used 100-dimensional GloVe embeddings (Pennington et al., 2014) to represent each word 7 . To obtain a fixed vector representation for each headline we used the average of its word embeddings, ignoring out-of-vocabulary words. Models We compared the performance of the proposed Mat\u00e8rn kernels with models based on linear and SE kernels. All GP models have hyperparameters optimised using 100 iterations of L-BFGS. Our implementation is based on the GPy toolkit. 8  We also compared our approach with two non-Bayesian approaches commonly used in the literature, ridge regression and support vector regression (SVR) with an SE kernel. For these models we used grid search to optimise hyperparameters. The grid search procedure uses 3-fold cross-validation within the training set, using two folds for training and one fold as a development set. Hyperparameter values are selected by averaging the best results obtained for each fold. We use the scikit-learn toolkit (Pedregosa et al., 2011) as our underlying implementation. The hyperparameter grid for each model is shown on Table 2 . Table 2 : Hyperparameter grids for the non-Bayesian baselines. 5 Availabe at http://saifmohammad.com/ WebPages/EmotionIntensity-SharedTask. html 6 We used the NLTK (Bird et al., 2009) PTB tokeniser. 7 We used the GloVe version trained on a combination of Wikipedia and Gigaword, available at nlp.stanford. edu/projects/glove 8 github.com/SheffieldML/GPy Evaluation We evaluated our models using Pearson's r correlation measure and Negative Log Predictive Density (NLPD) (Qui\u00f1onero-Candela et al., 2006 ). Pearson's r is the main metric used in previous work in Emotion Analysis and also other regression tasks. NLPD corresponds to the likelihood of the test label given the corresponding predictive distribution and it is a common way to compare GP models. It is not applicable for models that give point estimates as predictions (such as SVR) but it is useful when information about the predictive distributions is available. Higher Pearson's r and lower NLPD correspond to better performance. For the SemEval2007 dataset we performed our experiments using 10-fold cross-validation and average the results. For the WASSA2017 dataset, we tested the performance on the official \"test\" sets for each emotion to make results comparable with the original shared task submissions. Results on SemEval2007 Table 3 shows the results for all models, averaged over the emotions. We can see that both models based on Mat\u00e8rn kernels outperformed the baselines. Within the Mat\u00e8rn models there is a slight preference over the Mat\u00e8rn 3 \u20442 in terms of Pearson's r but it is not significative. Table 3 : Results on SemEval2007, averaged over all emotions and all 10 cross-validation folds. r \u2191 NLPD\u2193 Baselines In Table 4 we discriminate the results over each particular emotion, where we observe some interesting phenomena. For joy we can see that a linear GP shows higher Pearson's r compared to a GP with an SE kernel. To investigate this we inspected the individual folds for the GP SE model and we found out one of the models ended up with very low lengthscale, which resulted in an interpolation behaviour leading to overfitting. The Mat\u00e8rn models did not suffer from this. The emotion where we see the least gains from our proposed models is fear, which is also the one with higher absolute correlation in all models. This might be a case of diminishing returns, where we do not see much gains from using a more involved kernel because the emotion is already well explained by simpler models. Results on WASSA2017 Table 5 shows the results for WASSA2017, averaged over all emotions/datasets. We see similar trends to the SemEval2007 results, with the Mat\u00e8rn kernels outperforming the baselines and a small preference for the Mat\u00e9rn 3 \u20442 variant. On Table 6 we compare our models with the official shared task baseline and the wiining submission. The Mat\u00e8rn 3 \u20442 model would be placed in 11th place of a total of 22 submissions, which is a promising result considering that it can be applied to other feature sets beyond word embeddings. To show this, we train another model using the 300 dimensional version of GloVe embeddings, which gives further gains in terms of Pearson's r, reaching 10th place in the official results. The best performing submissions at this shared task used a range of other features beyond word embeddings, such as emotion lexicons and character ngrams. For future work, we plan to apply our models to these feature sets to check if they can also benefit from the flexibility coming from Mat\u00e8rn kernels. Related Work Emotion Analysis has been studied in other domains beyond News headlines. Alm et al. (2005) studied emotions in the context of children's fairy tales and developed a corpus annotated at the sentence level. They use coarse-grained labels, which account for the presence or absence of emotions in each sentence. Mihalcea and Strapparava (2012) focused on analysing emotions from music, combining information from song lyrics and melody notes. They consider more finegrained labels in this work and show promising results. The work of Beck et al. (2014) is similar to ours, which focuses on applying multi-task GPs to encode interactions between emotions. Unlike our approach, they use a simple bag-of-words representation and an SE kernel as the underlying GP model. Compared to our model, they show much lower correlation scores (their best model achieves 0.399 Pearson's r on the SemEval2007 dataset), although these are not strictly comparable since they use different data splits and do not perform cross-validation. However, their approach is orthogonal to ours: combining the Mat\u00e9rn kernels within a multi-task GP framework can be a promising avenue for future work. Gaussian Processes have recently been proposed in a range of NLP tasks. In regression, GPs have been used to predict how long expert translators take to postedit the output of Machine Translation systems (Cohn and Specia, 2013; Shah et al., 2013; Beck et al., 2016) . GPs have also been used in social media settings, such as modelling temporal information about word usage (Preoiuc-Pietro and Cohn, 2013) , user profiling (Lampos et al., 2014) and detecting rumour spreading (Lukasik et al., 2015) . Many of these works rely on the ability to encode prior knowledge about the task through the use of appropriate kernels. Conclusions Emotion Analysis is a task that relies on scarce, noisy and potentially biased datasets. The use of word embeddings can help tackle sparsity problems but furthers add noise to the data being modelled. In this paper we proposed a Gaussian Process approach for Emotion Analysis that can better incorporate these aspects. Empirical findings showed that noisy behaviour can be better modelled by Mat\u00e8rn kernels compared to other commonly used kernels in the literature. An interesting avenue for future work is to address noise and bias in the response variables as well. For the kind of labels we employ in Emotion Analysis, a possible extension is to remove the Gaussian constraint and employ different likelihoods, such as a Beta distribution over the scale limits, for instance. This however makes the model intractable and approximation schemes (such as the one proposed by Opper and Archambeau (2008) ) should be employed. Finally, we also plan to apply the ideas showed here to other NLP problems with similar settings. In particular, we believe the proposed approach can be useful in any setting where (noisy) embeddings should be mapped to manually provided scores. Acknowledgements Daniel Beck was supported by funding from CNPq/Brazil (No. 237999/2012-9) and from the Australian Research Council (DP #160102686). The author would also like to thank the anonymous reviewers for their comments.",
    "abstract": "Emotion Analysis is the task of modelling latent emotions present in natural language. Labelled datasets for this task are scarce so learning good input text representations is not trivial. Using averaged word embeddings is a simple way to leverage unlabelled corpora to build text representations but this approach can be prone to noise either coming from the embedding themselves or the averaging procedure. In this paper we propose a model for Emotion Analysis using Gaussian Processes and kernels that are better suitable for functions that exhibit noisy behaviour. Empirical evaluations in a emotion prediction task show that our model outperforms commonly used baselines for regression.",
    "countries": [
        "Australia"
    ],
    "languages": [
        ""
    ],
    "numcitedby": "9",
    "year": "2017",
    "month": "November",
    "title": "Modelling Representation Noise in Emotion Analysis using {G}aussian Processes"
}