{
    "article": "A distributed representation has become a popular approach to capturing a word meaning. Besides its success and practical value, however, questions arise about the relationships between a true word meaning and its distributed representation. In this paper, we examine such a relationship via polymodal embedding approach inspired by the theory that humans tend to use diverse sources in developing a word meaning. The result suggests that the existing embeddings lack in capturing certain aspects of word meanings which can be significantly improved by the polymodal approach. Also, we show distinct characteristics of different types of words (e.g. concreteness) via computational studies. Finally, we show our proposed embedding method outperforms the baselines in the word similarity measure tasks and the hypernym prediction tasks. Introduction Word representations based on the distributional hypothesis of Harris (1954) have become a dominant approach including word2vec (Mikolov et al., 2013) and GloVe (Pennington et al., 2014) , which show remarkable performances in a wide spectrum of natural language processing. However, a question arises about a relationship between a true word meaning and its distributed representation. While the context-driven word representations seem to be able to capture word-to-word relations, for example, men is to women as king is to queen, it still remains unclear what aspects of word meaning they capture and miss. For example, a word, coffee, can be understood from multiple perspectives. It may be associated with a ceramic cup filled with dark brown liquid from the perceptual perspective or an emotion such as happiness or tranquility. It may provoke other related concepts like bagel or awakening. We raise the question of how well the current distributed representation captures such aspects of word meanings. In order to help answering this question, we propose a polymodal word representation based on the theory that humans tend to use diverse sources in developing a word meaning. In particular, we construct six modules for polymodality including linear context, syntactic context, visual perception, cognition, emotion, and sentiments based on the human cognitive model proposed by Maruish and Moses (2013) . They are combined to build a single word representation. We conduct a series of experiments to examine the relationships between word meanings and their distributed representations and compare the results with other representations such as word2vec, GloVe, and meta-embedding (Yin and Sch\u00fctze, 2015) . We attempt to understand how well the model capture the diverse aspects of word meanings via two experiments: the property norms analysis and the sentiment polarity analysis. The result suggests that the existing embedding methods lack in capturing visual properties and sentiment polarities and show that they can be much improved by adopting polymodal approaches. Finally, we examine distinct characteristics of different types of words via computational studies, focusing along the dimension of concept concreteness and similarity. We find that the importance of a certain module (e.g. visual perception or lexical relations) varies depending on the word properties. Our study provides some computational evidence for the heterogeneous nature of word meanings, which has been extensively studied in the field of psycholinguistics. We briefly introduce it in the following subsection. Related Work Theoretical works Word meanings are thought to have diverse aspects. Steels (2008) address that languages are inherently built upon our cognitive system to fulfill the purpose of communication between mutually unobservable internal representations. So many psycholinguistic theories have attempted to understand the diverse nature of word meanings by human minds. Barsalou (1999) claims that many human modalities such as conceptual/perceptual systems cooperate with each other in a complex way and influence word meanings, while Pulverm\u00fcller (1999) argues that concepts are grounded in complex simulations of physical and introspective events, activating the frontal region of the brain that coordinates the multimodal information. Studies on semantic priming (Plaut and Booth, 2000) also supports them that words can be similar to each other in various ways to foster the priming effect. The experiments in this paper are designed to provide some computational evidence on such studies on the multifaceted nature of word meanings. Multimodal approaches From a computational point of view, there exist a number of bimodal approaches that extend the semantic representation to include perceptual information or understandings of the world around us. Bruni et al. (2014) and Kiros et al. (2014a) propose a way to augment text-based word embeddings using public image datasets while Roller and Im Walde (2013) integrate visual features into LDA models. A recent study on Image caption generation (Xu et al., 2015) suggests an interesting way to align word embeddings and image features. Moreover, Kiros et al. (2014b) jointly trains the image abstraction network and sentence abstraction network altogether, making the visual features naturally combined into word embeddings. Similar attempts have been made not only for visual perception but also auditory (Kiela and Clark, 2015) and olfactory (Kiela et al., 2015) perception. On the other hand, Henriksson (2015) demonstrates that semantic space ensemble models created by exploiting various corpora are able to outperform any single constituent model. Yin and Sch\u00fctze (2015) propose meta-Embedding that ensembles multiple semantic spaces trained by different methods with different tasks such as word2vec, GloVe, HLBL (Luong et al., 2013) and C&W (Collobert and Weston, 2008) . Above works succeed to improve word embedding quality by extending the semantic representation, but it still remains unclear how those improvements are related to the word meanings. Polymodal word embedding To embrace the multifaceted nature of word meanings, we propose a polymodal word embedding. More specifically, we take into account perception, sentiment, emotion, and cognition (lexical relation) derived from diverse sources, in addition to linear context and syntactic context obtained from the corpus. Note that the term polymodal is used to distinguish it from bimodal (Kiela, 2017) . In bimodal approach, a single cognitive modality is used whereas more than one modalities are used in polymodal. Modules We describe each of the modules in detail. Linear context refers to linear embeddings (Mikolov et al., 2013) comprising 300dimensional vectors trained over 100 billion words from the Google News dataset using skip-gram and negative sampling. Syntactic context takes a similar skip-gram approach as in linear context but defines the context window differently using a dependency parsing result (Levy and Goldberg, 2014) . While the linear skip-gram defines the contexts of a target word w as w \u2212k , w \u2212k+1 , ..., w k\u22121 , w k where k is a size of the window, syntactic context defines them as (m 1 , lbl 1 ), (m 2 , lbl 2 ), ..., (m k , lbl k ), (m \u22121 , lbl \u22121 ) where m is the modifiers of word w and lbl is the type of dependency relation. Both linear and syntactic contexts are similar in the sense that they capture word characteristics from the corpus. However, the different definitions of the contexts make the model focus on the different aspects of word meanings. Levy and Goldberg (2014) report that linear context tends to capture topical similarity whereas syntactic context captures functional similarity. For example, the word Florida is close to Miami in linear context but close to California in syntactic context. We harness both types of contexts to take into account functional and syntactic similarities. Cognition (Lexical relation) encompasses all the relations between words, which are captured in the form of a lexicon or ontology in a cognitive system. In this paper, we mainly focus on synonym, hypernym and hyponym relations in WordNet (Miller, 1995) which contains 149k words and 935k relations between them. We train lexical-relation-specific word embedding using retro-fitting (Faruqui et al., 2015) . Specifically, let V = {w 1 , ..., w n } be a vocabulary and \u2126 be an ontology that encodes semantic relations between words in V . \u2126 can be represented as a set of edges of undirected graph where (w i , w j ) \u2208 \u2126 if w i and w j holds semantic relationship of interest. The matrix Q is the collection of the vector representation of qi \u2208 R d for each word w i \u2208 V where d is the length of pre-trained word vectors. In this experiment, we use GloVe as such vectors. The objective of learning is to train the matrix Q = (q 1 , ..., q n ) so as to make q i close to its counterpart qi and also to its adjacent vertices in \u2126. Thus the objective function to be minimized can be written as \u03a8(Q) = n i=1 \u03b1 i ||q i \u2212 qi || 2 + (i,j)\u2208\u2126 \u03b2 ij ||q i \u2212q j || 2 where \u03b1 i and \u03b2 ij are hyperparameters. This procedure of training transforms the manifold of semantic space to make words in relations located more closer in Euclidean distance. Perception is a vital component for human cognition and has a significant influence on word meanings. In this paper, we only consider visual perception. We jointly train the embeddings of images and sentences together into the multi-modal vector space to build vision-specific word embeddings (Kiros et al., 2014b) . In particular, let T be the training dataset where one image I i is associated with a corresponding caption sentence S i , i.e., (I i , S i ) \u2208 T . An embedding of image I i , x i \u2208 R d , can be obtained through convolutional neural networks, in this case, 19-layer OxfordNet (Simonyan and Zisserman, 2014) , where d is the size of the dimension of multimodal space. Similarly, an embedding of sentence S i , x s \u2208 R d , can be composed through one of the sentence modeling networks, in this case, LSTM (Hochreiter and Schmidhuber, 1997) . These two image and sentence modeling networks are jointly trained together to minimize the pairwise ranking loss function L = x i x \u015d max(0, \u03b1 \u2212 x i \u2022 x s + x i \u2022 x \u015d) + xs x \u00ee max(0, \u03b1 \u2212 x s \u2022 x i + x s \u2022 x \u00ee) to place correct samples closer while separating negative samples farther in the joint space. \u03b1 is a hyperparameter and x \u015d and x \u00ee are incorrect image and sentence pair obtained through negative sampling. We use MS COCO dataset (Lin et al., 2014) to train the network which contains 300k images and 5 captions per image. Final perception embeddings of dimension 1024 are sampled from the joint space regarding one word as a sentence. Sentiment, either positive or negative, is determined for words that have sentiment orientations depending on their inherent meanings, usages, backgrounds etc. To capture the sentiment polarity of words (positive and negative), we use SentiWordNet3.0 (Baccianella et al., 2010) , a lexical resource that automatically annotates the degree of positivity, negativity, and neutrality of English words. It is a one-dimensional value and if a word has multiple senses, we take the difference between the maximum positivity and the minimum negativity. Emotion are considered by using NRC Emotion Lexicon (Mohammad and Turney, 2013) to reflect the emotional characteristics of words. It contains 15k words that are annotated with 10 emotion categories: anger, anticipation, disgust, fear, joy, sadness, surprise, trust, negative and positive. We built 10-dimensional one-hot emotion vectors based on this dataset. Note that some embedding sets may not cover every word in our set of test vocabulary. In that case, out-of-vocabulary (OOV) words are initialized to zero for the missing modules. All embeddings are L2-normalized. Ensemble methods While the most rudimentary way for the amalgamation of several vectors is a concatenation with weights, other ensemble methods are expected to produce the vectors with improved quality (Henriksson, 2015) . Faruqui and Dyer (2015) suggest that singular value decomposition (SVD) can be a promising way to merge the information by approximating the original matrix. Motivated by their work, we examine two matrix factorization techniques, SVD and non-negative matrix factorization (NMF). In addition, we explore an unsupervised ensemble method via autoencoder (AE) networks. The details of these methods are illustrated below. Hyperparameters such as dimension d are selected to obtain the highest Spearmans correlation score in the RG-65 dataset (Rubenstein and Goodenough, 1965) , which is used as a development set to minimize the interference on the test set. Note that before applying SVD, NMF, and AE, embeddings from different modules are concatenated with weights. Concatenation (CONC) is used as the first step for ensembling multiple vectors of different dimensions. That is, let S be a set of n semantic spaces and s i be a single vector space in S. e id \u2208 s i is a representation of word w d in the semantic space s i \u2208 S. Then the resulting concatenated embedding e d of word w d is e d = \u03b1 1 e d1 \u2295 ... \u2295 \u03b1 i e di \u2295 ... \u2295 \u03b1 n e dn where \u2295 is the concatenation operator and i \u03b1 i = 1. RG-65 is used as a development set to tune the weights \u03b1 i of particular embedding e di . Singular Value Decomposition (SVD) is a generalization of eigenvalue decomposition to any m \u00d7 n matrix where it is reported to be effective in signal processing (Sahidullah and Kinnunen, 2016) . Let V be the set of m words and k is the dimension of word embedding e i for word w i \u2208 V . The dictionary matrix M is a m \u00d7 k matrix where each row vector m i of M is an embedding vector of e i of word w i . Then this matrix M is decomposed into M = U \u03a3V T where U and V are m\u00d7m and n \u00d7 n real unitary matrices respectively, and \u03a3 is a m \u00d7 n non-negative real rectangular diagonal matrix. u id is the first d dimension of i-th row vector u i of U and we use it as a representation of word w i . d is 230 for SVD. The size of vocabulary m is 20150. Non-negative matrix factorization (NMF) has been reported to be effective method in various research areas including bioinformatics (Taslaman and Nilsson, 2012) , signal denoising (Schmidt et al., 2007) , and topic modeling (Arora et al., 2013) . Two non-negative matrix W and H are optimized to approximate the dictionary matrix M T \u2248 W H by minimizing the frobenius norm ||M T \u2212 W H|| F where W, H \u2265 0. NMF has an inherent property of clustering the column vectors of the target matrix. To make M T non-negative, we normalize the values of each embedding into the [0,1]. Let s id be the first d dimension of i-th column vector s i of W . Then we use s id as a representation of word w i . d is 200 for NMF. Autoencoder (AE) is a neural network used for unsupervised learning of efficient coding for data compression or dimensionality reduction (Hinton and Sejnowski, 1986) . Previous work suggests that an autoencoder may be able to learn relationships between the modules and result in higherlevel embeddings (Silberer and Lapata, 2014) . Our autoencoder consists of simple feedforward network. We trained two matrices W enc of size k \u00d7 d and W dec of size d \u00d7 k to learn efficient coding of word representation where k is the dimension of original word embedding and d is the dimension of compressed representation. Parameters are optimized to minimize cosine proximity loss: L = x\u2208T 1 \u2212 x \u2022 x ||x|| \u2022 ||x|| where x is a k-dimensional word embedding, T is a training data set of size 20150 words, x = f (W dec f (W enc x + b enc ) + b dec ) and f is a ReLU non-linear activation function. We set d = 900. Experiments We introduce the experiments taken to examine how well the representations embed word meanings incorporating distinct properties. First, we apply our proposed embedding method to a word similarity measure task and a hypernym prediction task to measure its overall quality. Then we conducted a series of experiments for analyzing the characteristics of word meanings. Word Similarity Measure and Hypernym Prediction To assess the overall quality of proposed embedding method, we examined its performance via the word similarity task on SimLex-999 (Hill et al., 2016) , WordSim-353 (Agirre et al., 2009) , and MEN (Bruni et al., 2014) datasets. The similarity of each word pair is computed through cosine proximity, and we use Spearman's rank correlation as an evaluation metric. We also measure the performance of the different ensemble methods described in subsection 3.2. The result is compared with three baselines: Word2Vec, GloVe, and Meta-embedding(1toN) (Yin and Sch\u00fctze, 2015) . Our proposed method clearly outperforms the baselines in all the datasets, with near-human performance in WordSim-353 and MEN. Among the ensemble methods, SVD gave the best result showing its strong capability of combining information from different modules for this task. We also conducted a hypernym prediction experiment using HyperLex dataset (Vuli\u0107 et al., 2016) to analyze the quality of proposed embedding from a different perspective. Given a pair of two words, the task is to predict the degree of the first word being a type of the second word, for example \"To what degree is chemistry a type of science?\". We build a 2-layer feedforward network of dimensions 1000 and 500 respectively with a ReLU activation function to predict the hypernyms. Then the network is trained to predict the degree of hypernymity of the scale from 0.0 to 10.0 to minimize categorial cross-entropy loss using AdaGrad optimizer on the training set. The final evaluation metrics are obtained by calculating Spearman's correlation between the predicted degrees and the test set. As in Table 2 , the proposed method shows the highest correlation to the test set among all the cases including the baselines. Among the ensemble method, SVD again shows the highest performance. For the hypernym prediction, NMF gives a slightly better result than the simple weighted concatenation. Property Norms Analysis While the corpus-driven word representations such as Word2vec and GLoVe have been shown to To examine how well each representation captures the normalized feature f i \u2208 F v , we calculate the cosine similarity between R(c) for c \u2208 C f i and R(C f i ) where R(\u2022) is a mapping from concept to its distributed representation and C f i is a centroid of all concepts in C f i or C f i = 1 |C f i | c\u2208C f i R(c) In other words, C f i is a centroid of concepts that share the feature f i . We define the feature density as the cosine similarity between the concept and the centroid. That is, feature density(c, f ) = R(c) \u2022 C f We calculate the feature density of all target concept-feature pairs assuming vectors that share  the same features will also be distributionally similar (Erk, 2016) . In Figure 1 that summarizes the result, the proposed embedding method shows higher averages and lower deviations of feature densities across all the categories. It shows that our proposed embedding method is more capable of capturing normalized features than the baselines. To further cement the observations, we calculate Spearman's correlation of word similarity measures between the normalized feature representation and the target distributed representation. The normalized feature representation of a concept is constructed as an one-hot vector which assigns 1 if the concept has the feature and 0 otherwise, and then L2-normalized to have length 1. Then we calculate the correlations of similarity measures by the feature categories. The results are shown in Table 3 . While the proposed embedding method shows the highest correlation to the case of using all normalized features, it also shows a noticeable improvement in the visual perceptual category. Positive vs Negative One of the critical weakness of context-based word representation is that it cannot differentiate the sentiment polarity correctly. So we examine the ratio of neighbors that have same/opposite/neutral sentiment polarities with a target word among 15010 words and see how this problem can be mitigated. Figure 2 illustrates the result. The three context-based approaches show roughly 20% of incorrect sentiment differentiation. This can be benefited greatly from the sentiment module of the proposed approach as this issue is almost perfectly resolved by simply attaching sentiment values to the embedding. The result might be straightforward but this can improve the quality of embedding greatly. Concrete vs Abstract We hypothesize that the role of a certain module would be different depending on word characteristics such as the degree of concreteness. To validate this idea, we divided the Simlex-999 dataset into two groups for different degrees of concept concreteness. This corresponds to 500 pairs of concrete words vs. 499 pairs of abstract words. Then we examine the relative importance of the different modules to each group via an ablation test. The result is reported in Table 4 . Interesting properties are revealed through the ablation test. By comparing the results between the different word groups, we can observe that the importance of a certain word aspect varies depending on the word characteristics. While concrete words profit from perception embeddings, the sentiment and emotion aspects are somewhat disturbing. We can observe an opposite result for abstract words. This result is quite intuitive since we can easily imagine the perceptual image from a concrete concept but not from an abstract one like love. Modules For a deeper analysis, we further investigate the role of each module in different word groups. For instance, since concrete concepts are perceptionrevealing, they would benefit from a strong emphasis on the perception embedding. On the other hand, emotion-revealing word groups such as abstract concepts would be opposite. Noting that the different types of words may have different sensitivity toward the modules, we adjusted the relative weights for a particular aspect of interest to be from 0.1 to 3.5 while maintaining others to 1.0. Then we observed the changes of the performance in word similarity task. The result is shown in Fig-  The result of sensitivity analysis supports the idea that different word groups are influenced by each module with varying degrees. The x-axis refers to the relative weight of a particular aspect while setting the others to 1.0. The y-axis indicates the changes of Spearman's correlation score \u03c1 on Simlex-999. The results in Figure 3 illustrate the different preferences among different word groups, which show the distinct nature between the two groups. In particular, the gradual patterns revealed by increasing relative weights of perception and emotion are contrary to concrete and abstract words. Increasing the weight of perception is beneficial for concrete word groups but detrimental to abstract word groups. However an exactly reverse pattern can be observed for the emotion. Increasing the weight of emotion is advantageous for abstract words but adverse for concrete words. Similarity vs Relatedness The \"similarity\" between two words is more strict term than the \"relatedness\". While the relatedness measures how much the two words are related to each other in some senses, the similarity measures how much the two words can be regarded as \"similar\" than just simply related. For example, consider the three word pairs: (bread, butter), (bread, toast), and (bread, stale). All of them can be regarded as \"related\" but only the (bread, toast) pairs can be regarded as \"similar\" because the other two words (butter and stale) are related but not similar to the \"bread\". The two data sets SimLex-999 and WordSim-353 capture this difference of similarity and relatedness. While the scores of WordSim-353 focus on the relatedness, those of the Simlex-999 deliberately try to distinguish between them. For example, a word pair (cloth, closet) is scored 8.00 in WordSim-353 dataset whereas 1.96 in the SimLex-999 dataset. To capture the difference between relatedness and similarity and see what modules contributes most to capture the similarity or the relatedness, we conduct a sensitivity analysis on WordSim-353 and SimLex-999 dataset. Figure 4 : The result of sensitivity analysis on word similarity and word relatedness. While context information is important to the relatedness, sentiment polarity and lexical relations are important to the similarity. Figure 4 shows the result of sensitivity analysis. In the SimLex-999 dataset which focuses on the word similarity, the cognition (lexical relation) and the sentiment modules turned out to be important. On the other hand, in the WordSim-353 dataset which focuses on the word relatedness, both linear context and syntactic context are turned out to be critical. This difference can be interpreted that the word properties extracted from the contexts are of the word relatedness, and in order to differentiate the similarity from the relatedness, additional properties such as lexical relations and sentiment polarities need to be introduced. Conclusion In this paper, we raise a question if the current distributed word representations sufficiently capture different aspects of word meanings. To address the question, we proposed a novel method for composing word embeddings, inspired by a human cognitive model. We compared our proposed embedding to the current state-of-the-art distributed word embedding methods such as Word2Vec, GloVe, and Meta-embedding from the perspective of capturing diverse aspects of word meanings. Our proposed embedding performs better in the word similarity and hypernym prediction tasks than the baselines. We further conducted a series of experiments to study how well the word meanings are reflected by the representations and analyze the relationships between the modules and the word properties. From the property norms analysis, our findings show that the proposed method can capture the visual properties of words better than the baselines. Also, harnessing sentiment values helps the embedding greatly to resolve the sentiment polarity issue which is a limitation of current context-driven approaches. Based on the experimental results, we can conclude that some aspects of word meanings are not captured enough from the corpus and we can further improve the word embedding by referring to additional data related to a human mind model. Finally, using our proposed method we show the different characteristics of concrete and abstract word groups and the difference between the concept relatedness and the concept similarity. We observe that emotional information is more important than the perceptual information for the abstract words whereas the opposite result is observed for the concrete words. Also, we see that the context-driven embeddings mostly capture the word relatedness and therefore lexical relation and sentiment polarities would be beneficial when considering the word similarity. In conclusion, we concentrate on analyzing the relationships between the diverse aspects of word meanings and their distributed representations and propose a way to improve them by harnessing additional information based on the human cognitive model. Since our proposed method largely relies on the labeled extra data, this work has a limitation in terms of the scalability. For future research, we need to explore unsupervised ways of introducing perceptual properties and lexical relationships of words and annotating their sentiment and emotional properties. It will make our method more scalable. Symbolic Hybrid Learning and Construction of Language Resources) Acknowledgements",
    "abstract": "A distributed representation has become a popular approach to capturing a word meaning. Besides its success and practical value, however, questions arise about the relationships between a true word meaning and its distributed representation. In this paper, we examine such a relationship via polymodal embedding approach inspired by the theory that humans tend to use diverse sources in developing a word meaning. The result suggests that the existing embeddings lack in capturing certain aspects of word meanings which can be significantly improved by the polymodal approach. Also, we show distinct characteristics of different types of words (e.g. concreteness) via computational studies. Finally, we show our proposed embedding method outperforms the baselines in the word similarity measure tasks and the hypernym prediction tasks.",
    "countries": [
        "South Korea"
    ],
    "languages": [
        "English"
    ],
    "numcitedby": "5",
    "year": "2017",
    "month": "November",
    "title": "A Computational Study on Word Meanings and Their Distributed Representations via Polymodal Embedding"
}