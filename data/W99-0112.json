{
    "article": "This paper argues for a novel data structure for the representation of discourse referents. A so-called hashing list is employed to store discourse referents according to their grammatical features. The account proposed combines insights from several theodes of discourse comprehension. Segmented Discourse Representation Theory (Asher, 1993) is enriched by the ranking system developed in centering theory (Grosz et al., 1995) . In addition, a tree logic is used to represent underspecification within the discourse structure (Schilder, 1998) . Introduction Discourse referents are represented quite differently by current diso~urse theories. Discourse Representation Theory (DRT), for example, employs a rather unstructured data structure for the domain of discourse referents: a set (Kamp and Reyle, 1993) . A DRT-implementation by Asherand Wada (1988) , however, employs a more complex data type: a tree representation. In further work by Asher (i 993) referents are grouped together into segments depending on Ihe discourse structure. His Segmented DRT (SDRT) uses a tree-like representation for the discourse sUuctui~ I Centering Theory (CD proposes a//st structure for the entities one preferably refers to in subsequent sentences. In order to cover coreference over discourse segments the centering model was extended by a stack mechanism (Grosz and Sidner, 1986) . Recently, these data structures have been criticized by Walker (1998) , because they seem to be too restrictive. She proposes a cache storage for the referenis in the focus of attention. ! propose instead a novel data structure for the representation of discourse referents. A/rushing list tSimilarly, Rhetorical Structure Theory (RST) makes use of a tree representation (Mann et aL,1988) . 100 is used to distinguish between the different types of referents according to their grammatical features wrt. number or gender. This list structure is furthermore combined with a hierarchical tree structure. The remaining pan of the paper is organised as follows. Section 2 introduces the main claims made by past theories. Focusing on SDRT and CT, I will highlight the (dis.-...) advantages of these two approaches. Section 3 provides the reader with an introduction to hashing lists and how they can be used for linguistic dam. Section 4 discusses how the different advantages of former approaches can be combined. First, DRT will be amended by using a hashing list for the discourse referents instead of a simple set. Second, the centering model will be applied to the representation gained. Finally, the shortcomings of a flat representation are presented and the introduction of discourse segments is discussed. Subsequently, section 5 describes a detailed formalisation of one example sequences by the representation proposed, before section 6 concludes. Background It has been commonly agreed that a discourse is hierarchically organised. However. this is already the lowest common denominator among current approaches to discourse grammars and text comprehension. There is a wide range of views of what a formal representation of a discourse should look like. The following sections give a short introduction to two suands of research concerned with discourse processing. The first one, DRT and followers, is a linguistically-oriented approach that. generally speaking, captures the hierarchical structure of a discourse by a tree-like representation. The second strand, based on CT, is motivated by psychological experiments and models the structure of a discourse as a list representation of possible discourse referents. Further developments of CT have employed a stack structure or a cache storage. t Q 0 0 0 0 0 0 0 0 0 0 0 0 0 2.1 Hierarchical discourse grammars SDRT (and RST) assume that so-called discourse (or rhetorical) relations are the links between discourse segments. A discourse relation has to be derived in order to achieve a coherent discourse. More importantly, the choice of this relation has a crucial influence on possible antecedents for anaphoric expressions, z Asher (i 993) defines in SDRT the terms subordination and openness that specify where open attachment sites are in a discourse structure. A treelike representation illustrates the hierarchical structure of the discourse. Basically, the nodes on the so-called \"right frontier\" of the discourse structure are assumed to be available for further attachment (Webber. 199 i ). Generally speaking, all nodes which dominate the current node of the newly processed sentence are open (i.e.D.Subordination). However, a restriction is introduced by the term D.Freedom which applies to all nodes that are directly dominated by a topic (i.e. ~ ~/3), unless it is the current node (see figure 1 ). An informal definition for possible attachment sites looks like the following: I. The last clause represented as a Discourse Representation Structure (DRS) K. 2. Any DRSs that are embedded in K. SDgr exploits discourse relations to establish a hierachical ordering of discourse segments. A socalled constituent graph indicates the dependencies Zl will concentrate on how SORT deals xvith this i.,~ue in the folltm, ing. A study that .shows how RST can be u.~d to make predictions regarding anaphora resolution in a text can be found in Fox (1987) . Any between ~cgments,e.,~pecially highlighting the ()pen attachment pt>h]ls. SDRT has been sucessful whet) phenomena are considered thai are explainable because of the hierarchical structure of the discourse. This approach is too restrictive when an anaphoric reference is drawn over .~egment. boundaries: (I) Other shortcomings concern formal, features. First,\" SDRT is not capable Of expressing underspecification for ambiguous sequences. Second, the derivation of the di~'~turse structure is not monotonic. Once derived, SDRSs are overwritten by an uLulate. Centering CT proposed by Grosz et al. (1995) offers a text comprehension model that describes the relation between the focus of attention and the choices of referring expressions within a discourse segment. The main idea of this theory is that a sentence possesses a center arid that normally one Continues to write (or talk) about this center. Each utterance 0~ gets a list of forward-looking centers C/(U~) assigned to it. Basically, all the entities mentioned by the sentence are ranked according to their degree of being in the center of the utterance. Each sentence also has a unique backward.looking center C'b(Ui). A main claim by the theory is that the most likely C6(Ui+t) is the most highly ranked Cl([/i)~ Hence, the criteria for ranking the entities on the forward-looking center list are crucial for the predicative power of this theory. No tm~ly, the grammatical relations subject, object etc. determine the preferred Cp(Ui) (i.e. the first entity on the Cl(Ui ) list). As mentioned earlier in this section, the initial account to centering is only concerned with the choice of referring expressions within a discourse segment. Since a more general theory to referring expressions is needed, an extension is presented by Grosz and Sidner (1986) . They use a stack mechanism for representing the different discourse segments. If one segment is closed off. the information regarding the 101 forward-and backward looking centers is popped off the stack. The new top clement of the stack contains the centering information from the old segment that the subsequent discourse continues with. This simple stack mechanism has been criticised. In particular Walker (1998) points out that (i) a long intervening discourse segment Can make it difficult to return back to earlier mentioned discourse referents and (ii) discourse referents introduced in a subordinated segment can easily be carded over to a higher segment (e.g. (I)). Note that a stack model would discard the information of a closed-off discourse segment. Walker proposes acache storage that keeps often-used discourse referents within a storage. If reference is made to an antecedent mentioned earlier in the discourse the information is restored from long term memory. Unfortunately, it is not quite clear how this retrieval operation can be fonnalised. In addition, it should be acknowledged that there are structured constraints of the discourse structure that do not allow the choosing of a recently mentioned referent. Data discussed within DRT, such as the sentence below, have been presented as evidence for a notion of (in-)accesibility. 3 Negation is a standard example that does not allow a reference to a discourse entity in the prevous sentence: (2) No man walks in the park. #He whistles. In the given example sequences the pronoun he cannot refer back to the discourse refett~ts introduced inthe previous sentence. Another example can be found in (3) that involves a conditional: (3) If a farmer owns a donkey, he beats it. #He hates it. Again, neither a pronominal reference by he nor by it is possible. It may be concluded from these data that a cache approach is not restrictive enough. The discussion so far has shown that the data structures used for discourse processing are either too restrictive or not restrictive enough. The next Section presents a novel way of representing dis: course referents introduced by a text. The data structure pre.sented is called a hashing list and allows for an efficient way to access stored information. \" Gordon et al. (1998) , for example, blend DRT with CT. 3 Hashing lists The following section describes how a hashing list works before the subsequent section shows how this data structure can be used for discourse processing. Data hashed One of the main problems for the de~,;ign of computer systems is the question of how data is stored and efficiently accessed. Hashing lists are often used for this purpose since this data structure is specifically designed for easy retrieval of stored data. I will first describe the data structure in more detail and then I will give an example of how data can be retrieved from a hashing list. Hashing lists. The basic data structure for a hashing list is an array A[min..max] (i.e. an indexed \u2022 list A that has a preset length of n elements). An array with the name year could be defined as follows: TYPE hash = ARRAY[0..99] of integer; The random access structure of this data type allows the programmer to assig n a single cell of the array directly (e.g. hash [99 ] : = 9; ). This is an advantage over other data structures such as trees. Hashing functions. A function has to be designed that tells us how to store data on the hashing list. This function takes the item to be stored and gives back an appropriate key k. The item can now be stored at the fight place on the list. Suppose we want the program to store the integer 2000 on the hashing list year defined earlier. A hashing function H ( i ) has to be be chosen such that this function gives back an index k. With this information the assignment hash [k] : =2000; can take place. A hashing function for integers may be the Modulo function. For the given example the key k would be 2 0 (i.e. 2000 rood 99 = 20). The hashing function can also give back an index k for a new item that has already been taken by another item (e.g. 119 has the same key). For the case of a-collision a special treatment is required. The most common one is the administration of an overflow area. The single places on the hashing list are lists that Would handle colliding \u2022 items. Figure 2 shows a pan of the hash list hash [ 19.. 21 ] with two items 2000 and 119 inserted. . 21] with collision resolution for two items 3.2 Discourse hashed I now show how a hashing list can be employed as a data structure for linguistic data. This may not be obvious after using only integers for storing on a hashing list. Domains of referents. Natural language processing requires a richer data structure than storing integers. However, in the end a hashing function for linguistic data will also consist of an array. Considering the different types of discourse referents, we can assume at least the following list of mr. erents to be relevant: singular male, singular female, singular neuter, plural and event referents. 4 We now take these conceivable referents and reserve each of them a slot in the domain array: domain [sgM, sgF, sON, pl, ev] Note that this way of writing the hashing list is actually only syntactic sugar for a normal definition such as domain [ 1.. 5 ]. Referent function. A function is needed that can assign a cell on the array domin to a newly introduced discourse referent. The semantic and syntactic information that comes with the a discourse referent gives us the key for this. Take for example a proper name such as Peter. The information that comes with it could be encoded as a feature value matrix such as proposed by Dale (1992) (see figure 3 ). The hashing function INDEX: ;CI ['AT pn SYN. [NUM. sing \" AGR:LGEND: male SEM: NAMED: peler] Figure 3 : The representation for Peter The function rezums sgM (or 1) as key for the array domain in the example given. Summing up, a hashing list was proposed to store discourse referents while processirlg natural language discourse. This kind of list contains several \"slots\" that await discourse referents described by a discourse. The grammatical features of gender and number distinguish the different referents. The following section discusses how this data structure is embedded into a discourse grammar. Referents in discourse The linguistic data presented earlier demonstrates the need for hierarchical constraints on anaphora resolution. But the data also show that previous approaches such as SDRT overemphasise this restriction. A refusal of any discourse structure consuaints, on the other hand, also does not seem to be appropriate. A cache storage that stores the frequently used discourse referents does not account for the data that were explainableby (S)DRT. This section describes how a hashing list can be used for the storage of discourse referents. The list is integrated into an SDRT framework. The information about the discourse segments is kept in order to cover data that is explainable by thehierarchicai discourse structure. In addition, the insight that a takes the information under the agreement feature sentence has a center as proposed by CT is also re-AGR and checks for the values regarding number': flected by the theow proposed. The discourse referand gender, ents are ordered according to centering preference. NUM: ,nng ] ~F.JqO: nude] *This is only a first list of very fundamental referents. But . the list can easily he extended .by more differentiated plural types, speech acts or types of referents. The following sections describe in more detail how the different concepts are integrated in the system proposed by this paper. First, the way discourse referents are stored via a hashing list is explained. Second, the ordering regarding the centering preference is imposed on the slots of the hashing list. And finally, a tree structure is presented that binds all the components together. Referents hashed In the system proposed, a hashing list stores the rel'ercnts introduced by the discourse. The hashing list contains at least the following slots: scjl, sgF, sgN, pl, ev. Since the basic formalism is DRT, we need to incorporate the hashing list into the formalism. In DRT, a DRS consists of the domain of discourse referents and the set of conditions, imposed on the referents. A sentence such as Peter sighs is represented by the box notation as follows: Referents re-centered Alter blending a I)RT representation with a hashing list lor a structured representation of discourse referents. 1 will introduce the centering I'~ature into the formalism. The different slots already contain the ordering of the referents regarding the centering preference. An apparent advantage over the centering approach should become clear: the referents are already separated from each other. A discourse such as (4) without any competing antecedents for the pronoun she is formalised by a HDRS as follows: Xl el p~ter( x D ez : sigh(xz) A hashing list substitutes, for the set of discourse referents offering ~ffezcnt slots for the discourse referents to be stored in: Peter(x z ) el : sigh(xl) The representation of a more complex sentence such as Peter gave John a book containing several discourse referents is in the following DRS: CT would predict for (4.b) that the book is the preferred forward looking center Cp. The backward looking center of (4c) is Mary. This is called a rough slu'ft in CT. A continuation of the center (Cp(Ui) = Cs(Ui+t)) is the preferred and most coherent constellation according to this theory. However, contrary to what CT would predict, it is no problem to read(4). The HDRS format seems to work fine with pronominal references to persons or objects. But we run into problems when the slot regarding the descihed events and states is considez~l. The following example (5) illustrates that a simple flat list representation as indicated above by et, a2, ss is not sufficient for more complex anaphori\u00a2 expressions such as event anaphora (Allen 1995): (5) The pronoun h in (5e) may refer to the entire situation described by (5a) through (5d). BUt this is not the only conceivable antecedent for it. The situation described by (5d) may be referred to by it as well, if we consider an alternation of (5e) as in the following: (Se') It was a foolish thing to do. Note that the situation in (5d) is the only situation available from the sequence (5a-d). The list structure for the evene slot does not reflect the structure of the discourse. A segmented discourse structure is needed here. Discourse segments The derivation of discourse structure used in this account is that.proposed by SDRT. This discourse grammar, as well as others, claims that discourse \u2022 segments originate from the derivation of so-called discourse relations (e.g. Narration, Elaboration etc.) due to our background or world knowledge. The account proposed by this paper assumes that HDRSs are grouped together wrt their discourse segment. Consider now the following sequence ( 6 ) with the possible continuation (6e) with a male and female pronoun (depending on whether a male or female protagonist was introduced by the first sentence). (re) She/He was glad that everything worked out so nicely. The first continuation does not cause any problems. although the antecedent for she was intro-thlced by the iirst sentence of the sequence. Since no odler COml~.'ting discourse refcrellls have been menlioned, the resolulion process works without problem. However; .substituting a male protagonist called Mark for the female protagonist in the first sentence does cause problems for the understanding of 16). In this case, it is unclear who was meant by he. Note furthermore thai only two antecedents are available, even though three male antecedents have been introduced. Only the one in the last sentence (i.e. Peter), or the one introduced by the first sentence (i.e. Mark) are conceivable antecedents. A different continuation does not show this ambiguity: (6e') He decided just to buy beer. The continuation in (6\u00a2') is an elaboration of the last sentence. Hence Peter, who was responsible for the booze, is the only possible antecedent. The following sentence is the last piece of evidence that the discourse segment allows only antecedents that are available on the so..ealled right frontier. The following sentence shows that it is not possible to refer to Tom, who wrote the cards, with the last sentence: (6\u00a2\") #He decided to use thick blue paper. Formalisation This section is an introduction to the formalism used. The formalism consists oftbe following parts: DRT The standard DRT theory is used to obtain a semantic representation for the meaning of a clau~ (Kamp and Reyle, \"i993). However, the set of discourse referents is more structured than in the standard approach. It also goes beyond the approach by Asher and Wada (1988) (see below for further details). Hashing lists The data structure of hashing lists is used to divide the set of discourse referents up into different slots. Each slot contains only referents of the same type, as there are singular male, female, or neuter referents, plural entities and events. SDRT A hierarchical discourse structure is needed to explain anaphoric expressions that refer back over segments boundaries. In addition, a theory is needed that takes into account world knowledge for the derivation of discourse relations (Asher. 1993) . Underspecified Tree Structure Data have been discussed thatshow an ambiguity regarding the dis\u00a2oune structm~ In order to express the ambiguity formally an underspecification mechanism is employed (Schilder, 1998) . Ixl ly, ! ]el \u2022 I will now present the derivation of the sequence in (6). $.1 Elaberation First, a HDRS representation is to be de~ved for the first sentence. The HDRS for (6a)looks like a norreal DRS, the only difference is the hashing list that contains the discourse referents in different slots. Second, a HDRS for the second sentence is derived ~ and, in addition, adiscourse relation is inferred from our world knowledge. An elaboration relation links the two HDRSs inthe given case. Within an underspecified version of SDRT this discourse structure is represented as shown in figure 4 . 106 The nodes in the tree are labels for (Segmented) HDRSs. The two labels st and a~ denote the semantic content of the two first sentences, respectively. The label KRt refers to the derived relation daboration that holds between the two segments K~x and K~t. Note that the left daughter node of the K~ is already deiermined by setting K~t equal to at. The right daughter node, however, is left open. This is indicated by ~the dotted line between K,~ l and s2. This fine expr~ses graphically the dominance relation between tree nodes (<Z') in contrast to the straight line that indicates an immediate dominance relation (<l). s The underspecification of the tree structure allows us to define where possible attachment points are on the right frontier of the discourse structure. The tree structure in figure 4 possesses two attach-Sl follow here the description of a tree logic such as that used by Kallmeyer ( 1996} or Muskens (1995) . @ 0 0 0 0 0 0 0 @ @ 0 0 0 0 0 0 0 @ 0 0 0 0 0 @ 0 0 0 0 0 @ @ 0 0 0 @ 0 0 0 @ @ 0 ]'(T Two further remarks are to be made regarding the representation in figure 5 before continuing with the sequence. First, an additional condition is added to the topic node. The information about the temporal relation between the situation-et and the subordinated situation was added on this level of the discourse tree. Note that it is still open which event e will finally show up !n the node referred to by K~x. ~ Only afterclosing off this discourse segment will it be clear which event(s) elaborated the situation ez. Second, a plural entity Zl is stored in K~z.. This entity combines the singular entities into a plural one. A more elaborate mechanism is needed here in order to combine only entities of the same type (e.g. persons). For the time being, all plural entities s/C'~z.g can be described as a pointer to the plural slot of K,~t. are stored in this one slot. Continuing the thread A//st relation can be derived for the sentences (6b) and (6c) (see figure 6 ). The semantic content sa is added to the discourse tree linked by the discourse relation and furthermore a common topic is added at KTR2. The topic information has to be an abstract representation of the two HDRSs a2 and as. In order to achieve that, two new discourse referents am introduced: a plural entity Z4 comprising za.and zs (i.e. Tom and Peter) and a complex situation e4 temporally covering ea and e4. Looking back After the third sentence has been processed, the next sentence contains a pronoun. In case of she the pronoun looks for a female singular-antecedent. The appropriate discourse referent is found on the right frontier in the appropriate slot. Alternatively, if sequence (6) contains the male protagonist named Mark in the first sentence instead of Ma~., the Ixzrsonal Pronoun he could I\u00a31v\u00a2 two Posnll~lc ;m-l\u00a2cCdc:nts: I~'ler or MCar/,'. How can Ihal be L'xplaincd by the formalism? Figure 7 depicts the formalisation of the discoupe (6a-c) cmly showing the hashing lists on the right frontier. The dotted arrows indicate the hashing list as it is distributed over the right frontier of the discourse structure. There is only one entry for a female singular antecedent over the levels of nodes on the right frontier. However, if there were a male protagonist, the hashing list for the referents in node /x'~o would contain a discourse referent in the first slot. The list of possible antecedents for he would be xa and x t. The separation of different reference types also allows us to explain sequences such as ( I ). The discourse continues on the highest level, but it is possible to refer to discourse referents that got introduced on a lower level of the discourse structure. The link between two situations can be made via a rhetorical rela6on, and at the same time the slots for the other referents at the right frontier are still accessible. The hashing list also models a hashed right frontier. Past approaches always collapsed discourse attachment with the restriction regarding possible antecedents for anaphora (cf. the stack mechanism in CT or the tree representation for (S)DRT). The formalisation can also provide an explanation of why competing antecedents can cause an ambiguity for the pronoun resolution. The accessibility of hashifig lists on different levels of the discourse structure explains why, in this example, a female antecedent can be used as an antecedent even over several intervening sentences. It is important to highlight the difference of the account presented here to past approaches: The discourse referents are grouped together according to their agreement features. The DRT account by Asher and Wada, for instance, stores the discourse referents in a tree according to the accessibility conditions imposed by DRT and singles out the appropriate antecedents according to number and gender information as well as other criteria. There the agreement information is used to \"weed out\" possible antecedents, whereas within a HDRS the discourse referents are already accordingly stored. It should also be clear that an embedded discourse cannot be extended infinitively, as shown by the cache approach. A restriction has to be imposed on the number of levels where an antecedent can be looked ['or. Future research, however, has to clarify 108 this is.~uc Iurlhcr. Nt)t\u00a2 thai Ihis I'ormali.~atio. c:q~itahzcs on the insight gained From the cache al)proacli. An elaboration cannot be continued for too long. since the working memory of the reader might lose track of the protagonist(s)introduced on the highest level. On the other hand, this fonnalisation also covers mor~ data than the cache approach. A text comprehension theory that employs a cache storage cannot account for a discou~e such as ( 6 ) with a non-competing female protagonist. The discourse referent for Mary would have been stored in long term memory, because no differentiation is made betwee n the grammatical types of possible antecedents according to the cache approach. Conclusion I have proposed a new data structure for the processing of coreference in a discourse. A hashbzg list was employed to store referents according to their grammatical features such as number or gender. Because of this, better accessibility to non-competing antecedents can be modelled by the approach presented. The discourse grammar used combined insights from different approaches to discourse processing: (S)DRT and CT. In addition, a tree logic was used to allow underspecification in the representation of ambiguous. ~quences. Future research has to focus on the evaluation of ..'-.. . \"., \"\" \u2022 . ! Acknowledgments I would like to thank the two annomynous reviewers to their comments and feedback. Special thanks to Christie Manning for providing me with all her help.",
    "abstract": "This paper argues for a novel data structure for the representation of discourse referents. A so-called hashing list is employed to store discourse referents according to their grammatical features. The account proposed combines insights from several theodes of discourse comprehension. Segmented Discourse Representation Theory (Asher, 1993) is enriched by the ranking system developed in centering theory (Grosz et al., 1995) . In addition, a tree logic is used to represent underspecification within the discourse structure (Schilder, 1998) .",
    "countries": [
        "Germany"
    ],
    "languages": [],
    "numcitedby": "0",
    "year": "1999",
    "month": "",
    "title": "Reference Hashed"
}