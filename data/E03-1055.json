{
    "article": "ich warde gerne von KOln nach MUnchen fahren In this paper we compare two approaches to natural language understanding (NLU). The first approach is derived from the field of statistical machine translation (MT), whereas the other uses the maximum entropy (ME) framework. Starting with an annotated corpus, we describe the problem of NLU as a translation from a source sentence to a formal language target sentence. We mainly focus on the quality of the different alignment and ME models and show that the direct ME approach outperforms the alignment templates method. V V @want question @origin @destination @going proach uses the maximum entropy (ME) framework (Berger et al., 1996) . For both frameworks, the objective can be described as follows. Given a natural source sentence fiJ = fj...f./ we choose the formal target language sentence ef = el \u2022\u2022\u2022e,...ei with the highest probability among all possible target sentences: argmax { Pr (ej ei fi' ) (1) The objective of natural language understanding (NLU) is to extract all the information from a natural language based input which are relevant for a specific task. Typical applications using NLU components are spoken dialogue systems (Levin and Pieraccini, 1995) or speech-to-speech translation systems (Zhou et al., 2002) . In this paper we present two approaches for analyzing the semantics of natural language inputs and discuss their advantages and drawbacks. The first approach is derived from the field of statistical machine translation (MT) and is based on the source-channel paradigm (Brown et al., 1993) . Here, we apply a method called alignment templates (Och et al., 1999) . The alternative ap-argmax { Pr(fief) \u2022 Pr(ef) \u2022 (2) e Using Bayes' theorem, Eq. 1 can be rewritten to Eq. 2, where the denominator can be neglected. The argmax operation denotes the search problem, i.e. the generation of the sequence of formal semantic concepts in the target language. An example is depicted in Figure 1 . The main difference between both approaches is that the ME framework directly models the posterior probabilities whereas the statistical machine translation approach applies Bayes' theorem resulting in two distributions: the translation probability Pr(fil lef) and the language model probability Pr(en. In the following, we compare both ap-proaches for two NLU tasks which are derived from two different domains and show that the ME approach clearly outperforms the statistical machine translation approach within these settings. Related Work The use of statistical machine translation for NLU tasks was firstly proposed by (Epstein et al., 1996) . Whereas (Epstein et al., 1996) model hidden clumpings, we use a method called alignment templates. Alignment templates have been proven to be very powerful for statistical machine translation tasks since they allow for many-to-many alignments between source and target words (Och et al., 1999) . Alignment templates for NLU tasks were firstly proposed by (Macherey et al., 2001) . Applying ME translation models to NLU has been firstly suggested by (Papineni et al., 1997; Papineni et al., 1998) . Here, we use a conceptbased meaning representation as formal target language and propose different features and structural constraints in order to improve the NLU results. The remainder of the paper is organized as follows: in the following section, we briefly describe the concept based meaning representation as used for the NLU task. Section 3 describes the training and search procedure of the alignment templates approach. In section 4, we outline the ME framework and describe the features that were used for the experiments. Section 5 presents results for both the alignment templates approach and the ME framework. For both approaches, experiments were carried out on two different German NLU tasks. Concept-based semantic representation A crucial decision, when designing an NLU system, is the choice of a suitable semantic representation, since interpreting a user's request requires an appropriate formalism to represent the meaning of an utterance. Different semantic representations have been proposed. Among them, case frames (Issar and Ward, 1993) , semantic frames (Bennacef et al., 1994) , and variants of hierarchical concepts (Miller et al., 1994) as well as flat concepts (Levin and Pieraccini, 1995) are the most prominent. Since we regard NLU as a special case of a translation problem, we have chosen a flat concept-based target language as meaning representation. A semantic concept (in the following briefly termed as concept) is defined as the smallest unit of meaning that is relevant to a specific task (Levin and Pieraccini, 1995) . Figure 1 depicts an example of a concept-based meaning representation for the input utterance 'I would like to go from Munich to Cologne' from the domain of a German traintimetable information system. The first line shows the source sentence, the last line depicts the target sentence consisting of several concepts, marked by the preceding @ -symbol. The connections between the words describe the alignments between source and target words. Alignment Templates The statistical machine translation approach decomposes Pr(eflg) into two probability distributions, the language model probability and the translation probability. The architecture of this method is depicted in figure 2 . For the translation approach, we use the same training procedure as for the automatic translation of natural languages. When rewriting the translation probability Pr(fiJ 4) by introducing a 'hidden' alignment al = with aj C {1,...,1}, we obtain: 61 1) = E Pr(fi',aPef) a = Efl Pr(fi,aj a = The IBM models as proposed by (Brown et al., 1993) and the HMM model as suggested by (Vogel et al., 1996) result from different decompositions of Pr(fif ,a . i! 4). For training the alignment model, we train a sequence of models of increasing complexity. Starting from the first model IBM1, we proceed over the HMM model, IBM3 up to IBMS. Using the model IBMS as a result of the last training step, we use the alignment template approach to model whole word groups. (3) Pr(e) Language Model @destination @origin @train determination @want_guestion @hello @yes Figure 2: Architecture of the translation approach based on the source-channel paradigm. 1.3-1 3 -1 , a1 \u2022 ei) \u2022 U. Model Figure 3 : Example of alignment templates for representing a natural sentence as a sequence of concepts. following way: The alignment templates approach provides a twolevel alignment: a phrase level alignment and a word level alignment within the phrases. As a result, source and target sentence must be segmented into K word-groups, describing the phrases: = 13 (i1.1:61 ) = / - ei = el ek = eik 1+1, \u2022 \u2022 \u2022 \u2022 ei k k =1 .f = .171 - f = fik ,\u00b11,\u2022 \u2022 \u2022 , = 1 a'(i,i) := { 1 if (i, j) are linked in a 0 otherwise. By decomposing the translation probability with the above-mentioned definitions, we arrive at: Pr(fii = E Pr(R ( , 7 4( TT') af( E P(6k lak-1, K) \u2022 P(ik Fak ) \u2022 -6-fc k=1 Denote z = (e ,f .a ) an alignment template, we obtain p(f) = P(z1 -) \u2022 p(fTz.\"). The phrase translation probability p(f z, \"g) is decomposed according to the following equation: P(f / ,.1', 71/ ), -0 Cet, F') \u2022 6 C-1, i-/ ) \u2022 Hp(fi a where 6(\u2022 ; \u2022) denotes the Kronecker-function. The probability p(fi a can be decomposed in the Training During training, we proceed over all sentence pairs and estimate the probabilities by determining the relative frequencies of applying an alignment template. Figure 3 shows an example of alignment templates computed for a sentence pair from the German TABA corpus. Search If we insert the alignment template model and a standard left-to-right language model in the source-channel approach (Eq. 2), we obtain the following search criterion in maximum approximation which is used in combination with beam search: ei -/ argmax{Pr(ef) \u2022 Pr(fil { argmax max e f K,qc=e-f,fik,iii-cenk,zr I K { H p(ei lei-1) H P(iiklak-i) \u2022 P(ZklEdk) \u2022 P(IdZk\u2022 Eak)}} \u2022 (4) @origin -[ @destination ... .. .. .. \u2022 \u2022 \u2022 \u2022 n \u2022 @want_questionf \u2022 @train determination n \u2022 \u2022 \u2022 @yes Source Language Text ( Preprocessing) A1 \u2022 hi (el, fiJ) Global Search A2 h2 =argmax E A ne hm el. m=1 Ad \u2022 hm (el , fiJ) Target Language Text Figure 4 : Architecture of the maximum entropy model approach. Maximum Entropy Models As alternative to the source-channel approach, we can directly model the posterior probability Pr(eflfil ). A well-founded framework for doing this is maximum entropy (Berger et al., 1996) . In this framework, we have a set of /If feature functions hm (ef,m = 1, , A I. For each feature function hm , there is a model parameter A,. The posterior probability can then be modeled as follows: PAiw(ef I fi') exp [EAm hm (ef, fil ) ] m=1 E exp[E fif)] ei m=1 The architecture of the ME approach is summarized in Figure 4 . For our approach, we determine the corresponding formal target language concept for each word of a natural language input. Therefore, we distinguish whether a word is an initial or a non-initial word of a concept. This procedure yields a oneto-one translation from source words to formal semantic concepts, i.e. the length of both sequences must be equal (I = J). Figure 5 depicts a oneto-one mapping applied to a sentence/concept pair from the German TABA corpus. \u25a0: 4) 0 E-1 H 0 H It H U CD '0 CD >1 p g tn- al A ta 14 Figure 5 : Example of a sentence/concept mapping using maximum entropy ('i' denotes initial concepts, 'n' non-initial concepts resp.). Further, we assume that the decisions only depend on a limited window of fr92 = f3 _2...f3+2 around the current source word f3 and on the two predecessor concepts. Thus, we obtain the following second-order model: Pr (efl f H Pr (e I f ij ) TT 3=1 J-1 1 2 1 ' fj-+22 ) \u2022 j= 1 Transition constraints: Due to the distinction between initial and non-initial concepts, we have to ensure that a non-initial concept must only follow its corresponding initial one. To guarantee this, a straightforward method is to implement a feature function that models the transitions and to set the feature values of all invalid transitions to zero, so that they will be discarded during search. Feature functions We have implemented a set of binary valued feature functions for our system: Lexical features: The words f3+2 are compared 3 -2 to a vocabulary. Words which are not found in the vocabulary are mapped onto an 'unknown word'. Formally, the feature hf,d,e( d i 121, ei , fjjf22 ) = 6 (fi+d, f) \u2022 61 (e.i,e) d {-2, , will fire if the word fj\u00b1d matches the vocabulary entry f and if the prediction for the current concept equals e. 6(\u2022,.) again denotes the Kroneckerfunction. Word features: Word characteristics are covered by the word features, which test for: -Capitalization: These features will fire if f3 is capitalized, has an internal capital letter, or is fully capitalized. -Pre-and suffixes: If the prefix (suffix) of f3 equals a given prefix (suffix), these features will fire. Transition features: Transition features model the dependence on the two predecessor concepts: /-1 ri+2 ej \u2022 -2 = (5(ei -d, e' ) \u2022 6 (e d c {I, . Prior features: The single concept priors are incorporated by prior features. They just fire for the currently observed concept: j = 6(e e) -2\u2022ei\u2022 .1, \u2022 Compound features: Using the feature functions defined so far, we can only specify features that refer to a single word or concept. To enable also word phrases and word/concept combinations, we introduce the following compound features: have been observed on the training data at least K times. Although this method is not minimal, i e the reduced feature set may still contain features that are redundant or non-informative, it turned out to perform well in practice. Experiments were carried out with different thresholds. It turned out that for the NLU task, a threshold of 2 for all features achieved the best results, except for the prefix and suffix features, for which a threshold of 6 yielded best results. Training For the purpose of training, we consider the set of manually annotated and segmented training sentences to form a single long sentence. As training criterion, we use the maximum class posterior probability criterion: { N = argmax E log pAiv, (en, fn ) \u2022 n=1 This corresponds to maximizing the likelihood of the ME model. The direct optimization of the posterior probability in Bayes' decision rule is referred to as discriminative training in automatic speech recognition since we directly take into account the overlap in the probability distributions. Since the optimization criterion is convex, there is only a single optimum and no convergence problems occur. To train the model parameters we use the Generalized Iterative Scaling (GIS) algorithm (Darroch and Ratcliff, 1972) . In practice, the training procedure tends to result in an overfitted model. To avoid overfitting, (Chen and Rosenfeld, 1999) have suggested a smoothing method where a Gaussian prior on the parameters is assumed. Instead of maximizing the probability of the training data, we now maximize the probability of the training data times the prior probability of the model parameters: Search In the test phase, the search is performed using the so called maximum approximation, i.e. the most likely sequence of concepts ef is chosen among all possible sequences ef : {Pr(ei fij )} argma,x E Arrt h,\",(e -1, fiJ )} . rrt=1 Therefore, the time-consuming renormalization in Eq. 5 is not needed during search. We run a Viterbi search to find the highest probability sequence (Borthwick et al., 1998) . Results Experiments were performed on the German inhouse Philips TABA corpus l and the German inhouse TELDIR corpus 2 . The TABA corpus is a text corpus in the domain of a train timetable information system (Aust et al., 1995) . The TELDIR corpus is derived from the domain of a telephone directory assistance. Along with the bilingual annotation consisting of the source and target sentences, the corpora also provide the affiliated alignments between source words and concepts. The corpora allocations are summarized in table 1 and table 2 . For the TABA corpus, the target language consists of 27 flat semantic concepts (23 concepts for the TELDIR application, resp.), including a filler concept. Table 3 summarizes an excerpt of the most frequently observed concepts. In order to improve the quality of both approaches, we used a set of word categories. Since it is unlikely that every city name is observed during training, all city names were mapped onto the category $ CI TY{c it y name}. Table 4 shows an excerpt of different categories which were used for both the training and the testing corpora. We have computed three different evaluation criteria: -The concept error rate (CER), which is equally defined to the well known word error 'The TABA corpus was kindly provided by Philips Forschungslaboratorien Aachen. 2 The data-collection was partially funded by Ericsson Eurolab Deutschland GmbH. The sentence error rate (SER), which is defined as ratio between the number of falsely translated sentences and the total number of sentences w.r.t. the concept-level. The concept-alignment error rate (C-AER), which is defined as the ratio of the sum of falsely aligned words, i.e. words mapped onto the wrong concept, and the total number of words in the reference (Macherey et al., 2001) . The error rates obtained by using the alignment templates method are summarized in table 5 argmax C' Concept Example @origin von $C1TY @destination nach $C1TY @person mit Herrn $SURNAME @ organization mit der $COMPANY Table 3 : Excerpt of the most frequently observed concept for the TABA and the TELDIR corpus. One of the advantages of the ME approach results from the property that the ME framework directly models the posterior probability and allows for integrating structural information by using appropriate feature functions. Furthermore, the ME approach is consistent with the features observed on the training data, but otherwise makes the fewest possible assumptions about the distribution. Since the optimization criterion is convex, there is only a single optimum and no con- vergence problems occur. Due to the manual annotation using initial and non-initial concepts, we implicitly model a one-to-one alignment from nat-ural language words to semantic concepts whereas the translation approach tries to learn the hidden alignment automatically. We investigated the effect of this difference by keeping the segmentation of the training data fixed for the translation approach. This approach is referred to as Model 5*, and the results are shown in table 5 and table 6. As can be seen from these tables, this variant of the translation approach has a somewhat lower error rate, but is still outperformed by the ME approach. Summary In this paper, we have investigated two approaches for natural language understanding: the alignment templates approach which is based on the sourcechannel paradigm and the maximum entropy approach which directly models the posterior probability. Both approaches were tested on two different corpora. We have shown that within these settings the maximum entropy method clearly outperforms the alignment templates approach.",
    "abstract": "ich warde gerne von KOln nach MUnchen fahren In this paper we compare two approaches to natural language understanding (NLU). The first approach is derived from the field of statistical machine translation (MT), whereas the other uses the maximum entropy (ME) framework. Starting with an annotated corpus, we describe the problem of NLU as a translation from a source sentence to a formal language target sentence. We mainly focus on the quality of the different alignment and ME models and show that the direct ME approach outperforms the alignment templates method.",
    "countries": [
        "Germany"
    ],
    "languages": [
        "German"
    ],
    "numcitedby": "0",
    "year": "2003",
    "month": "April",
    "title": "Comparison of Alignment Templates and Maximum Entropy Models for {NLP}"
}