{
    "article": "Keyphrase annotation is the task of identifying textual units that represent the main content of a document. Keyphrase annotation is either carried out by extracting the most important phrases from a document, keyphrase extraction, or by assigning entries from a controlled domain-specific vocabulary, keyphrase assignment. Assignment methods are generally more reliable. They provide better-formed keyphrases, as well as keyphrases that do not occur in the document. But they are often silent on the contrary of extraction methods that do not depend on manually built resources. This paper proposes a new method to perform both keyphrase extraction and keyphrase assignment in an integrated and mutual reinforcing manner. Experiments have been carried out on datasets covering different domains of humanities and social sciences. They show statistically significant improvements compared to both keyphrase extraction and keyphrase assignment state-of-the art methods. Introduction Keyphrases are words and phrases that give a synoptic picture of what is important within a document. They are useful in many tasks such as document indexing (Gutwin et al., 1999) , text categorization (Hulth and Megyesi, 2006) or summarization (Litvak and Last, 2008) . However, most documents do not provide keyphrases, and the daily flow of new documents makes the manual keyphrase annotation impractical. As a consequence, automatic keyphrase annotation has received special attention in the NLP community and many methods have been proposed (Hasan and Ng, 2014) . The task of automatic keyphrase annotation consists in identifying the main concepts, or topics, addressed in a document. Such task is crucial to access relevant scientific documents that could be useful for researchers. Keyphrase annotation methods fall into two broad categories: keyphrase extraction and keyphrase assignment methods. Keyphrase extraction methods extract the most important words or phrases occurring in a document, while assignment methods provide controlled keyphrases from a domain-specific terminology (controlled vocabulary). The automatic keyphrase annotation task is often reduced to the sole keyphrase extraction task. Unlike assignment methods, extraction methods do not require domain specific controlled vocabularies that are costly to create and to maintain. Furthermore, they are able to identify new concepts that have not been yet recorded in the thesaurus or ontologies. However, extraction methods often output ill-formed or inappropriate keyphrases (Medelyan and Witten, 2008) , and they produce only keyphrases that actually occur in the document. Observations made on manually assigned keyphrases from scientific papers of specialized domains show that professional human indexers both extract keyphrases from the content of the document and assign keyphrases based on their knowledge of the domain (Liu et al., 2011) . Here, we propose an approach that mimics this behaviour and jointly extracts and assigns keyphrases. We use two graph representations, one for the document and one for the specialized domain. Then, we apply a co-ranking algorithm to perform both keyphrase extraction and assignment in a mutually reinforcing manner. We perform experiments on bibliographic records in three domains belonging to humanities and social sciences: linguistics, information science and archaeology. Along with this approach come two contributions. First, we present a simple yet efficient assignment extension of a state-of-the-art graph-based keyphrase extraction method, TopicRank (Bougouin et al., 2013) . Second, we circumvent the need for a controlled vocabulary by leveraging reference keyphrases from training data and further take advantage of their relationship within the training data. Related Work Keyphrase extraction Keyphrase extraction is the most common approach to tackle the automatic keyphrase annotation task. Previous work includes many approaches (Hasan and Ng, 2014), from statistical ranking (Salton et al., 1975) to binary classification (Witten et al., 1999) , through graph-based ranking (Mihalcea and Tarau, 2004) of keyphrase candidates. As our approach uses graph-based ranking, we focus on the latter. For a detailed overview of keyphrase extraction methods, refer to (Hasan and Ng, 2010; Hasan and Ng, 2014) . Since the seminal work of Mihalcea and Tarau (2004) , graph-based ranking approaches to keyphrase extraction are becoming increasingly popular. The original idea behind these approaches is to build a graph from the document and rank its nodes according to their importance using centrality measures. In TextRank (Mihalcea and Tarau, 2004) , the input document is represented as a co-occurrence graph in which nodes are words. Two words are connected by an edge if they co-occur in a fixed-sized window of words. A random walk algorithm is used to iteratively rank the words, then extract the keyphrases by concatenating the most important words. The random walk algorithm simulates the \"voting concept\", or recommendation: a node is important if it is connected to many other nodes, and if many of those are important. Thus, let G \" pV, Eq be an undirected graph with a set of vertices V and a set of edges E, and let Epv i q be the set of nodes connected to the node v i . The score Spv i q of a vertex v i is initialized to 1 and computed iteratively until convergence using the following equation: Spv i q \" p1 \u00b4\u03bbq `\u03bb \u00ff v j PEpv i q Spv j q |Epv j q| (1) where \u03bb is a damping factor that has been set to 0.85 by Brin and Page (1998) for a trade-off between ranking accuracy and fast convergence. Following up the work of Mihalcea and Tarau (2004) , Wan and Xiao (2008) added edge weights (cooccurrence numbers) to the random walk and further improved the graph with co-occurrence information borrowed from similar documents. To extract keyphrases from a document, they first look for five similar documents, then use them to add new edges between words within the graph and reinforce the weight of existing edges. Liu et al. (2010) biased multiple graphs with topic probabilities drawn from LDA (Latent Dirichlet Allocation) (Blei et al., 2003) , to rank the words regarding each graph and to merge the rankings together. This method performs as many rankings as the number of topics and gives higher importance scores to high-ranking words for as many topics as possible. By doing so, Liu et al. (2010) increase the topic coverage provided by the extracted keyphrases. Most recently, Zhang et al. (2013) and Bougouin et al. (2013) explored further the value of topics for keyphrase extraction. Zhang et al. (2013) used graph co-ranking to improve the method of Liu et al. (2010) by introducing LDA topics right inside the graph. Bougouin et al. (2013) proposed to represent topics as clusters of similar keyphrase candidates within the document (i.e. words and phrases from the document), to rank these topics instead of the words and to extract the most representative candidate as keyphrase for each important topic. As our work extends that of Bougouin et al. (2013) , we present a detailed description of their method in Section 3.1. Keyphrase assignment Keyphrase assignment provides keyphrases for every document of a specific domain using a controlled vocabulary. Dissimilar to keyphrase extraction, keyphrase assignment also aims to provide keyphrases that do not occur within the document. This task is more difficult than keyphrase extraction and has, therefore, seldom been employed for automatic keyphrase annotation. The state-of-the art method for keyphrase assignment is KEA++ (Medelyan and Witten, 2006) . KEA++ uses a domain-specific thesaurus to assign keyphrases to a document. First, keyphrase candidates are selected among the n-grams of the document. N-grams that do not match a thesaurus entry are either removed or substituted by a synonym that matches a thesaurus entry. This candidate selection approach induces a limitation of keyphrase assignment, refered to as keyphrase indexing by Medelyan and Witten (2006) , because it only assigns keyphrases if they occur within the document. Second, KEA++ exploits the semantic relationships between keyphrase candidates within the thesaurus as the main feature of a Naive Bayes classifier. Compared to similar methods without domain specific resources, KEA++ achieves better performance. However, such resources are not readily available for most domains, and if so, they could be quickly out of date. The application scenario of KEA++ are thus restricted. Our proposition is to model with graphs both keyphrase extraction and assignment and to take benefit of this unified modelling to perform accurate keyphrase annotation. Co-ranking for Keyphrase Annotation This section presents TopicCoRank 1 , our keyphrase annotation method built on the existing method TopicRank (Bougouin et al., 2013) to which we add keyphrase assignment. We first detail TopicRank, then present our contributions. TopicRank TopicRank is a graph-based keyphrase extraction method that relies on the following five steps: 1. Keyphrase candidate selection. Following previous work (Hasan and Ng, 2010; Wan and Xiao, 2008) , keyphrase candidates are selected from the sequences of adjacent nouns and adjectives that occur within the document (/(N|A)+/). 2. Topical clustering. Similar keyphrase candidates c are clustered into topics based on the words they share. Bougouin et al. (2013) use a Hierarchical Agglomerative Clustering (HAC) with a stem overlap similarity (see equation 2) and an average linkage. At the beginning, each keyphrase candidate is a single cluster, then candidates sharing an average of 1 {4 stemmed words with the candidates of another cluster are iteratively added to the latter. simpc i , c j q \" |stemspc i q X stemspc j q| |stemspc i q Y stemspc j q| (2) where stemspc i q is the set of stemmed words of the keyphrase candidate c i . 3. Graph construction. A complete graph is built, in which nodes are topics and edges are weighted according to the strength of the semantic relation between the connected topics. The closer are the pairs of candidates xc i , c j y of two topics t i and t j within the document, the stronger is their semantic relation w i,j : w i,j \" \u00ff c i Pt i \u00ff c j Pt j distpc i , c j q (3) distpc i , c j q \" \u00ff p i Ppospc i q \u00ff p j Ppospc j q 1 |p i \u00b4pj | (4) where pospc i q represents all of the offset positions of the first word of the keyphrase candidate c i . 4. Topic ranking. Topics t are ranked using the importance score Spt i q of the TextRank formula, as modified by Wan and Xiao (2008) to leverage edge weights: Spt i q \" p1 \u00b4\u03bbq `\u03bb \u00ff t j PEpt i q w ij Spt j q \u00ff t k PEpt j q w jk (5) 5. Keyphrase selection. One keyphrase candidate is selected from each of the N most important topics: the first occurring keyphrase candidate. Our work extends TopicRank to assign domain-specific keyphrases that do not necessarily occur within the document. First, we add a second graph representing the domain and unify it to the topic graph. Second, we define a co-ranking scheme that leverages the new graph. Finally, we redefine the keyphrase selection step for both extracting and assigning keyphrases. Unified graph construction TopicCoRank operates over a unified graph that connects two graphs representing the document topics, the controlled keyphrases and the relations between them (see Fig. 1 ). The controlled keyphrases are the keyphrases that were manually assigned to training documents. Considering the manually assigned keyphrases as the controlled vocabulary circumvents the need for a manually produced controlled vocabulary and also allows us to further take advantage of the semantic relatonship between the domainspecific (controlled) keyphrases. Because controlled keyphrases are presumably non-redundant, we do not topically cluster them as we do for keyphrase candidates. controlled keyphrases Let G \" pV \" T Y K, E \" E in Y E out q denote the unified graph. Topics T \" tt 1 , t 2 , ..., t n u and controlled keyphrases K \" tk 1 , k 2 , ..., k m u are vertices V connected to their fellows by edges E in \u010e T \u02c6T Y K \u02c6K and connected to the other vertices by edges E out \u010e K \u02c6T (see Fig. 1 ). k 1 k 2 k 3 k 4 k 5 document topics t 1 t 2 t 3 t 4 Legend: : E in : E out To unify the two graphs, we consider the controlled keyphrases as a category map and connect the document to its potential categories. We create an unweighted edge xk i , t j y P E out to connect a controlled keyphrase k i and a topic t j if the controlled keyphrase is a member of the topic, i.e. a keyphrase candidate of the topic 2 . We create an edge xt i , t j y P E in or xk i , k j y P E in between two topics t i and t j or two controlled keyphrases k i and k j when they co-occur within a sentence of the document or as keyphrases of a training document, respectively. Edges xt i , t j y P E in are weighted by the number of times (w i,j ) topics t i and t j occur in the same sentence within the document. Edges xk i , k j y P E in are weighted by the number of times (w i,j ) keyphrases k i and k j are associated to the same document among the training documents. Doing so, the weighting scheme of edges E in is equivalent for both topics and controlled keyphrases. This equivalence is essential to ensure that not only controlled keyphrases occurring in the document can be assigned by properly co-ranking topics and controlled keyphrases. Graph-based co-ranking TopicCoRank gives an importance score Spt i q or Spk i q to every topic or controlled keyphrase using graph co-ranking (see equations 6 and 7). Our graph co-ranking simulates the voting concept based on inner and outer recommendations. The inner recommendation is similar to the recommendation computed in previous work (Bougouin et al., 2013; Mihalcea and Tarau, 2004; Wan and Xiao, 2008) . The inner recommendation R in comes from nodes of the same graph (see equation 8). A topic or a controlled keyphrase is important if it is strongly connected to other topics or controlled keyphrases, respectively. The outer recommendation influences the ranking of topics by controlled keyphrases and of controlled keyphrases by topics. The outer recommendation R out comes from nodes of the other graph (see equation 9). A topic or a controlled keyphrase gain more importance if it is connected to important controlled keyphrases or an important topic, respectively. Spt i q \" p1 \u00b4\u03bbt q R out pt i q `\u03bbt R in pt i q (6) Spk i q \" p1 \u00b4\u03bbk q R out pk i q `\u03bbk R in pk i q (7) R in pv i q \" \u00ff v j PE in pv i q w ij Spv j q \u00ff v k PE in pv j q w jk (8) R out pv i q \" \u00ff v j PEoutpv i q Spv j q |E out pv j q| (9) where v i is a node representing a keyphrase or a topic. \u03bb t and \u03bb k are parameters that control the influence of the inner recommendation over the outer recommendation (0 \u010f \u03bb t \u010f 1 and 0 \u010f \u03bb k \u010f 1) for the topics and the controlled keyphrases, respectively. Keyphrase annotation Keyphrases are extracted and assigned from the N-best ranked topics and controlled keyphrases, regardless of their nature. We extract topic keyphrases using the former TopicRank strategy. Only one keyphrase is extracted per topic: the keyphrase candidate that first occurs within the document. We assign controlled keyphrases only if they are directly or transitively connected to a topic of the document. If the ranking of a controlled keyphrase has not been affected by a topic of the document nor by controlled keyphrases connected to topics, then its importance score is not related to the content of the document and it should not be assigned. At this step, two variants of TopicCoRank performing either extraction or assignment can be proposed, namely TopicCoRank extr and TopicCoRank assign . If keyphrases are only extracted from the topics, we obtain TopicCoRank extr . If keyphrases are only assigned from the controlled keyphrases, we obtain TopicCoRank assign . Experimental Setup Datasets We conduct our experiments on data from the DEFT-2016 benchmark datasets (Daille et al., 2016) 3 in three domains: linguistics, information Science and archaeology. Table 1 shows the factual information about the datasets. Each dataset is a collection of 706 up to 718 French bibliographic records collected from the database of the French Institute for Scientific and Technical Information 4 (Inist). The bibliographic records contain a title of one scientific paper, its abstract and its keyphrases that were annotated by professional indexers (one per bibliographic record). Indexers were given the instruction to assign reference keyphrases from a controlled vocabulary and to extract new concepts or very specific keyphrases from the titles and the abstracts. Each dataset is divided into three sets: a test set, used for evaluation; a training set (denoted as train), used to represent the domain; and a development set (denoted as dev), used for parameter tuning. The amount of missing keyphrases, i.e. keyphrases that cannot be extracted from the documents, shows the importance of keyphrase assignment in the context of scientific domains. More than half of the keyphrases of linguistics and information science domains can only be assigned, which confirms that these two datasets are difficult to process with keyword extraction approaches alone. Corpus Document preprocessing We apply the following preprocessing steps to each document: sentence segmentation, word tokenization and Part-of-Speech (POS) tagging. Sentence segmentation is performed with the PunktSentenceTokenizer provided by the Python Natural Language ToolKit (NLTK) (Bird et al., 2009) , word tokenization using the Bonsai word tokenizer 5 and POS tagging with MElt (Denis and Sagot, 2009) . Baselines To show the effectiveness of our approach, we compare TopicCoRank and its variants (TopicCoRank extr and TopicCoRank assign ) with TopicRank and KEA++. For KEA++, we use the thesauri maintained by Inist 6 to index the bibliographic records of Linguistics, Information Science and Archaeology. TopicCoRank setting The \u03bb t and \u03bb k parameters of TopicCoRank were tuned on the development sets, and set to 0.1 and 0.5 respectively. This empirical setup means that the importance of topics is much more influenced by controlled keyphrases than other topics, and that the importance of controlled keyphrases is equally influenced by controlled keyphrases and topics. In other words, the domain has a positive influence on the joint task of keyphrase extraction and assignment. Experimental Results This section presents and analyses the results of our experiments. For each document of each dataset, we compare the keyphrases outputed by each method to the reference keyphrases of the document. From the comparisons, we compute the macro-averaged precision (P), recall (R) and f1-score (F) per dataset and per method. Macro-averages results Table 2 presents the macro-averaged precision, recall and f1-score in percentage when 10 keyphrases are extracted/assigned for each dataset by TopicRank, KEA++, TopicCoRank extr , TopicCoRank assign and TopicCoRank. First, we observe that the assignment baseline KEA++ mostly achieves the lowest performance, which is surprising compared to the performance reported by Medelyan and Witten (2006) . The first reason for this observation is that KEA++ is restricted to thesauri entries while most keyphrases are missing within our documents. The second reason is that KEA++ relies on rich thesauri that contain an important amount of semantic relations between the entries, while our (real application) thesauri have a modest amount of semantic relations between the entries. Overall, using graph co-ranking significantly outperforms TopicRank and KEA++. Comparing Top-icRank to TopicCoRank extr shows the positive influence of the domain (controlled keyphrases) on the ranking of the topics. TopicCoRank assign outperforms every method, including TopicCoRank extr and TopicCoRank. Controlled keyphrases are efficiently ranked and the predominance of missing keyphrases in the dataset leads to a better performance of TopicCoRank assign over TopicCoRank. Table 2 : Results of TopicCoRank and the baselines at 10 keyphrases for each dataset. Precision (P), Recall (R) and F-score (F) are reported in percentages. : indicates a significant F-score improvement over TopicRank and KEA++ at 0.001 level using Student's t-test. Method Precision/recall curves Additionally, we follow Hasan and Ng (2010) and analyse the precision-recall curves of TopicRank, KEA++ and TopicCoRank. To generate the curves, we vary the number of evaluated keyphrases (cutoff) from 1 to the total number of extracted/assigned keyphrases and compute the precision and recall for each cut-off. Such representation gives a good appreciation of the advantage of a method compared to others, especially if the other methods achieve performances in the Area Under the Curve (AUC).  Figure 2 shows the precision/recall curves of TopicRank, KEA++ and TopicCoRank on each dataset. The final recall for the methods does not reach 100% because the candidate selection method does not provide keyphrases that do not occur within the document, as well as candidates that do not fit the POS tag pattern /(N|A)+/. Also, because TopicRank and TopicCoRank topically cluster keyphrase candidates and output only one candidate per topic, their final recall is lowered every time a wrong keyphrase is chosen over a correct one from the topic. We observe that the curve for TopicCoRank is systematically above the others, thus showing improvements in the area under the curve and not just in point estimate such as f1-score. Also, the final recall of TopicCoRank is much higher than the final recall of TopicRank and KEA++. Extraction vs. assignment As TopicCoRank is the first method for simultaneously extracting and assigning keyphrases, we perform an additional experiment that shows to which extent extraction and assignment contribute to the final results. To do so, we show the behavior of the extraction and the assignment depending on the influence of the inner recommendation on the ranking for each (test) document of each dataset. Fig. 3 shows the behavior of TopicCoRank extr when \u03bb t varies from 0 to 1. When \u03bb t \" 0, only the domain influences the ranking of the topics. Slightly equivalent to KEA++, TopicCoRank extr with \u03bb t \" 0 mainly extracts keyphrases from topics connected to controlled keyphrases. When \u03bb t \" 1, the domain does not influence the ranking and the performance of TopicCoRank extr is in the range of TopicRank's performance. Overall, the performance curve of TopicCoRank extr decreases while \u03bb t increases. Thus, the experiment demonstrates that the domain has a positive influence on the keyphrase extraction. 4 shows the behavior of TopicCoRank assign when \u03bb k varies from 0 to 1. When \u03bb k \" 0, only the document influences the ranking of the controlled keyphrases. As for TopicCoRank extr when \u03bb t \" 0, TopicCoRank assign is slightly similar to KEA++ when \u03bb k \" 0. When \u03bb k \" 1, TopicCoRank assign always outputs the same keyphrases: the ones that are the most important in the domain. The first half of the curve increases, showing that the relations between the controlled keyphrases have a positive influence on the ranking of the controlled keyphrases. Conversely, the second half of the curve decreases. Thus, the sole domain is not sufficient for keyphrase annotation.  A partir d'une hypoth\u00e8se sur la s\u00e9mantique de l'unit\u00e9 lexicale 'toucher' formul\u00e9e en termes de forme sch\u00e9matique, cette \u00e9tude vise \u00e0 rendre compte de la variation s\u00e9mantique manifest\u00e9e par les emplois de ce verbe dans la construction transitive directe 'C0 toucher C1'. Notre \u00e9tude cherche donc \u00e0 articuler variation s\u00e9mantique et invariance fonctionnelle. Cet article concerne essentiellement le mode de variation co-textuelle : en cons\u00e9quence, elle ne constitue qu'une premi\u00e8re \u00e9tape dans la compr\u00e9hension de la construction des valeurs r\u00e9f\u00e9rentielles que permet 'toucher'. Une \u00e9tude minutieuse de nombreux exemples nous a permis de d\u00e9gager des constantes imp\u00e9ratives sous la forme des 4 notions suivantes : sous-d\u00e9termination s\u00e9mantique, contact, anormalit\u00e9, et contingence. Nous avons tent\u00e9 de montrer comment ces notions interpr\u00e9tatives sont directement d\u00e9rivables de la forme sch\u00e9matique propos\u00e9e. Keyphrases : Franc \u00b8ais (French); mod\u00e9lisation (modelling); analyse distributionnelle (distributional analysis); interpr\u00e9tation s\u00e9mantique (semantic interpretation); variation s\u00e9mantique (semantic variation); transitif (transitive); verbe (verb); syntaxe (syntax) and s\u00e9mantique lexicale (lexical semantics). Qualitative example To show the benefit of TopicCoRank, we compare it to TopicRank on one of our bibliographic records in Linguistics (see Figure 5 ). Over the nine reference keyphrases, TopicRank successfully identifies two of the reference keyphrases: \"lexical semantics\" and \"semantic variation\". TopicCoRank successfully identifies seven of them: \"lexical semantics\", \"verb\", \"semantic variation\", \"French\", \"syntax\", \"semantic interpretation\" and \"distributional analysis\". TopicCoRank mostly outperforms TopicRank because it finds keyphrases that do not occur within the document: \"French\", \"syntax\", \"semantic interpretation\", and \"distributional analysis\". Some keyphrases, such as \"French\", are frequently assigned because they are part of most of the bibliographic records of our dataset 7 (48.9% of the Linguistics records contain \"French\" as a keyphrase); Other keyphrases, such as \"semantic interpretation\", are assigned thanks to their strong connection with controlled keyphrases occurring in the abstract (e.g. \"lexical semantics\"). Interestingly, the performance of TopicCoRank is not only better thanks to the assignment. For instance, we observe keyphrases, such as \"verb\", that emerge from topics connected to other topics that distribute importance from controlled keyphrases (e.g. \"semantic variation\"). Conclusion In this paper, we have proposed a co-ranking approach to performing keyphrase extraction and keyphrase assignment jointly. Our method, TopicCoRank, builds two graphs: one with the document topics and one with controlled keyphrases (training keyphrases). We designed a strategy to unify the two graphs and rank by importance topics and controlled keyphrases using a co-ranking vote. We performed experiments on three datasets of different domains. Results showed that our approach benefits from both controlled keyphrases and document topics, improving both keyphrase extraction and keyphrase assignment baselines. TopicCoRank can be used to annotate keyphrases in scientific domains in a close way of professional indexers. Acknowledgments This work was supported by the French National Research Agency (TermITH project -ANR-12-CORD-0029) and by the TALIAS project (grant of CNRS PEPS INS2I 2016, https://boudinfl. github.io/talias/).",
    "funding": {
        "defense": 0.0,
        "corporate": 0.0,
        "research agency": 1.0,
        "foundation": 0.0,
        "none": 0.0
    },
    "reasoning": "Reasoning: The acknowledgments section of the article mentions support from the French National Research Agency (ANR) for the TermITH project and the TALIAS project (grant of CNRS PEPS INS2I 2016), which indicates funding from a research agency. There is no mention of funding from defense, corporate entities, foundations, or an indication that there was no funding.",
    "abstract": "Keyphrase annotation is the task of identifying textual units that represent the main content of a document. Keyphrase annotation is either carried out by extracting the most important phrases from a document, keyphrase extraction, or by assigning entries from a controlled domain-specific vocabulary, keyphrase assignment. Assignment methods are generally more reliable. They provide better-formed keyphrases, as well as keyphrases that do not occur in the document. But they are often silent on the contrary of extraction methods that do not depend on manually built resources. This paper proposes a new method to perform both keyphrase extraction and keyphrase assignment in an integrated and mutual reinforcing manner. Experiments have been carried out on datasets covering different domains of humanities and social sciences. They show statistically significant improvements compared to both keyphrase extraction and keyphrase assignment state-of-the art methods.",
    "countries": [
        "France"
    ],
    "languages": [
        "French"
    ],
    "numcitedby": 12,
    "year": 2016,
    "month": "December",
    "title": "Keyphrase Annotation with Graph Co-Ranking",
    "values": {
        "performance": "Overall, using graph co-ranking significantly outperforms TopicRank and KEA++. Comparing Top-icRank to TopicCoRank extr shows the positive influence of the domain (controlled keyphrases) on the ranking of the topics. TopicCoRank assign outperforms every method, including TopicCoRank extr and TopicCoRank."
    }
}