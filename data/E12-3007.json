{
    "article": "To cluster textual sequence types (discourse types/modes) in French texts, K-means algorithm with high-dimensional embeddings and fuzzy clustering algorithm were applied on clauses whose POS (part-ofspeech) n-gram profiles were previously extracted. Uni-, bi-and trigrams were used on four 19 th century French short stories by Maupassant. For high-dimensional embeddings, power transformations on the chisquared distances between clauses were explored. Preliminary results show that highdimensional embeddings improve the quality of clustering, contrasting the use of biand trigrams whose performance is disappointing, possibly because of feature space sparsity. Introduction The aim of this research is to cluster textual sequence types (named here discourse types) 1 , such as narrative, descriptive, argumentative and so on in French texts, and especially in short stories which could contain all types. For this purpose, texts were segmented into clauses (section 2.1). To cluster the latter, n-gram POS (part-of-speech) tag profiles were extracted (section 2.3). POS-tags were chosen because of their expected relation to discourse types. Several authors have used POS-tags among other features for various text classification tasks, such as Biber (1988) for text type detection, Karlgren and Cutting (1994) and Malrieu and Rastier (2001) for genre classification, and Palmer et al. (2007) for situation entity classification. The latter is an essential component of English discourse modes (Smith, 2009) . Moreover, previous work in discourse type detection has shown a dependency between POS-tags and these types (Cocco et al., 2011) . In this paper, K-means algorithm with highdimensional embeddings and fuzzy clustering algorithm were applied on uni-, bi-and trigram POS-tag profiles (section 2.4) and results were evaluated (section 2.5). Finally, results are given in section 3. Method Expert assessment The human expert, a graduate student in French linguistics, annotated 19 th century French short stories by Maupassant, using XML tags. Each text was first segmented into clauses, whose length is typically shorter than sentences. Then, texts were annotated retaining the following six discourse types: narrative, argumentative, descriptive, explicative, dialogal and injunctive. 2  They resulted from an adaptation of the work of Adam (2008a; 2008b) in text and discourse analysis, as well as Bronckart (1996) in psycholinguistics, concerning textual sequence types. The former does not consider the injunctive type. Let us briefly describe these types (Adam, 2008a; Adam, 2008b; Bronckart, 1996) , together with the criteria finally adopted by the human expert for this time-consuming task. Narrative type corresponds to told narrative. One of the principal linguistic markers of this type is the presence of past historic tense. However, when referring to repeated actions, imperfect tense is generally used. Argumentative type corresponds to texts whose aim is to convince somebody of an argument. An important linguistic marker of this type is the presence of argumentative connectors such as mais \"but\", cependant \"however\", pourtant \"yet\" and so on. Explicative type aims to explain something unknown, such as encyclopaedic knowledge, and answers to the question \"Why?\". A typical linguistic marker of this type is the presence of phraseological phrases, such as (si)...c'est parce que/c'est pour que \"(if)...it is because/in order to\". Descriptive type represents textual parts where the time of the story stops and where characteristic properties of a subject, animated or not, are attributed. Several linguistic markers are relevant for this type: use of imperfect tense (except when the narrative part is in present tense); a large number of adjectives; spatio-temporal organizers; and stative verbs. Dialogal type is a verbal exchange. However, in this project, direct speech is considered as dialogal too. Typical linguistic markers of this type are quotes, strong punctuation and change of spatio-temporal frame. Finally, injunctive type is an incentive for action. This type has linguistic markers such as use of imperative tense and exclamation marks. In our corpus, this type is always included in a dialogal segment. Discourse types are generally nested inside each other resulting in a hierarchical structure. For instance, an injunctive sequence of one clause length can be included in a dialogal sequence, which can in turn be included in a longer narrative sequence matching the entire text. In the simplified treatment attempted here, the problem is linearized: only the leaves of the hierarchical structure will be considered. Corpus The corpus consists of four 19 th century French short stories by Maupassant: \"L'Orient\" , \"Le Voleur\", \"Un Fou?\" and \"Un Fou\". Descriptive statistics about these texts are given in table 1 . These values are based on unigram counts. For bigram and trigram counts, clauses shorter than two and three words respectively were removed. For the first text, \"L'Orient\", three clauses were removed for trigrams; for \"Le Voleur\", one clause was removed for trigrams; and for \"Un Fou?\", thirteen clauses for trigrams. An extra step was made for \"Un Fou\", because of its very different structure w.r.t. the three other texts. Indeed, the majority of this text is written as a diary. Dates, which could not be attributed to a discourse type, were consequently removed, reducing the number of clauses from 401 to 376 for unigrams. Then, two clauses were removed for bigrams because they were too short, and again ten for trigrams. Preprocessing Before applying clustering algorithms, annotated texts were preprocessed to obtain a suitable contingency table, and dissimilarities between clauses were computed. Firstly, each text was POS-tagged with TreeTagger (Schmid, 1994) excluding XML tags. Secondly, using the manual clause segmentation made by the human expert, distributions over POS-tag n-grams were obtained for each clause, resulting in a contingency table. Then, chi-squared distances between clauses were computed. In order to accomplish this, coordinates of the contingency table (with n ik denoting the number of objects common to clause i and POS-tag n-gram k, n i\u2022 = k n ik and n \u2022k = i n ik ) are transformed in this manner: y ik = e ik f i \u221a \u03c1 k \u2212 \u221a \u03c1 k (1) where e ik = n ik /n are the relative counts, f i = e i\u2022 = n i\u2022 /n (row weights) and \u03c1 k = e \u2022k = n \u2022 k/n (column weights) are the margin counts. Finally, the squared Euclidean distances between these new coordinates D ij = k (y ik \u2212 y jk ) 2 (2) define the chi-squared distances. Algorithms Two algorithms were applied on these distances. K-means with high-dimensional embedding Firstly, the well-known K-means (see e.g. Manning and Sch\u00fctze (1999)) was performed in a weighted version (i.e. longer clauses are more important than shorter ones), by iterating the following pair of equations: z g i = 1 if g = argmin h D h i 0 else. (3) D g i = j f g j D ij \u2212 \u2206 g (4) where z g i is the membership of clause i in group g and D g i is the chi-squared distance between the clause i and the group g as resulting from the Huygens principle. In the equation 4, f g j = (f i z ig )/\u03c1 g = p(i|g), D ij is the chi-squared distances between clauses given by the equation 2 and \u2206 g = 1/2 jk f g j f g k D jk is the inertia of group g. In addition, \u03c1 g = i f i z ig = p(g) is the relative weight of group g. At the outset, the membership matrix Z was chosen randomly, and then the iterations were computed until stabilisation of the matrix Z or a number of maximum iterations N max . Besides the K-means algorithm, Schoenberg transformations \u03d5(D) were also operated. They transform the original squared Euclidean distances D into new squared Euclidean distances \u03d5(D) (Bavaud, 2011) and perform a highdimensional embedding of data, similar to those used in Machine Learning. Among all Schoenberg transformations, the simple componentwise power transformation was used, i.e. \u03d5(D ij ) = (D ij ) q (5) where 0 < q \u2264 1. In a nutshell, the K-means algorithm was applied on the four texts, for uni-, bi-and trigrams POS-tags, with q in equation 5 varying from 0.1 to 1 with steps of 0.05. Given that the aim was to find the six groups annotated by the human expert, the K-means algorithm was computed with a number of groups m = 6. Moreover, N max = 400 and for each q, calculations were run 300 times, and then the averages of the relevant quantities (see section 2.5) were computed. Fuzzy clustering Secondly, the same algorithm which was used in a previous work (Cocco et al., 2011) was applied here, i.e. the fuzzy clustering algorithm. In brief, it consists of iterating, as for the Kmeans, the membership z g i of clause i in group g defined in the following way (Rose et al., 1990; Bavaud, 2009) : z g i = \u03c1 g exp(\u2212\u03b2D g i ) m h=1 \u03c1 h exp(\u2212\u03b2D h i ) (6) until stabilisation of the membership matrix Z (randomly chosen at the beginning as uniformly distributed over the m groups) or after N max iterations. D g i is given by equation 4 and \u03c1 g is the relative weight of group g. Moreover, it turns out convenient to set \u03b2 := 1/(t rel \u00d7 \u2206), the \"inverse temperature\" parameter, where \u2206 := 1 2 ij f i f j D ij is the inertia and t rel is the relative temperature which must be fixed in advance. The values of \u03b2 controls for the bandwidth of the clustering, i.e. the number of groups: the higher \u03b2, the larger the final number of groups M (see figure 9 ). As a matter of fact, depending of \u03b2 values, group profiles are more or less similar. Also, group whose profiles are similar enough are aggregated, reducing the number of groups from m (initial number of groups chosen at the beginning) to M . This aggregation is made by adding memberships of clauses: z [g\u222ah] i = z g i + z h i . Two groups are considered similar enough if \u03b8 gh / \u03b8 gg \u03b8 hh \u2265 1 \u2212 10 \u22125 , with \u03b8 gh = n i=1 f i z g i z h i which measures the overlap between g and h (Bavaud, 2010). Finally, each clause is attributed to the most probable group. For the application in this project, fuzzy clustering algorithm was computed on the four texts, for uni-bi-and trigrams POS-tags. At the outset, the initial number of groups m was equal to the number of clauses for each text (see table 1 and section 2.2), with a relative temperature t rel from 0.022 to 0.3 with steps of 0.001 (except for the text \"Un Fou\" with t rel min = 0.02, t rel max = 0.3 and t rel step = 0.01). Besides this, N max = 400 and for each t rel , algorithm was run 20 times, and finally the averages of the relevant quantities (see section 2.5) were computed. Evaluation criteria The clustering obtained by the two algorithms (K-means with high-dimensional embedding and fuzzy clustering) were compared to the classification made by the human expert. As clustering induces anonymous partitions, traditional indices such as precision, recall and Cohen's Kappa cannot be computed. Among the numerous similarity indices between partitions, we have examined the Jaccard index (Denoeud and Gu\u00e9noche, 2006; Youness and Saporta, 2004) : J = r r + u + v (7) whose values vary between 0 and 1, and the corrected Rand index (Hubert and Arabie, 1985; Denoeud and Gu\u00e9noche, 2006) : RC = r \u2212 Exp(r) Max(r) \u2212 Exp(r) (8) whose the maximal value is 1. When this index equals 0, it means that similarities between partitions stem from chance. However, it can also take negative values when number of similarities is lower than the expectation (i.e. chance). Both indices are based upon the contingency table n ij , defined by the number of objects attributed simultaneously to group i (w.r.t. the first partition) and to group j (w.r.t. the second partition). Moreover, in both indices, r = 1 2 ij n ij (n ij \u2212 1) is the number of pairs si- multaneously joined together, u = 1 2 ( j n 2 \u2022j \u2212 ij n 2 ij ) (respectively v = 1 2 ( i n 2 i\u2022 \u2212 ij n 2 ij ) ) is the number of pairs joined (respectively separated) in the partition obtained with algorithm and separated (respectively joined) in the partition made by the human expert, Exp(r) = 1 2n(n\u22121) i n i\u2022 (n i\u2022 \u2212 1) j n \u2022j (n \u2022j \u2212 1) is the expected number of pairs simultaneously joined together by chance and Max(r ) = 1 4 i n i\u2022 (n i\u2022 \u2212 1) + j n \u2022j (n \u2022j \u2212 1). Results On the one hand, results obtained with the Kmeans algorithm and power (q) transformations for uni-, bi-and trigrams are presented in figures 1 to 8. On the other hand, results obtained with fuzzy clustering for uni-bi-and trigrams are only shown for the text \"Le Voleur\" in figures 9 to 13. For the three other texts, results will be discussed below. Power (q) Corrected Rand Index Figure 1 : \"L'Orient\" with K-means algorithm: corrected rand index as a function of power (q) (\u2022 = unigrams, = bigrams and \u00d7 = trigrams). The standard deviation is approximatively constant across q ranging from a minimum of 0.018 and a maximum of 0.024 (unigrams); 0.0099 and 0.015 (bigrams); 0.0077 and 0.013 (trigrams). A first remark is that corrected Rand index and Jaccard index behave differently in general. This difference is a consequence of the fact that Jaccard index does not take into account the number of pairs simultaneously separated in the two partitions, a fact criticised by Milligan and Cooper (1986) . Regarding the texts \"L'Orient\", \"Le Voleur\" and \"Un Fou?\" with K-means algorithm and the corrected Rand index (figures 1, 3 and 5), unigrams give the best results. Moreover, power transformations (equation 5) tend to improve them. For instance, for the text \"L'Orient\" (figure 1 ), the best result is RC = 0.048 with q = 0.55, and for the text \"Un Fou?\" (figure 5 ), the best Power (q) Jaccard Index Figure 2 : \"L'Orient\" with K-means algorithm: Jaccard index as a function of power (q) (\u2022 = unigrams, = bigrams and \u00d7 = trigrams). Power (q) Corrected Rand Index  Power (q) Jaccard Index Figure 4 : \"Le Voleur\" with K-means algorithm: Jaccard index as a function of power (q) (\u2022 = unigrams, = bigrams and \u00d7 = trigrams). Power (q) Corrected Rand Index  Power (q) Jaccard Index Figure 6 : \"Un Fou?\" with K-means algorithm: Jaccard index as a function of power (q) (\u2022 = unigrams, = bigrams and \u00d7 = trigrams). Power (q) Corrected Rand Index Figure 7 : \"Un Fou\" with K-means algorithm: corrected rand index as a function of power (q) (\u2022 = unigrams, = bigrams and \u00d7 = trigrams). result is RC = 0.072 with q = 0.85. Regarding the fuzzy clustering algorithm, figure 9 shows, for the text \"Le Voleur\", the relation between the relative temperature and the number of groups for uni-bi-and trigrams, i.e. number of groups decreases when relative temperature increases. Figure 10 (respectively figure 12 ) presents the corrected Rand index (respectively the Jaccard index) as a function of relative temperature, while figure 11 (respectively figure 13 ) shows, for each relative temperature, the average number of groups on the x-axis and the average 0.2 0.4 0.6 0.8 1.0 0.12 0.14 0.16 0.18 Power (q) Jaccard Index Figure 8 : \"Un Fou\" with K-means algorithm: Jaccard index as a function of power (q) (\u2022 = unigrams, = bigrams and \u00d7 = trigrams). corrected Rand index (respectively Jaccard index) on the y-axis, over 20 clusterings. There is a remarkable peak for this text (RC = 0.31 (respectively J = 0.48)), when t rel = 0.145 (respectively 0.148), corresponding to M = 14.4 (respectively 13.4). The same phenomenon appears with the text \"Un Fou?\", when t rel = 0.158 and M = 7.8. However, the peak for the Jaccard index is less important and it is not the highest value. More- over, for the latter text, there is a higher peak, which occurs only with the corrected Rand index, for t rel = 0.126 and M = 24.5. For the two other texts, there are some peaks, but not as marked as in other texts. Besides, for these two texts, corrected Rand index takes negative values, especially for \"Un Fou\". While the reason for these different behaviours is not known, it should be noted that the structure of these texts is different from that of the two other texts. Indeed, \"Un Fou\" is written as a diary and uses mainly the present tense, also in narrative and descriptive parts; \"L'Orient\" contains several long monologues mainly using the present tense too. On figure 12 , it appears that Jaccard index is constant when one group remains, and the same phenomenon appears for all texts. Indeed, from the distribution of table 2, one finds from equation 7: r = 8 939, u = 0 and v = 12 589, implying J = 0.415. Overall, it is clear that results differ depending on texts, no matter which algorithm or evaluation criterion is used. Furthermore, they are always better for \"Le Voleur\" than for the three arg descr dial expl inj nar 10 25 29 10 6 128 other texts. Finally, in most case, unigrams give better results than bi-and tri-grams. The relatively disappointing performance of bi-and trigrams (w.r.t. unigrams) could be accounted for by the sparsity of the feature space and the well-known associated \"curse of dimensionality\", in particular in clustering (see e.g. Houle et al. (2010) ). Results are clearly different for \"Un Fou\", and the reason of this difference still needs to be investigated. Certainly, as the sample is small and there is a unique annotator, all these results must be considered with caution. Conclusion and further development A first conclusion is that the use of POS-tag ngrams does not seem to improve the solution of the problem exposed here. In contrast, highdimensional embedding seems to improve results. Concerning evaluation criteria, results clearly vary according to the selected index, which makes it difficult to compare methods. Another point is that even choosing only short stories of one author, text structures can be very different and certainly do not give the same results. These results are interesting and in general better than those found in a previous work (Cocco et al., 2011) , but this is still work in progress, with much room for improvement. A next step would be to combine fuzzy clustering with highdimensional embedding, which can both improve results. Moreover, it could be interesting to add typical linguistic markers, such as those mentioned in section 2.1, or stylistic features. It would also be possible to use lemmas instead of or with POS-tags, if more data could be added to the corpus. Besides, Cordial Analyseur 3 could be used instead of TreeTagger, because it provides more fine-grained POS-tags. However, as for n-grams, it could imply a sparsity of the feature space. Another idea would be to perform a supervised classification with cross-validation. In this case, it would be interesting to investigate feature selection (see e.g. Yang and Pedersen (1997) ). Also, the hierarchical structure of texts (cf. section 2.1) should be explored. Only the leaves were considered here, but in reality, one clause belongs to several types depending on the hierarchical level examined. Therefore, it could be relevant to consider the dominant discourse type instead of the leaf discourse type. Similarly, since in our corpus, injunctive type is always included in dialogal type, the former could be removed to obtain a larger dialogal class. In addition, it would be useful to find a better adapted measure of similarity between partitions. Finally, an important improvement would be to obtain more annotated texts, which should improve results, and a second human expert, which would permit us to assess the difficulty of the task. Acknowledgments I would like to thank Franc \u00b8ois Bavaud and Aris Xanthos for helpful comments and useful discussions; Guillaume Guex for his help with technical matters; and Rapha\u00ebl Pittier for annotating the gold standard.",
    "abstract": "To cluster textual sequence types (discourse types/modes) in French texts, K-means algorithm with high-dimensional embeddings and fuzzy clustering algorithm were applied on clauses whose POS (part-ofspeech) n-gram profiles were previously extracted. Uni-, bi-and trigrams were used on four 19 th century French short stories by Maupassant. For high-dimensional embeddings, power transformations on the chisquared distances between clauses were explored. Preliminary results show that highdimensional embeddings improve the quality of clustering, contrasting the use of biand trigrams whose performance is disappointing, possibly because of feature space sparsity.",
    "countries": [
        "Switzerland"
    ],
    "languages": [
        "French",
        "English"
    ],
    "numcitedby": "3",
    "year": "2012",
    "month": "April",
    "title": "Discourse Type Clustering using {POS} n-gram Profiles and High-Dimensional Embeddings"
}