{
    "article": "Domain adaptation is a major challenge for neural machine translation (NMT). Given unknown words or new domains, NMT systems tend to generate fluent translations at the expense of adequacy. We present a stack-based lattice search algorithm for NMT and show that constraining its search space with lattices generated by phrase-based machine translation (PBMT) improves robustness. We report consistent BLEU score gains across four diverse domain adaptation tasks involving medical, IT, Koran, or subtitles texts. Introduction Domain adaptation is a major challenge for neural machine translation (NMT). Although impressive improvements have been achieved in recent years (c.f. Bojar et al. (2016) ), NMT systems require a large amount of training data and thus perform poorly relative to phrase-based machine translation (PBMT) systems in low resource and domain adaptation scenarios (Koehn and Knowles, 2017) . In such situations, neural systems often produce fluent output that unfortunately contains words not licensed by the unfamiliar source sentence (Arthur et al., 2016; Tu et al., 2016) . Phrase-based systems, in contrast, explicitly model the translation of all source words via coverage vectors, and tend to produce translations that are adequate but less fluent. This situation is depicted in Table 1 , which contains examples of PBMT and NMT systems trained on WMT training sets which are then applied to IT texts. We present an approach that combines the best of both worlds by using the lattice output of PBMT to constrain the search space available to an NMT decoder, thereby bringing together the adequacy Stack-based Neural Lattice Search Figure 1 demonstrates our system; given an input sentence, the PBMT system generates a lattice, which is then used as input to the neural lattice search algorithm. We would like to score every path in the lattice with the NMT system and then search. However, this is generally prohibitively expensive because the RNN architectures in NMT do not permit recombination of hypotheses on the lattice, since NMT states encode the entire sentence history. This explodes the search lattice into an exponentially sized tree. To address this problem, we use a stack decoding algorithm that groups hypotheses by the number of target words, extending items from each stack in order of score, and adding them to later stacks. 2  The pseudocode is in Algorithm 1, and a graphical depiction in Figure 2 . In the lattice (Figure 2(a) ), arcs are annotated with phrases of one or more words indicating the target sides of phrases that were applied during PBMT decoding. Nodes represent recombined states in the PBMT search space (i.e., states that have identical source coverage vectors and language model states). The search nodes contain the cumulative score, the current lattice node, the current neural state, the incoming arc, and the target length along this path. After initialization, the outer loop (line 3) proceeds over stacks, starting at stack 1, and continuing through the longest path through the lattice (subject to pruning). Upon visiting each stack, it considers the top b items (line 4). It pops each of them in turn and retrieves its node in the underlying lattice and the associated neural state (line 5). It then considers all of the node's outgoing arcs (line 6). The neural scorer is used to score each of them (line 7), returning a new neural state that is stored with a new item (line 14) on the appropriate stack.  For each training configuration, we are interested in seeing how our proposed NMT lattice search compares to standard NMT beam search. Additionally, we compare the results of PBMT 1best decoding and PBMT N -best lists rescoring (N=500) using the same NMT model. The PBMT models are trained with Moses (Koehn et al., 2007) . The PBMT out models include German specific processing and Neural Network Joint Models (Devlin et al., 2014) , replicating Ding et al. (2016) . The PBMT in models are Moses models with standard settings, replicating Koehn and Knowles (2017) . The NMT models are trained with Nematus (Sennrich et al., 2017) . The NMT out models replicate Sennrich et al. (2016) ; 4 the NMT in models replicate Koehn and Knowles (2017) . We use Marian (Junczys-Dowmunt et al., 2016a) to rescore N -best lists. The search graphs are pre-processed by converting them to the OpenFST format (Allauzen et al., 2007) and applying operations to remove epsilon arcs, determinize, minimize and topsort. Since the search graphs may be prohibitively large in size, we prune them with a threshold. 5 We perform 5fold cross-validation over pruning thresholds (.1, .25, .5) and lattice search beamsizes (1, 10, 100). Very aggressive pruning with a small beam limits the search to be very similar to the PBMT output. In contrast, a very deep lattice with a large beam begins to approach the unconstrained search space of standard decoding in NMT. Results Table 3 summarizes the BLEU results on each test domain. Note that PBMT 1-best results are equivalent for PBMT in \u00d7 NMT in and PBMT in \u00d7 NMT out since the same PBMT model is used and NMT is not relevant. For both PBMT 1best and NMT Standard Search, there are two sets of equivalent results among the four training configurations. We want to highlight the fact that the PBMT 1-best in-domain models outperform the out of domain ones, despite being much simpler models. Additionally, the BLEU scores for NMT standard search are higher for the in-domain models, despite the smaller amount of training data. This emphasizes the importance of the domain of the training corpora. In cross-validation for our domains, smaller beams and aggressive pruning tend to perform well. This follows from the fact that PBMT 1-best outperforms NMT standard search. We want to strongly limit the search space given to NMT in such a scenario. However, these parameters need to be tuned to a specific domain and language. Our research questions are as follows: Does lattice search perform best across training configurations? As observed across each row in Table 3 , lattice search typically outperforms the three other systems. Importantly, the BLEU gains against standard beam search in NMT and Nbest rescoring of PBMT with NMT are noticeable regardless of training configuration. E.g., in the Subtitles task the gains range from 2.2 to 3.1 BLEU. There are also consistent gains compared to PBMT 1-best (e.g. 0.9-1.6 BLEU gain), which forms the basis of the search space; this implies that PBMT and NMT can serve as effective hybrid systems, where the former provides the potential translation candidates and the latter scores them. Given the choice, which training configuration is best for domain adaptation? While the answer depends on the amount of in-domain and out-of-domain data, we find that PBMT in \u00d7 NMT in and PBMT in \u00d7 NMT out perform the best. This supports previous findings (Koehn and Knowles, 2017) that PBMT in is robust when training data is insufficient. In conclusion, we recommend using lattice search with search graphs from PBMT in , and NMT models can be trained on either in-domain or out-of-domain corpora. Related Work Previous work on domain adaptation in NMT focuses on training methods such as transfer learning or fine-tuning (Luong and Manning, 2015; Freitag and Al-Onaizan, 2016; Chu et al., 2017) . This strategy begins with a strong model trained on a large out-of-domain corpus and then continuesx training on an in-domain corpus. Our approach is orthogonal in that we focus on search. Conceivably, advances in training methods might be incorporated to improve our individual NMT in models. Our lattice search algorithm is related to previous work in hybrid NMT/PBMT systems, which can be visualized on a spectrum depending on how tightly integrated the two systems are. On one end, NMT can easily be used to rerank Nbest lists output by PBMT; on the other, NMT can be incorporated as features in PBMT (Junczys-Dowmunt et al., 2016b) . In the middle of the spectrum is NMT search (or re-scoring) based on constraints from PBMT. Our algorithm is conceptually very similar to Stahlberg et al. (2016) , who rescore a WFSA reformulation of the Hiero formalism. Their algorithm is a breadth-first search over all the nodes of the lattice, capped by a beam. Other hybrid methods include: constraining the output vocabulary of NMT on a per-sentence basis, using bilingual information provided by PBMT (Mi et al., 2016) , Minimum Bayes Risk decoding with PBMT n-gram posteriors (Stahlberg et al., 2017) , and incorporating PBMT hypotheses as additional input in a modified NMT architecture (Wang et al., 2017) . Related works in lattice search/re-scoring with RNNs (without NMT encoder-decoders) (Ladhak et al., 2016; Deoras et al., 2011; Hori et al., 2014) may serve as other interesting comparisons. Specifically, Auli et al. (2013) and Liu et al. (2016) provide alternatives to our approach to the problem of recombination. The former work allows the splitting of previously recombined decoder states (thresholded) while the latter clusters RNN states based on their n-gram context. Conclusion We present a stack-based lattice search algorithm for NMT, and show that constraining decoding to candidate translations in a PBMT search graph leads to robust improvements for domain adaptation. Our method can be viewed as as simple yet effective way to combine the adequacy advantages of PBMT, which stems from explicit models of coverage, with the fluency advantages of NMT. When presented with a domain adaptation problem we recommend using lattice search with search graphs from PBMT in , with NMT models either trained on either in-domain or out-ofdomain corpora. Future work includes interpolation of the NMT and PBMT scores in the lattice search, which requires additional tuning but may further improve results. Acknowledgments This material is based upon work supported in part by the Defense Advanced Research Projects Agency (DARPA) under Contract No. HR0011-15-C-0113. Any opinions, findings and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of DARPA.",
    "abstract": "Domain adaptation is a major challenge for neural machine translation (NMT). Given unknown words or new domains, NMT systems tend to generate fluent translations at the expense of adequacy. We present a stack-based lattice search algorithm for NMT and show that constraining its search space with lattices generated by phrase-based machine translation (PBMT) improves robustness. We report consistent BLEU score gains across four diverse domain adaptation tasks involving medical, IT, Koran, or subtitles texts.",
    "countries": [
        "United States"
    ],
    "languages": [
        "German"
    ],
    "numcitedby": "25",
    "year": "2017",
    "month": "November",
    "title": "Neural Lattice Search for Domain Adaptation in Machine Translation"
}