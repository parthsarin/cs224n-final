{
    "article": "In this paper we describe a currently underway treebanking effort for Urdu-a South Asian language. The treebank is built from a newspaper corpus and uses a Karaka based grammatical framework inspired by Paninian grammatical theory. Thus far 3366 sentences (0.1M words) have been annotated with the linguistic information at morpho-syntactic (morphological, part-of-speech and chunk information) and syntactico-semantic (dependency) levels. This work also aims to evaluate the correctness or reliability of this manual annotated dependency treebank. Evaluation is done by measuring the inter-annotator agreement on a manually annotated data set of 196 sentences (5600 words) annotated by two annotators. We present the qualitative analysis of the agreement statistics and identify the possible reasons for the disagreement between the annotators. We also show the syntactic annotation of some constructions specific to Urdu like Ezaf e and discuss the problem of word segmentation (tokenization). Introduction Hindi and Urdu 1 are often socially considered distinct language varieties, but linguistically the division between the two varieties is not well-founded. (Masica, 1993, p. 27) explains that while they are different languages officially, they are not even different dialects or sub-dialects in a linguistic sense; rather, they are different literary styles based on the same linguistically defined sub-dialect. He further explains that at colloquial level, Hindi and Urdu are nearly identical, both in terms of core vocabulary and grammar. However, at formal and literary levels, vocabulary differences begin to loom much larger (Hindi drawing its higher lexicon from Sanskrit and Urdu from Persian and Arabic) to the point where the two styles/languages become mutually unintelligible. In written form not only lexical items but the way Urdu and Hindi is written makes one believe that they are two separate languages. They are written in separate orthographies, Hindi being written in Devanagari, and Urdu in a modified Perso-Arabic script. Under the treebanking effort for Indian languages, two separate treebanks are being built for both Hindi and Urdu. Among the two, however, Hindi treebank has matured and grown considerably (Bhatt et al., 2009) , (Palmer et al., 2009) . The paper is arranged as follows, next Section gives a brief overview of the related works on syntactic treebanking. Section 3 describes the grammatical formalism chosen for the annotation. In Section 4 we discuss treebanking pipeline of Urdu followed by some of the Urdu specific issues in Section 5. In Section 6 we discuss the empirical results of interannotator agreement. Section 7, concludes the paper. Related Work A treebank is a text corpus annotated with syntactic, semantic and sometimes even inter sentential relations (Haji\u010dov\u00e1 et al., 2010) . Treebanks are of multifold importance, they are an invaluable resource for testing linguistic theories on which they are built and are used for a number of NLP tasks like training and testing syntactic parsers. Owing to their great importance, a number of syntactic treebanking projects have been initiated for many different languages. Among the treebanks include Penn treebank (PTB) (Marcus et al., 1993) , Prague Dependency treebank (PDT) (Hajicov\u00e1, 1998) for Czech, (Rambow et al., 2002) for English, Alpino (Van der Beek et al., 2002) for Dutch, TUT (Bosco and Lombardo, 2004) for Italian, TIGER (Brants et al., 2002) for German and many others. Currently existing treebanks mainly differ in the grammatical formalism adopted. Dependency based formalism compared with the constituency based formalism is assumed to suit better for representing syntactic structures of free word order languages, its representation does not crucially rely on the position of a syntactic unit in a sentence thus easily handles the scrambling of arguments in such languages (Shieber, 1985) , (Bharati et al., 1995) , (Haji\u010d, 1998) , (Hajicov\u00e1, 1998) , (Oflazer et al., 2003) . Not only are dependency-based representations suitable for less configurational languages, they are also favorable for a number of natural language processing applications (Culotta and Sorensen, 2004) , (Reichartz et al., 2009) . Structural relations like subject and direct object are believed to be less relevant for the grammatical description of Indian languages (ILs) because of the less configurational nature of these languages (Bhat, 1991) . Indian languages are morphologically rich and have a relatively free constituent order. (Begum et al., 2008) have argued in favor of using Karaka relations instead of structural relations for the syntactic analysis of ILs. They proposed an annotation scheme for the syntactic treebanking of ILs based on the Computational Paninian Grammar (CPG), a formalism inspired by Paninian grammatical theory. Currently dependency treebanks of four ILs, namely Hindi, Urdu, Bangla and Telegu, are under development following this annotation scheme. The dependency structures in all the four treebanks are, under this annotation scheme, annotated with the Karaka relations. Although English does not belong to the free word order languages, a number of attempts have been made to study the applicability of CPG based syntactic analysis to it as well (Bharati et al., 1996) , (Vaidya et al., 2009) , (Chaudhry and Sharma, 2011) . CPG Formalism The CPG formalism, inspired by the grammatical theory of Panini, the fifth century B.C. grammarian of Sanskrit, is a dependency grammar. As in other dependency grammars, the syntactic structures in this formalism essentially consists of a set of binary, asymmetric relations between words of a sentence. A dependency relation is defined between a dependent, a syntactically subordinate word and a head word on which it depends. In this formalism verb is treated as the primary modified (the root of the dependency tree) and the elements (nominals) modifying the verb participate in the activity specified by it. The relation that holds between a verb and its modifier is called a karaka relation. There are six basic karakas defined by Panini namely (i) karta 'agent', (ii) karma 'theme', (iii) karana 'instrument', (iv) sampradaan 'recipient', (v) apaadaan 'source', and (vi) adhikarana 'location'. Besides karaka relations that hold between a verb and the participants of the action specified by the verb, dependency relations also exist between nouns (genitives), between nouns and their modifiers (adjectival modification, relativization), between verbs and their modifiers (adverbial modification including clausal subordination). A detailed tag-set containing all these different kinds of dependency relations has been defined in the annotation scheme based on the CPG formalism (Bharati et al., 2009) . Examples (1) and ( 2 ) depict some of the karaka relations (k1 'karta', k2 'karma', k3 'karana') of verbs 'eat' and 'cut' respectively while example (3) shows a genitive relation between two nouns, 'Yasin' and 'pen'. ( Annotation Pipeline The dependency treebanks for Indian languages based on CPG formalism are developed following a generic pipeline. The process of treebank development under the pipeline consists of a series of steps namely (i) Tokenization, (ii) Morph-Analysis, (iii) POS-tagging, (iv) Chunking, and (v) Dependency annotation. Annotation process begins with the tokenization of raw text. The tokens obtained during tokenization are, in the next steps, annotated with morphological and POS tag information. After morph-analysis and POS-tagging correlated, inseparable words are grouped into chunks. The processing at the steps mentioned thus far are automated by highly accurate tools built in-house (tokenizer, morph analyzer, POS-tagger and chunker). The output of each tool is, however, manually corrected and validated by the human annotators. The final step in the pipeline is the manual dependency annotation. Only the inter-chunk dependencies are marked leaving the dependencies between words in a chunk unspecified because the intra-chunk dependencies are observed to be highly predictive given the head of a chunk and can be easily generated by a set of rules at a later stage. UDT is steadily being developed following this treebanking pipeline by annotating the newspaper articles by a team of annotators with expertise in linguistics. The tool being used for the annotation is a part of Sanchay 2 (Singh, 2006) . The annotations are represented in Shakti Standard Format (SSF) (Bharati et al., 2007) . Hitherto, 3226 sentences (around 0.1M words) have been annotated with dependency structure. Each sentence contains an average of 29 words and an average of 13.7 chunks of average length 2.0. Languages Specific Issues Word segmentation Urdu is written in a Nastaliq style cursive Arabic script. In this script an individual letter acquires different shapes upon joining with the adjacent letters. There are four possible shapes a letter can acquire namely initial, medial, f inal form in a connected sequence of letters or an isolated form. The letters acquiring all these four shapes depending on the context of their occurrence are called as joiners. An another set of letters, however, called as non \u2212 joiners do not adhere to this four-way shaping. They only join with the letters before them and have only f inal and isolated forms. An example of a joiner is Arabic Letter 'T eh' and a non-joiner is Arabic letter 'waaw' . The concept of space as a word boundary marker is not present in Urdu writing (Durrani and Hussain, 2010) , (Lehal, 2010) . Space character is primarily required to generate correct shaping of words. For example a space is necessary within the word \"needy\" to generate the visually correct and acceptable form of this word. Without space it appears as which is visually incorrect. In contrast to this, writers of Urdu find it unnecessary to insert a space between the two words \"Urdu Center\", because the correct shaping is produced automatically as the first word ends with a non-joiner. Therefore and look identical. Although space character is primarily used to generate correct shapes of words, it is now being used as a word separator as well. This two-way function of space character in Urdu makes it an unreliable cue for word boundary which poses challenges to the process of tokenization. In UDT pipeline raw text is tokenized into individual tokens using a tokenizer which uses space as word boundary. The generation of erroneous tokens (single words broken into multiple fragments) is obvious, since, as mentioned above, space not only marks word boundary it is also used to generate correct shaping of a word. To ensure that only valid tokens are processed in the further stages of the pipeline, tokenization is followed by human post-editing. The fragments of a word are joined using an underscore ' '. This ensures that such words retain their visually correct shape. For example two fragments and of a single word generated by the tokenizer will be joined into single word with an ' ' as _ . Ezafe Ezafe is an enclitic short vowel e which joins two nouns, a noun and an adjective or an adposition and a noun into a possessive relationship. In Urdu ezafe is a loan construction from Persian, it originated from an Old Iranian relative pronoun \u2212hya, which in Middle Iranian changed into y/i a device for nominal attribution (B\u00f6gel et al., 2008) . The Urdu ezafe construction functions similarly to that of its Persian counter part. In both the languages the ezafe construction is head-initial which is different from the typical head-final nature of these languages. As in Persian the Urdu ezafe lacks prosodic independence, it is attached to a word to its left which is the head of the ezafe construction. It is pronounced as a unit with the head and licenses a modifier to its right. This is in contrast to the Urdu genitive construction, which conforms to the head-final pattern typical for Urdu. The genitive marker leans on the modifier of the genitive construction not on the head and is pronounced as a unit with it. Example ( 4 ) is a typical genitive construction in Urdu while (5) shows an ezafe construction. The ezafe construction in Urdu can also indicate relationships other than possession. In current Urdu treebank when an ezafe construction is used to show possessive relationship, it is annotated similar to genitive constructions indicating possession with an \"r6\" label as shown in example (6), the head noun 'owner' 'possesses' the modifying noun 'throne'. However, in example (7) ezafe does not indicate a possessive meaning, in such cases \"NMOD\" (noun modifier) is used instead of \"r6\", the adjective 'bright' does not stand in a possession relation to the 'day', but simply modifies the head noun in an attributive manner. Agreement Analysis In order to ensure the reliability of manual dependency annotations in UDT, we did an agreement analysis using a data set of 5600 words annotated by two annotators, without either annotator knowing other's decisions. A good agreement on the data set will assure that the annotations in UDT are reliable. The data set used contains 2595 head-dependent dependency chains marked with dependency relations belonging to a tag-set of 39 tags. The agreement measured is chunk based; for each chunk in a sentence agreement was measured with regard to its relation with the head it modifies. Inter-annotator agreement was measured using Cohen's kappa (Cohen and others, 1960) which is the mostly used agreement coefficient for annotation tasks with categorical data. Kappa was introduced to the field of computational linguistics by (Carletta et al., 1997) and since then many linguistics resources have been evaluated using the matrix such as (Uria et al., 2009) , (Bond et al., 2008) , (Yong and Foo, 1999) . The kappa statistics show the agreement between the annotators and the reproducibility of their annotated data sets. Similar results produced by the annotators on a given data set proves the similarity in their understanding of the annotation guidelines. However, a good agreement does not necessarily ensure validity, since annotators can make similar kind of mistakes and errors. The kappa coefficient \u03ba is calculated as: \u03ba = P r(a) \u2212 P r(e) 1 \u2212 P r(e) (8) P r(a) is the observed agreement among the coders, and P r(e) is the expected agreement, that is, P r(e) represents the probability that the coders agree by chance. Based on the interpretation matrix of kappa value proposed by Landis and Koch (Landis and Koch, 1977) as presented in Table 1 , we consider that the agreement as presented in Table 2 , between the annotators on the data set used for the evaluation, is reliable. There is a substantial amount of agreement (Landis and Koch, 1977) . No. of Annotations Agreement Pr(a) Pr(e) Kappa 2595 1921 0.74 0.097 0.71 between the annotators which implies their similar understanding of the annotation guidelines and of the linguistic phenomenon present in the language. Urdu as discussed earlier is a morphologically rich language, information concerning the arrangement of words into syntactic units or cues to syntactic relations, is expressed at word level through case clitics (Mohanan, 1990) . Because information about the relations between syntactic elements is expressed at word level, the prediction of the syntactic relations becomes easier for an annotator. However, as mentioned in Table 3 case markers and case roles don not have a one to one mapping, each case marker is distributed over a number of case roles, this phenomenon is called as case syncretism. Among the 6 case markers viz (ergative), (ablative), (genitive) and , (locative) only (ergative) is unambiguous, all others are ambiguous between different roles. This syncretism is one of the reason for the disagreement between the annotators. Out of 965 case marked nominals 735 are agreed upon by both the annotators and for 230 nominals both disagreed. Examples below show syncretism in case marker 'ko'. marks the 'recipient', 'theme' and the 'experiencer' of the main verbs in sentences ( 9 ), ( 10 ) and ( 11 ) respectively.  The nominals carrying in these sentences will be labeled in UDT as k4 'recipient', k2 'theme' and k4a 'experiencer' respectively. Table 5 shows the statistics of the annotation-the number of labels used by each annotator and the frequency of agreement and disagreement per label. Statistics in Table 4 and 5 show that a considerable amount of confusion is between 'k1' (agent) and 'k2' (theme); 'k1' (agent) and 'pof' (part of); 'k1s' (noun complement) and 'pof' (part of) and 'k2' (theme) and 'pof' (part of). Out of 110 disagreements for label 'pof', the annotators differ 81 (74%) times in marking a given dependency structure either with a 'pof' relation or with 'k1, 'k1s' or 'k2'. Similarly for 'k1' 38% disagreements are between 'k2' and 'pof' and for 'k2' 49% disagreements are between 'k1' and 'pof'. The high number of disagreements among the members of this small subset of labels (k1, k2, k1s, pof ) suggest the validity of the disagreement that is to say that the disagreements are not random or by chance and can be attributed to the ambiguity or some complex phenomenon in the language. All the disagreements involving 'pof' relation occur due to the complexity of identifying the complex predicates in Urdu. The challenges in the identification of complex predicates (Begum et al., 2011) coupled with similar syntactic distribution of these Karaka roles explain the differences among the annotators for these relations. Take for example the case of sentences ( 12 ) and ( 13 give-PST+PRF 'Nadiya gave Yasin a book.' k1 k1s k2 k2s k3 k4 k4a k5 k7 k7p k7t pof k1 0 1 5 0 1 5 1 0 2 1 0 11 k1s 2 0 2 0 0 0 0 0 0 0 0 16 k2 43 2 0 1 0 1 0 3 2 0 1 38 k2s 0 1 8 0 0 0 0 0 0 0 0 2 k3 0 0 1 0 0 0 0 0 0 0 0 0 k4 2 0 6 0 0 0 1 0 0 0 0 0 k4a 1 0 0 0 0 0 0 0 0 0 0 0 k5 0 0 1 0 1 2 0 0 0 3 0 0 k7 0 0 0 0 0 0 0 0 0 3 3 1 k7p 0 0 0 0 0 0 0 0 8 0 0 0 k7t 0 0 0 0 0 0 0 0 2 0 0 0 pof 1 9 6 1 0 0 0 0 2 0 0 0 Conclusion In this paper we have discussed an ongoing effort of building a dependency treebank for Urdu based on CPG framework. We discussed some of the Urdu specific issues like Ezaf e construction and word segmentation encountered during the treebank development. We also discussed the evaluation of dependency level annotation by measuring the interannotator agreement using the Kappa statistics. The Relations Ann agreement as presented in this work is considered to be reliable and substantial ensuring that the syntactic annotations in the treebank are consistent and are annotated by the annotators with a substantial clarity of the annotation guidelines. Acknowledgement We would like to thank Anjum Parveen for annotating the data set used for the experiments of interannotator agreement. The work reported in this paper is supported by the NSF grant (Award Number: CNS 0751202; CFDA Number: 47.070). Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.",
    "abstract": "In this paper we describe a currently underway treebanking effort for Urdu-a South Asian language. The treebank is built from a newspaper corpus and uses a Karaka based grammatical framework inspired by Paninian grammatical theory. Thus far 3366 sentences (0.1M words) have been annotated with the linguistic information at morpho-syntactic (morphological, part-of-speech and chunk information) and syntactico-semantic (dependency) levels. This work also aims to evaluate the correctness or reliability of this manual annotated dependency treebank. Evaluation is done by measuring the inter-annotator agreement on a manually annotated data set of 196 sentences (5600 words) annotated by two annotators. We present the qualitative analysis of the agreement statistics and identify the possible reasons for the disagreement between the annotators. We also show the syntactic annotation of some constructions specific to Urdu like Ezaf e and discuss the problem of word segmentation (tokenization).",
    "countries": [
        "India"
    ],
    "languages": [
        "Hindi",
        "English",
        "Urdu"
    ],
    "numcitedby": "20",
    "year": "2012",
    "month": "July",
    "title": "Dependency Treebank of {U}rdu and its Evaluation"
}