{
    "article": "Concept maps are visual summaries, structured as directed graphs: important concepts from a dataset are displayed as vertexes, and edges between vertexes show natural language descriptions of the relationships between the concepts on the map. Thus far, preliminary attempts at automatically creating concept maps have focused on building static summaries. However, in interactive settings, users will need to dynamically investigate particular relationships between pairs of concepts. For instance, a historian using a concept map browser might decide to investigate the relationship between two politicians in a news archive. We present a model which responds to such queries by returning one or more short, importance-ranked, natural language descriptions of the relationship between two requested concepts, for display in a visual interface. Our model is trained on a new public dataset, collected for this task. Introduction Concept maps are visual summaries, structured as directed graphs (Figure 1 ). Important concepts from a corpus are shown as vertexes. Natural language descriptions of the relationships between concepts are shown as textual labels, along the edges on the map. Initial attempts to generate English-language concept maps within natural language processing (Falke and Gurevych, 2017) have focused on creating static diagrams which summarize collections of documents. However, in interactive settings, users will want to query relationships with a concept map interface, rather than simply read over fixed output from a summarization system. For instance, in the concept map browser shown in Figure 1 , a user has queried for the relationship between Milosevic and Kosovo. An interactive system should include both concepts in a visual network, along with a labeled edge that summarizes their relationship (e.g. \"Slobodan Milosevic revoked autonomy of Kosovo Province\"). This study is concerned with how to add such labeled summary edges to a map. Given a pair of input query concepts, denoted (t 1 ) and (t 2 ), we attempt to select the best extractive, natural language summary statement which summarizes their relationship. Because there is no existing supervision to guide such a selection, we collect a new dataset of annotated summary statements, which we use to supervise a new model for this task. Our study thus presents a full system for summarizing the relationship between an arbitrary pair of query concepts, extending prior work on relational summarization and concept maps (Falke and Gurevych, 2017; Handler and O'Connor, 2018) . Related work: relationship extraction This study builds on prior efforts from Handler and O'Connor (2018) , who propose extractively summarizing relationships via a two-stage process that first (1) identifies wellformed spans from a corpus that start with (t 1 ) and end with (t 2 ) and then (2) chooses the best summary statement from among these wellformed candidates. Handler and O'Connor (2018) show that extracting wellformed spans can find many more readable candidates than traditional relation extraction techniques. But they do not offer a method for the second step of picking a summary statement, which is the focus of this study. We approach this new task of choosing the best summary statement from available candidates by collecting new supervision, tailored to the particular problem of summarizing relationships on concept maps. This form of supervision has a different focus from the existing Falke and Gurevych (2017) concept map dataset. Where Falke and Gurevych (2017) seek to create the best overall concept map for a given topic, this work seeks to find the best summary relationship for a given relationship. Therefore, unlike Falke and Gurevych (2017) , our dataset includes labels for the most readable and informative statement describing the relationship between a (t 1 ) \u2212 (t 2 ) query pair. Overall technical approach Like Handler and O'Connor (2018) , we approach the problem of finding a short relationship summary statement with a two-stage approach. Stage 1: We identify candidate summary statements using Handler and O'Connor (2018) 's method, which returns the probability that a span of tokens beginning with (t 1 ) and ending with (t 2 ) reads as a fluid and coherent sentence when extracted from naturally-occurring text. 1 (For brevity, we refer the reader to prior work for details, including discussion of why span extraction is preferred to relation extraction techniques). Table 1 provides examples of spans that do and do not make sense when extracted in this manner. We define all spans between (t 1 ) and (t 2 ) with a probability of well-formedness greater than .5 to be the candidate set for the pair (t 1 ) -(t 2 ). A sample candidate set is shown in Table 2 . Stage 2: In stage two, we choose the best summary statement from the candidate set. We collect new annotation to supervise this decision. Our annotation procedure assigns a score \u03b1(s) \u2208 {\u22123, \u22122, ...+3} to each s in a candidate set, Milosevic withdrew from Kosovo in 1999. Clinton spoke with Milosevic about Kosovo. Table 1 : Some spans (top) are plausible summary statements, because they make sense when removed from context sentences. Others spans (bottom) are not plausible summary statements because they don't make sense when extracted from sentences. We use an approach from Handler and O'Connor (2018) to identify such spans. which is intended to reflect how well s summarizes a particular relationship. We use this supervision to train a model to predict \u03b1(s). We propose that the statement with the highest predicted \u03b1(s) score should be displayed on a concept map. Candidate extraction We approach the problem of summarizing relationships for concept maps by collecting a new dataset of annotated summary statements, drawn from news stories focusing on the Balkan Peninsula in the 1990s. Political scientists use rich news archives from this complex period to better understand conflict (Schrodt et al., 2001) . We create our dataset from New York Times articles (Sandhaus, 2008) published from 1990-1999, which mention at least one country from the Balkans. Following prior work on relational summarization, for each country, we use the package phrasemachine (Handler et al., 2016) to identify the 100 highest-frequency noun phrases within articles which mention that country. 2 The phrasemachine package uses a regular expression over part of speech tags to efficiently extract noun phrases, a useful syntactic category which includes both named entity spans (e.g. Boris Yeltsin) as well as other concepts (e.g. peace treaty). From all non-empty pairs of highestfrequency concepts, we sample a total of 689 pairs with more than two extracted candidates. In total there are 5,214 candidate statements across 689 sampled sets. 3 On average there are 7.56 state-2 https://github.com/slanglab/ phrasemachine 3 Additional notes. The countries are: Kosovo, Albania, Serbia, Croatia, Montenegro, Macedonia, Bulgaria, Romania, Moldova and Bosnia. (We exclude the former Yugoslavia; its landmass included other countries on our corpus). phrasemachine sometimes returns overlapping phrases, leading to duplicate sets. We merge duplicates with a heuristic which uses hand-written rules based on (i) token overlap between concepts and (ii) overlapping sentences be- Yeltsin\" and (t 2 ) = \"General Grachev,\" along with decisions from three annotators (A1, A2 and A3) selecting the best (B) and worse (W) summary statement in the set. All annotators agree that s 5 is the best, so \u03b1(s 5 ) =3. (During annotation, the order of all sets was randomized). ments per set (\u03c3 = 10.6). 5 Candidate annotation Method Some candidate sets in our dataset are easy for a person to judge and rank. For instance, it is possible to quickly read over the small set shown in Table 2 and identify statements which are clearly better and clearly worse synopses of the relationship between \"General Grachev\" and \"Mr. Yeltsin\". However, other candidate sets in our dataset are too large and too complex to read and analyze quickly. (The largest candidate set in our dataset contains 143 statements in total). We accommodate both large and small sets with a \"low-context\" (Falke and Gurevych, 2017) annotation technique. We split candidate sets into one or more subsets, and ask annotators to rank the best and worst summary statements in each subset. Then we aggregate these local judgements about the best and worst candidates within each subset to create a global score. This global score, \u03b1(s), attempts to capture the overall quality of a given summary statement s. This method of soliciting local judgements about subsets and then aggregating into an overall score is known as Best-Worst Scaling (Louviere, 1991) . Best-Worst Scaling has been shown to make more efficient use of human judgements for a natural language task than traditional techniques (Kiritchenko and Mohammad, 2017) . Details of Best-Worst annotation We present all candidate sets to three different non-native English speakers, hired via a professional annotation firm. All annotators completed graduate work in either linguistics or the humanities, and were based in the Middle East. For each tween sets. We exclude pairs which are very obviously unrelated to the Balkans (e.g. Chinatown and Little Italy). Our annotation budget determined the number of annotated sets. annotator, we divide each candidate set into J random tuples (a tuple consists of up to eight candidate statements), and ask the annotator to choose the best and worst from each tuple. Annotators are instructed that the best statement should be the one that both sounds the most natural and that most helps them understand the history and politics of the Balkan region. They are instructed that the most unnatural sounding and least informative statement should be chosen as worst. In total, each candidate statement is shown to each annotator exactly once. 4 After annotators have judged each individual set, we aggregate with Orme (2009)'s counting formula: we set the score \u03b1(s) \u2208 {\u22123, \u22122, . . . , +3} of each summary statement s to be the number of times s was chosen as the best, minus the number of times it was chosen as the worst. Following prior work (Kiritchenko and Mohammad, 2017) , we evaluate inter-annotator agreement via split-half reliability. For each candidate set, we randomly split annotators into two groups, and compute the score for each s using each group of annotators. Then we compute the Spearman correlation (\u03c1) between the two sets of scores, yielding an average of \u03c1 = 0.495 across 1000 random splits. Modeling The previous section describes a procedure for assigning a score, \u03b1(s) for each s in our dataset. We use these scores to train a model, p(\u03b1(s)|s). During modeling, we divide the dataset into training and test sets at the entity level, ensuring that there are no relationships between concepts in the training and test set. Ensuring that there are no relationships shared across sets is important because a model might use knowledge about relationships gleaned from training data (e.g. Milosevic led Serbia) to make inferences about relationships in the test data (e.g. Milosevic led the Serbian Socialist party). 627 candidates are used for training; the remaining 62 are for testing. 5  We model p(\u03b1(s)|s) using ordinal regression, implemented with the MORD package (Pedregosa-Izquierdo, 2015) . We use unigram features, morphological features, part-of-speechtag features and binary features (e.g. s includes punctuation mark) to represent the candidate statement. Handler and O'Connor (2018) 's method ( \u00a74) returns a probability that a summary statement is grammatically wellformed. We include this probability as a feature in our model. We also include the token length of a summary statement as a feature. We tune MORD's regularization penalty parameter to maximize 5-fold, crossvalidated Spearman's \u03c1 using the training set. 6 Evaluation and analysis We use the test set to measure the extent to which our model's predictions correlate with gold scores, achieving a Spearman's \u03c1 = 0.443 between our model's predictions and the gold scores. This is close to the \u03c1 = 0.495 computed to measure interannotator agreement ( \u00a75.2). We instructed annotators to select summary statements that were both informative and grammatically wellformed. We use the probability of grammatical well-formedness from the candidate detection method ( \u00a74) as a feature in our model. This measure appears to partially reflect annotator judgements: there is a Spearman's \u03c1 = 0.154 between the two metrics across the dataset. Research into human perceptions of grammatical well-formedness (Sprouse and Sch\u00fctze, 2014; Warstadt et al., 2018) could be applied to make 5 To implement the train-test split, we form an initial provisional division of concepts into two sets. For all relationships between concepts that cross the two sets, we move the entity from the test set to the training set. All scored summary statements between concepts in the training set are used for training; the remainder are for test. We manually tune the size of the initial split so that 10% of concepts are in the final test set. 6 We examine 10 i for i = \u22123, \u22122..2, 3 and use 10 1 . Additionally, the MORD API implements several variants of ordinal regression. We use the LogisticSE variant because it achieves the highest cross-validated \u03c1 on the training set. better predictions in the future. Model Spearman Predicting annotator perceptions of informativeness is more challenging. For instance, annotators preferred \"Mr. Milosevic has been formally charged with war crimes\" (\u03b1(s) = 3) to \"President Slobodan Milosevic may be indicted for war crimes\" (\u03b1(s) = 1). The former expresses a completed action which arguably entails the latter, hypothetical action. How to best model (Bowman et al., 2015) , formalize (MacCartney and Manning, 2009) and even study (Gururangan et al., 2018) such complex semantic relationships is an unsolved problem in NLP. We use the number of tokens in a summary statement (subtracting out the length of query concepts) as a feature. We observe a Spearman's \u03c1 = .337 between \u03b1(s) and the token length of s. We hypothesize that this feature might serve as a very coarse proxy for informativeness: although not instructed to do so, annotators might choose longer statements ahead of shorter statements because they express more about the Balkans. Conclusion We extend prior work focused on finding candidate summary statements (Handler and O'Connor, 2018) and constructing concept maps for an overall topic (Falke and Gurevych, 2017) , by presenting a complete system for summarizing the relationship between an arbitrary pair of query concepts. Our method learns a model for selecting statements that best summarize relationships, which is supervised with a new, annotated resource for the task. We find that shallow cues like statement length and grammatical wellformedness are helpful for identifying good summary statements, but also that representing deeper semantic relationships (e.g. entailment) remains an ongoing challenge for automatically building concept maps. Our study adopts the standard supervised paradigm underlying much current work on sum-marization (Hermann et al., 2015; Grusky et al., 2018) . We gather human judgements of salience and well-formedness (in our case, judgements are expressed via Best-Worst Scaling), and then train a model to best replicate such judgements. Because such supervision is costly and difficult to collect, carries risks of annotation artifacts (Gururangan et al., 2018) and might transfer poorly to new domains, in the future, we plan to explore if other forms of task-based supervision and taskbased evaluation (Jing et al., 1998) may be better suited to the specialized task of automatic concept map summarization. For instance, instead of asking a human to identify better and worse summary statements, we might examine how well a user (or model) presented with summary statement s can answer if other summary statements s are true or false. If some s helps identify many other true s , then s is (potentially) a good summary. We look forward to examining this idea in future work, following recent studies of question-based evaluation for the summarization task (Eyal et al., 2019) . Acknowledgement Thanks to Haw-Shiuan Chang, Tu Vu and Kalpesh Krishna for helpful comments on earlier drafts of this work. Thanks to the anonymous reviewers for their helpful suggestions, in particular for pointing out possible connections between relationship summarization and joint extraction of relations and entities.",
    "funding": {
        "defense": 0.0,
        "corporate": 0.0,
        "research agency": 0.0,
        "foundation": 0.0,
        "none": 1.0
    },
    "reasoning": "Reasoning: The article does not mention any specific funding sources, including defense, corporate, research agencies, foundations, or any other type of financial support for the research presented. Therefore, based on the information provided, it is not possible to determine any funding sources.",
    "abstract": "Concept maps are visual summaries, structured as directed graphs: important concepts from a dataset are displayed as vertexes, and edges between vertexes show natural language descriptions of the relationships between the concepts on the map. Thus far, preliminary attempts at automatically creating concept maps have focused on building static summaries. However, in interactive settings, users will need to dynamically investigate particular relationships between pairs of concepts. For instance, a historian using a concept map browser might decide to investigate the relationship between two politicians in a news archive. We present a model which responds to such queries by returning one or more short, importance-ranked, natural language descriptions of the relationship between two requested concepts, for display in a visual interface. Our model is trained on a new public dataset, collected for this task.",
    "countries": [
        "United States"
    ],
    "languages": [
        "English"
    ],
    "numcitedby": 0,
    "year": 2019,
    "month": "November",
    "title": "Summarizing Relationships for Interactive Concept Map Browsers"
}