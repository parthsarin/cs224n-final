{
    "article": "This paper describes the automatic construction of FinnMWE: a lexicon of Finnish Multi-Word Expressions (MWEs). In focus here are syntactic frames: verbal constructions with arguments in a particular morphological form. The verbal frames are automatically extracted from FinnWordNet and English Wiktionary. The resulting lexicon interoperates with dependency tree searching software so that instances can be quickly found within dependency treebanks. The extraction and enrichment process is explained in detail. The resulting resource is evaluated in terms of its coverage of different types of MWEs. It is also compared with and evaluated against Finnish PropBank. Introduction This paper describes the automatic construction of a lexicon of Finnish Multi-Word Expressions (MWEs) derived from data in English Wiktionary and FinnWordNet (Lind\u00e9n and Carlson, 2010) . A specific issue which is pronounced in -but by no means unique to -Finnish is is that of government. Consider the following examples: Contrasting 1a & 1b, we see that a particular verb may dictate the case of its argument. Conversely, contrasting 1a & 1c, we see that different cases of an argument can alternate with different senses of the same verb. The perspective taken here is that such governance restrictions can be treated as simply another type of multiword. One justification for this approach is to consider an English transliteration of 1a where the elative case ending is translated using the preposition \"from\", i.e. the literal \"I hold from cake\". If we consider a hypothetical dialect of English where this was synonymous with \"I like cake\", then we could conceive of \"hold from\" as a prepositional verbal multiword. These types of multiwords can be presented to humans in multiple ways, for example \"pit\u00e4\u00e4 ___-sta\" (to like), given just there in the author's preferred form of a gapped multiword, would commonly be presented in one of two other forms in a typical dictionary of Finnish. The first is as part of a headwords, where gaps would instead be rendered with an inflected pronoun e.g. \"pit\u00e4\u00e4 jostakin\", (jostakin = something-E ). Alternatively, the gap might be specified in a grammar notes next to a particular word sense, in which case the entry under the headword pit\u00e4\u00e4 corresponding to \"to like\" would have a note \"~+ elative\" where \u0129ndicates the headword. Given this information is already specified in dictionaries, the focus of this paper is upon extracting it, alongside other types of Finnish multiwords, and making them machine readable so as to interoperate with other resources and systems. The type of specifications given alongside individual definitions on Wiktionary go beyond simply verbpredicate argument-case associations, and include other types of morphological valency information, as well as constituent words, syntactic valency information (e.g. transitive/intransitive), fine-grained POS information (e.g. auxiliary), and occasionally semantic valency information. A complimentary view on these these lexical items is that they are dependency tree templates, since, excepting semantic valency information, all this information is available within a Universal Dependencies (de Marneffe et al., 2014) parse tree. This perspective makes the simplifying assumption that a verb's arguments are its descendants within a dependency tree, which is not always the case. Beside these syntactic frames, and more straightforward multiwords, the resource also includes inflections as another form of non-lemma idiomatic construction. Of interest is whether an inflected form is given a definition. If it is, this is a reasonable indication of idiomatic usage. Related work Related to this work are verb oriented semantic valency, or predicate-argument structured, Lexical Knowledge Bases (LKBs) such as PropBank (Palmer et al., 2005) and FrameNet (Baker et al., 1998) . For Finnish, in this category there are Finnish PropBank (Haverinen et al., 2015) , FinnFrameNet (Lind\u00e9n et al., 2017) and FinnTransFrameNet (Lind\u00e9n et al., 2019) . The verbal frames within these resources do not concern themselves with syntax or morphology and can to some extent be preserved across languages, and so information about language specific issues such as the case in which a nominal argument appears are only visible through corpora annotated with these schemes. In contrast, VerbNet is a fairly language specific formalism. Its frames give a great deal of specific semantic information about verbs, and also include syntactic restrictions on the parts of speech of arguments. In the case of the Basque Verb Index (Estarrona et al., 2016) , which was inspired by the VerbNet formalism, this includes case information on arguments. Outside of VerbNet inspired formalisms, but within the Uralic languages, Wiechetek (2018) created a resource for Northern Saami, with both morphological and semantic category restrictions upon arguments, allowing identification of situations when the incorrect case had been used within a grammar checking application. The approach in this paper is novel in its selection of initial data and the extent to which it is exploited. English Wiktionary gives definitions for words from many languages in English. Focussing in on the definitions of Finnish words on English Wiktionary, it can be seen as a unidirectional Finnish-English bilingual dictionary. As such, while it is written for everyday usage by a general audience, it is directed somewhat towards second language learners. The level of grammatical detail is thus driven by this intended audience, rather than by a specific linguistic formalism. While previous work in automatic creation of LKBs from existing resources such as DBnary (S\u00e9rasset, 2015) , ConceptNet (Speer et al., 2017) , and BabelNet (Navigli and Ponzetto, 2012) have made heavy use of Wiktionary, for the most part, detailed information about grammatical constructions has been neglected. Method The overall pipeline of linguistic data resulting in the FinnMWE resource is shown in Figure 1 . The processing is performed with Python. For accessing FinnWordNet, NLTK (Bird et al., 2009) is used, while Wiktionary data is processed from the raw MediaWiki XML dumps using mwparserfromhell . Sources MWEs are obtained from two sources: FinnWordNet (Lind\u00e9n and Carlson, 2010) and English language Wiktionary. Both Wiktionary and FinnWordNet contain data which can be used to create syntactic frames. Within Wiktionary, there are multiple places MWEs can occur: \u2022 The headword itself can be a multiword. \u2022 The derived terms section of a page can contain MWEs expressed as headwords which are either links to other Wiktionary pages, or links which have not yet been created (known colloquially as redlinks). \u2022 A word sense/definition entry within a page can contain a syntactic frame. On Wiktionary, the data is included within the text of a definition, for example, the headword pit\u00e4\u00e4 has the entry \"(transitive + elative) To like, be fond of\". In this case, the syntactic frame \"pit\u00e4\u00e4 ___-sta\" is extracted and associated with this definition. -The usage examples section can also contain MWEs, which can be extracted in a similar way to definitions. MWEs in FinnWordNet are found only in headwords. When there is valency information in FinnWord-Net, it is marked using abbreviated forms of pronouns. For example in the headword \"pit\u00e4\u00e4_kiinni_jstak\" (hold onto something) jstak is short for jostakin (kiinni is a postposition with jostakin as its head), allowing the syntactic frame \"pit\u00e4\u00e4 kiinni ___-sta\" to be extracted. Extraction of syntactic frames from collocation notes in Wiktionary word senses is more involved. The rule based information extraction pipeline is outlined in Figure 2 . As the first step, spans which contain grammar notes are identified. These are typically visually separated from the definition text itself, e.g. by being bracketed. The main indicator that a bracketed part may contain a grammar note is the presence of certain words e.g. a case name \"elative\" or a tidle ~, which indicates the position of the headword. Once a potential note is found, the lexing process maps surface tokens consisting of a mix of English words and MediaWiki markup to an intermediate set of normalised, type-tagged tokens. It is driven by an FST specified using the xfst language (Beesley and Karttunen, 2003) as implemented in HFST (Lind\u00e9n et al., 2009) . The input side of a fragment of the FST handling English language specifications of Finnish nominals and nominalised collocates is given in Figure 3 . The parsing step is implemented as a recursive descent Pratt (1973) parser. A Pratt parser extends the traditional recursive descent approach to context free parsing with a table-driven approach to operator precedence. For an example of where this is important consider the following headword-note pairs and their interpretation as bracket gapped MWEs. ylt\u00e4\u00e4: intransitive + allative or illative \u2194 ylt\u00e4\u00e4 (___-lle OR ___-hin) tulla: elative + 3rd person singular + noun/adjective in nominative or partitive or personal + translative \u2194 (___-sta tulee (___ OR ___-ta)) OR (tulla ___-ksi) In this case, it becomes apparent that or has a different precedence depending upon whether it is bold or not. The descending operator precedence order is: \"/\", \"or\", \"+\", \"or\", \";\". The interpretation step uses a cascade of heuristics to try and obtain MWEs from the final parse tree. The aim is to transform the tree into a state where it has a single root and consists only of plus-nodes and or-nodes, and finally to ensure that some node is marked as being the headword. 1. Merge directly adjacent (not separated by +) word features into word units. 2. Find or create a root, typically consisting of a plus-node, and abort if there is not exactly one. 3. Find all features outside the root, and merge them. 4. Ensure there is a word corresponding to the headword within each plus-node: (a) Features derived from certain strings such as \"3rd pers. singular\" and \"personal\" are always chosen as the headword node, even in preference to ~(this is because sometimes ~is misused as a generic blank). (b) Otherwise if there is a ~, which indicates the headword. (c) Otherwise if there is only one word, and it has the same part of speech as the head, assume it is the head. (d) Otherwise if there is any place where an empty node has been created in the parse tree, such as when there is nothing present on one side of a binary operator such as \"+ elative\" or \"elative +\" then pick one of these as the head node. i. If the first node in a plus-node is an empty node, pick this. ii. Otherwise if the last node in a plus-node is an empty node, pick this. iii. Otherwise just pick the first empty node left to right. (e) Otherwise insert a new node as the headword at the beginning of the plus-node. 5. Merge all the merged features outside the root with the headword. Finding the head Finding which part of the MWE is the head can be helpful for identifying it in dependency trees, since if we make the argument constituency assumption, it will be at the root of the tree containing its arguments. For a Wiktionary definition or a usage example, it is clearly the case that the head is the same as the head of the title of the Wiktionary page. For a MWE Wiktionary headword, the head is sometimes explicitly specified in the etymology section, e.g. it may be formatted bold. Failing this, if the MWE occurs within the derived terms section of another page, we can assume that the head of the title of this page is its head. For the remaining title derived Wiktionary definitions, the head must be guessed. This is, however, always necessary for FinnWordNet. In both cases, the guessing is done with the same procedure, based on the head and the MWE having the same part of speech, shown in detail in Algorithm 1. Algorithm 1: The Find-Head procedure to find the head of an MWE. Normalisation As a normalisation step, all morphological information is converted into Universal Dependency features. For valency information, this means all information about case, infinitive, participles and so on are converted from the grammar usage note descriptions on the Wiktionary pages or the case abbreviation in a FinnWordNet headword into features on the consistent word. For part of speech tags, this means conversion from Wiktionary and WordNet part of speech to Universal Dependencies part of speech. Storage, formatting and identification within text Next, the normalised MWEs are saved as an SQLite database as an intermediate format for downstream applications. There are a series of formatters which directly make use of the collection of MWEs. The human readable formatters produce either a gapped MWE or one using pronoun abbreviations such as jstk. as in many Finnish dictionaries. In both cases, this is done by mapping from Universal Dependency features to normalised surface morphemes. Another formatter exists for the purposes of creating search queries for SETS dependency tree search engine (Luotolahti et al., 2015) . Since this is also based on universal dependencies, the mapping is mostly straightforward. However, one minor obstacle is Finnish's marginal accusative case. In Finnish this case only has a unique realisation for pronouns e.g. min\u00e4 \u2192 minut, for other words it is realised as genitive e.g. kakku \u2192 kakun. This means that within corpora, the accusative is only annotated for pronouns. Thus we map the accusative case within MWEs to the SETS dependency search language string (PRON&Case=Acc)|(!PRON&Case=Gen), that is to say either a pronoun in the accusative, or something other than a pronoun in the genitive. The FinnMWE toolkit also contains tools for extracting matches in morphologically analysed text by assuming they are contiguous or directly from Universal Dependencies trees without requiring an indexing step. Evaluation Table 1 gives basic information about the number of different types of multiwords in FinnMWE. The breakdown shows specifically how many Wiktionary inflections contain sense data, indicating they may be some kind of idiomatic usage, as well as how many multiwords come from redlinks, indicating they can only be found in the derived terms area. Table 2 shows the results of comparing syntactic Wiktionary derived frames and semantic Finnish PropBank frames in its accompanying corpus. Since for a given hit for a headword, multiple MWEs can match, we use the powerset construction to make a discrete probability distribution of independent events. This distribution is compared against the distribution of PropBank frames found in the PropBank corpus using the entropy (in bits), mutual information and normalised mutual information (equivalent to the V-measure) defined as: H(X) = \u2212 i p i log 2 (p i ), MI(X; Y ) = y\u2208Y x\u2208X p (X,Y ) (x, y) log 2 p (X,Y ) (x, y) p X (x) p Y (y) , NMI(X; Y ) = 2 MI(X; Y ) H(X) + H(Y ) For headwords with high normalised mutual information, the syntactic frame information from Wiktionary and the semantic frames of Finnish PropBank co-alternate. This means that the syntactic frames under this headword correspond to different senses according to the held-out LKB of PropBank. Currently, the most fragile part of the processing pipeline is the extraction of information given within the body of Wiktionary pages, in particular the syntactic frame data. The reason is that this information is given as free text, and is only as consistent as it is by-convention, and so a Wiktionary editor could decide to introduce new conventions at any time. Therefore, one reasonable direction is to introduce more structure upstream. On more the conservative side, the current conventions on Wiktionary could be encoded into official template tags. A longer term would be to make sure this type of data can be encoded within the lexicographical data section of Wikidata. Conclusion Acknowledgements Thank you to the reviewers for their valuable comments.",
    "abstract": "This paper describes the automatic construction of FinnMWE: a lexicon of Finnish Multi-Word Expressions (MWEs). In focus here are syntactic frames: verbal constructions with arguments in a particular morphological form. The verbal frames are automatically extracted from FinnWordNet and English Wiktionary. The resulting lexicon interoperates with dependency tree searching software so that instances can be quickly found within dependency treebanks. The extraction and enrichment process is explained in detail. The resulting resource is evaluated in terms of its coverage of different types of MWEs. It is also compared with and evaluated against Finnish PropBank.",
    "countries": [
        "Finland"
    ],
    "languages": [
        "Finnish",
        "English"
    ],
    "numcitedby": "2",
    "year": "2020",
    "month": "December",
    "title": "Filling the {\\_}{\\_}{\\_}-s in {F}innish {MWE} lexicons"
}