{
    "article": "This paper presents a system called FishWatchr Mini (FWM), which supports students in observing and reflecting on educational activities such as presentation practices. Although video annotation systems are supposed to support such activities, especially reflection, they have been used by researchers and teachers outside the classroom, rather than by students inside the classroom. To resolve problems with introducing video annotation systems in the classroom, we propose three solutions: (a) to facilitate preparation of devices, FWM is implemented as a Web application on students' smartphones; (b) to facilitate students' learning to use the system, FWM is designed to automate as many operations as possible, apart from annotation; and (c) FWM allows students to examine annotation data through reflection, by providing functions such as visualization. The results of applying FWM to presentation practices in a university validated the effectiveness of FWM in terms of its ease of use and applicability of annotation results. Since annotated video data could also provide language resources for teachers, it is anticipated that they will contribute to improving their classes in the future. Introduction Educational activities such as presentation practices, discussion exercises, and trial lessons for trainee teachers have been conducted in university classrooms. These activities include cooperative phases (Barkley et al., 2005; Morimoto and Otsuka, 2012 ): Together, students observe their practices and reflect on them after the observations. Thus far, many video annotation tools have been developed to observe such activities (Rich and Hannafin, 2009; Yousef et al., 2014) because recorded video and sound are useful tools, particularly for reflecting on practice. Most of these tools, however, have been designed for researchers to make complex annotations (Brugman and Russel, 2004) or for teachers to share videos and comments as web-based systems (Kong et al., 2009; Colasante, 2011) . These tools are not suited to students' real-time annotation and to group reflection in the classroom. In this paper, we developed a system called FishWatchr Mini (FWM), which supports students' observation and group reflection in the classroom. To validate the effectiveness of FWM, we presented the results of the application to presentation practices in a university setting. We believe that one of the reasons that video annotation systems have not been introduced effectively in the classroom is the stringent condition of the system operation: many students, as observers, make real-time simultaneous annotations and the results of those annotations are then used in the group reflection phase. FWM is designed to address the following three problems related to the introduction of video annotation systems in educational activities in the classroom. The first problem is preparing classroom devices for systems and settings. To introduce annotation systems into the classroom, dedicated devices (Nakajima, 2008) such as Clicker are required, or students need to work in a computer lab. FWM is designed to work on students' mobile devices and is implemented as a Web application, meaning there is no need to install it on each device. Teachers can define the settings for their practices on an FWM server and then easily apply them to all students' devices. The second problem is students' burdens of learning how to use these systems. It can result in reduced lesson time and distract from observations. Accordingly, FWM is designed to automate as many operations (e.g., saving annotations, loading the settings) as possible, apart from annotation. Moreover, the user interface for annotation is made as simple as possible. The third problem is the lack of options available for students to make use of their annotation results. During the group reflection phase, students reflect on their practices based on all their annotation results and videos. FWM includes functions that enable students to visualize the annotation data merging results of all students and to synchronize the annotation data with the video. In this paper, to demonstrate how the solutions for the three problems are addressed in the design of FWM, we explain how FWM can be used to observe and reflect on the educational activities in a model of presentation practice. Based on this design, FWM is implemented as a mobile system for observing educational activities in real-time, and reflecting immediately after the activities. FWM works as a real-time video annotation system because the annotation data are premised to be synchronized with recorded video; although FWM itself does not serve to edit, play, and record video data. To further explore the topic, this paper is structured as follows. First, in Section 2, we will describe the FWM design to resolve the three problems outlined above. Second, the implementation of FWM is then shown in Section 3. Third, Section 4 presents the results of a presentation practice in a university to validate the effectiveness of FWM. Finally, the conclusion and opportunities for future study are considered in Section 5. Design of FishWatchr Mini Model Activity To understand the FWM design, we will describe the presentation practice in a university as a model activity for application of FWM. The procedure for the practice is conducted as follows. FWM could be used in Steps 2b and 3 by students and in Step 4 by teachers. Step 1 Students are divided into groups of three to four students. The number of students as observers is assumed to be more than 10 since a smaller number of observers may not notice important scenes that should be shared in the group reflection phase. Step 2a Each group does their presentation practice in front of other students. A teacher shoots videos for their practices. Step 2b Students as observers make real-time annotations to scenes that they considered important. The evaluation points in observing presentations are given by the teacher before the observation (refer Section 4). Step 3 Having complete the practice session, each group then reflects on their own practice based on all the annotation data and video data. Step 4 The teacher gives feedback to the students based on all the annotation results and video data. One of the characteristics of this model activity is that the procedure is the same as conventional presentation practices. In particular, the required time for the observation in Step 2b is the same because students observe the practices in real-time and use the video data following Step 2b. This makes it easier for teachers to introduce video annotation systems in the classroom. On the other hand, there could be procedures where each group conducts their presentation practice individually, recording themselves (Step 2a') and then observes the other groups' practices through video playback (Step 2b'). The observation condition in Step 2b' is more effective than the real-time observation in Step 2b because students can observe their practices at an individual pace and as many times as they wish. The observation takes more time, however, compared to the one described above. Moreover, teachers are at risk of failing to record observations and students may not be able to conduct their observations through playback of the video data. As described above, this model activity is concerned with facilitating the system's introduction in the classroom, allowing students to use the video data after exercises. On this basis, FWM is designed as a mobile system that allow users to conduct real-time annotation (observation), enabling them to synchronize annotation data with video data. Solutions to the Three Problems Here, we propose solutions to the three problems described in Section 1. Preparation of Devices FWM is designed to run on students' smartphones. According to an investigation conducted by the Japanese Ministry of Internal Affairs and Communications(2017), 96.8% of people in their 20s connect to the Internet on their smartphones. Therefore, it is feasible to use smartphones as devices for FWM in the classroom, in particular if a small number of auxiliary smartphones can be secured. FWM is implemented as a Web application because students can use FWM through Web browsers without installing the application on their smartphones. Users can save specific settings, which are defined with a \"SessionID\" for each practice, to an FWM server through an FWM client. The settings can be applied to all FWM clients 1 , using the SessionID. A SessionID can be set to an specific FWM client using a query parameter in the FWM server's URL. If the teacher instructs students to open the following URL, the SessionID \"practice2017\" are set to their FWMs, and the settings for the SessionID are then loaded on their FWMs automatically. http://csd.ninjal.ac.jp/f/m.html&config=practice2017 Burden of Learning Students' burdens of learning how to use FWM are lessened by automating as many of operations as possible apart from annotation. More specifically, these include loading specific settings for practice, saving annotation results to the FWM server, and so on. For annotation, the operations are limited to pressing \"annotation buttons,\" which can be defined by the teacher. One annotation has four attributes: annotation time, annotator's name, user-defined attribute 1, and user-defined attribute 2. The values for user-defined attributes 1 and 2 are assigned to the annotation buttons. Each user-defined attribute can have up to 8 values. In Figure 2 , two attributes, namely presenters' name and evaluation for presentations, are defined with six buttons. The rest of the attributes, specifically annotation time and annotator's name, are automatically filled when the values of two user-defined attributes are fixed by pressing the annotation buttons. Means of Using Annotation Results In Steps 3 and 4 of the model activity, students and teachers must be able to examine annotation results made by all students and their video data. FWM provides users with three functions to facilitate this examination. Visualizing annotation data FWM has two types of visualization methods. The first is to summarize annotation data as a histogram of the user-defined attributes. The histograms help students become aware of the characteristics used in their own presentation. The second type of visualization is to display a histogram of annotation data in a time series. Using the histogram, each student can ascertain how the other students evaluated her/his part of the presentation, and find scenes of educational value where many students have made annotations. Synchronizing annotation data with video data FWM provides a dedicated function for annotating a start time for the video shooting. When the teacher begins to take a shot of the practice at the same time as a button for the function is pressed, the annotation data for that SessionID is saved to the FWM server. The start time information is used for displaying elapsed times of videos on time-series histograms. Although FWM does not include a media player, users can play a scene corresponding to a specific point on a time-series histogram, with external media players referring to the elapsed time. Exporting annotation data to other programs FWM can export all annotation data by a SessionID including the start time information. If the annotation and video data are imported by FishWatchr (Yamaguchi, in press) 2 , which is a video annotation system that we have developed, Fish-Watchr allows its users to edit or visualize annotations and to easily play scenes that correspond to the annotations. When users finish making their annotations, the annotation results are saved to the FWM server using SessionIDs. Implementation of FishWatchr Mini When users employ the visualization function, the FWM client will request that the server send all annotation data with a SessionID and display histograms that are used in the reflection phase, based on the data. FWM servers manage annotation data using SessionIDs. A set of annotation data for each SessionID is stored for 180 days on the server. By specifying a SessionID, users can download annotation data as a ZIP-compressed file, which includes all annotation data related to that SessionID. Note that anybody who knows the SessionID can download the annotation data for that SessionID. The video camera does not need to be controlled by FWM clients or a FWM server because the annotation data is synchronized with the video data, based on the time information related to these data. Therefore, generic video cameras such as video cameras for home use and smartphones can be used to record the video. FWM clients themselves have no function to play and edit video data. If FWM is used in the reflection phase: Step 3 and 4, users need an another media player on which to play the video data, referring to the time information displayed on time-series histograms, as described in Section 3.3.. Another option is to use video annotation systems such as FishWatchr, which can import the annotation data of FWM and the video data, and then synchronize them. 2 https://github.com/himawari-san/FishWatchr Annotation The annotation screen of FWM is shown in Figure 2 . The four annotation buttons in the left-hand column and three buttons in the right-hand column are for speaker attributes and evaluation attributes respectively. Button settings can be configured for each SessionID on FWM. One annotation is recorded after the two user-defined attributes are fixed by pressing the buttons. The two most recent annotation results are listed below the annotation buttons and can be deleted by pressing x-mark buttons beside the annotation results, when necessary. When the \"Finish\" button in Figure 2 is pressed, the annotation phase is complete and the annotation data are stored automatically in the FWM server (in the FWM client optionally). Students can thus make annotations using these simple operations. Visualization FWM provides the opportunity for its users to visualize annotation data in two viewing styles. Since the visualization does not depend on video data, users can use this function immediately after practices. Summary histograms can also be shown through specifying a certain observer, typically the observer himself/herself. These histograms help students as observers to compare other observers' annotation results. Figure 5 demonstrates an example of an observer-specified summary histogram of \"evaluation\" attributes. The left and right bars of each attribute refer to the number of annotations by the specified observer and the average number of annotations by observers respectively. Figure 5 shows that the specified observer made more annotations for speech and gesture, but less annotations for eye direction and usefulness compared to the other observers. Data Coordination with Other Equipment As illustrated in Figure 1 , FWM works with various equipment. This section describes the data coordination between Video Camera To synchronize annotation data with video data, the time information of annotation data and the start time information of recording the video are used. Moreover the start time information could be annotated with FWM clients. Devices where FWM clients work are therefore required to be set to the same time. In our exercises, all devices, such as students' smartphones and PCs, were configured to use network clocks and teachers instructed students to compare them to the time provided by the Japan standard time site 3 . FishWatchr With regard to importing to FishWatchr, all that users have to do is to collect downloaded annotation data files (XML format) and the video file in a folder, and to then drag&drop the folder to FishWatchr. In Step 1, fourteen students were divided into five groups. Each group had 10 minutes to complete the practice with a theme that they had set. The teacher defined six evaluation points: speech, gesture, slide, eye direction, usefulness, and novelty. These points are assigned to the values of a user-defined attribute of FWM. In this activity, the speaker's name was not used as a user-defined attribute because only one student was responsible for one part of the presentation and spoke at a time. Students pressed the annotation buttons when they found good relevant scenes based on the six evaluation points. In Step 3, each student imported the annotation data, which was exported from an FWM server, and the video data to FW and then reflected on the annotated scenes in which he/she or members of his/her group presented. The teacher distributed the annotation data to students and the video 3 https://www.nict.go.jp/JST/JST5.html data on USB flash drives. The total data size was about 1.4GB. Results All the practices were completed without any significant problems. A faster distribution method for annotation data and video data may be required, however, if the interval between Step 2b and Step 3 is shorter, for example if the class element of Step 3 is complete immediately after that of Step 2b. During the practices, students made 838 annotations. The median, maximum, and minimum values of the annotations are 52, 150, and 22 respectively. The distributions of the annotations are shown in Figure 3 and 4 . Here, we evaluated this study based on the following two points of view. Ease of use of FWM Despite the 30-minute training time, we did not observe any students facing difficulties in using FWM while they were observing the presentations. This ease of use is further supported by the scores in Question 1 (4.29) and by the high minimum number of annotations (22) . Applicability of Annotation Results The result of Question 3 in Table 1 shows that annotations against students' own presentations were helpful in that they could recognize what kinds of actions were evaluated positively. From the result of Question 4, it is clear that students became aware of problems in their own presentation by observing others' good practice. These results validated that FWM and FW worked well in the presentation practices. Conclusion In this paper, we developed an observation support system for students called FWM. FWM was designed to provide the following three solutions for introducing annotation systems effectively in the classroom: (a) FWM was implemented as a Web application run on students' smartphones; (b) many operations, apart from annotation, were automated to lessen Students' burdens of learning how to use FWM; and (c) three functions, namely visualization, synchronization, and exportation, were provided so that the annotation results could be used in the reflection phase. The results of applying FWM to the presentation practices proved the effectiveness of FWM in terms of its ease of use and the applicability of annotation results. The annotated video data collected through our model activity can provide a helpful language resource, not only for students, but also for teachers. Future study will examine how we can improve subsequent presentation practices and its instruction by using annotated video data. Acknowledgments I would like to thank Professor Atsushi Mori for his helpful suggestions. This work was supported by JSPS KAKENHI Grant Number JP17K01105."
}