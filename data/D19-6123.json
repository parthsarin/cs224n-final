{
    "article": "Recently, neural network models which automatically infer syntactic structure from raw text have started to achieve promising results. However, earlier work on unsupervised parsing shows large performance differences between non-neural models trained on corpora in different languages, even for comparable amounts of data. With that in mind, we train instances of the PRPN architecture (Shen et al., 2018a)-one of these unsupervised neural network parsers-for Arabic, Chinese, English, and German. We find that (i) the model strongly outperforms trivial baselines and, thus, acquires at least some parsing ability for all languages; (ii) good hyperparameter values seem to be universal; (iii) how the model benefits from larger training set sizes depends on the corpus, with the model achieving the largest performance gains when increasing the number of sentences from 2,500 to 12,500 for English. In addition, we show that, by sharing parameters between the related languages German and English, we can improve the model's unsupervised parsing F1 score by up to 4% in the low-resource setting. Introduction Unsupervised parsing, the task of inducing hierarchical syntactic structure from a large amount of unlabeled text, has been widely studied in natural language processing (NLP) (Carroll and Charniak, 1992; Pereira and Schabes, 1992; Klein and Manning, 2002, 2004) . Work on this task bears on open research questions involving human language learning and grammar design by demonstrating what can be learned without substantial prior knowledge. Further, it can also be practically relevant for low-resource languages or language styles. Recently, multiple types of neural network models have been added to the line of research on The cat sat on the mat Figure 1 : The constituency parse tree of the sentence The cat sat on the mat. In this work, we experiment with models that discover such syntactic structures in an unsupervised manner. unsupervised parsing. Latent tree learning models learn to parse via optimization of a downstream task objective (Yogatama et al., 2017; Maillard et al., 2017; Choi et al., 2018) . In contrast, generative unsupervised parsing models learn to model syntactic structure while being trained to language model (Shen et al., 2018a,c) . While the latter model family has been able to generate parse trees which show a high accordance with expert annotations, its members, with the prominent Parsing Reading Predict-Network (PRPN) being no exception, have mostly been evaluated on English. 1 Thus, it is not obvious whether and when obtained results would hold true for other languages, especially if they are unrelated to English or dispose of significantly smaller training corpora. Some nonneural models for grammar induction-i.e., models, which perform unsupervised parsing-show language-dependent performance variation (Snyder et al., 2009) , which motivates our investigation of recent neural models. In this work, we first aim to answer the following research questions, focusing on the parsingreading-predict network (PRPN; Shen et al., 2018a) and experimenting with Arabic, Chinese, and German datasets: (i) Do neural grammar induction models succeed on languages which are unrelated to English? (ii) Does the required amount of training data vary significantly by language? (iii) Do optimal hyperparameter values differ between languages? Answering those questions provides insight into what to expect when applying a neural grammar induction model to a new, potentially low-resource, language. For instance, we find that the model outperforms trivial baselines for all languages and good hyperparameter values seem to be largely language-independent. Second, motivated by transfer learning approaches for similar tasks like supervised dependency parsing (de Lhoneux et al., 2018) , we propose a multilingual model trained on the related languages English and German, such that information from each language is leveraged for the other one. We find that, for small training corpora, this improves performance and reduces the required number of parameters. Contributions. To summarize, we make the following contributions: (i) We perform the first thorough study of the PRPN's parsing ability across multiple languages. To facilitate this analysis and interpret the meaning of the experimental results, we compare to baselines and upper bounds for each language. (ii) For each language, we study variations in hyperparameter trends. We further investigate how the PRPN's performance depends on the training set size, and how this differs between languages. (iii) We present a multilingual variant of the model, which has been obtained via parameter sharing across two related languages. We show that this improves the model's performance. Our experiments with sharing parameters between English and German result in up to 4% gain in parsing F1 over training on each language separately. Unsupervised Constituency Parsing Human language is governed by a set of syntactic rules, which all grammatical or acceptable sentences follow. Unsupervised parsing or grammar induction is the task of detecting such structure automatically, i.e., without any human annotation. The underlying research question is: how much of this latent structure of language can be discovered from raw text alone and how much requires an inherent bias towards acquiring a valid grammar or additional (potentially non-linguistic) informa-tion? From a practical NLP perspective, grammar induction enables us to obtain syntactic information without labeled data, i.e., even in lowresource settings and for resource-poor languages. This information can then be of help for downstream tasks like machine translation (Aharoni and Goldberg, 2017) . In this work, we explore unsupervised constituency parsing. The PRPN, which we experiment with, aims at detecting so-called constituents in sentences. Thus, it splits a sentence's tokens into groups, usually based on their meaning. For example, in Figure 1 , The cat and on the mat are constituents, inter alia. Constituency parsing is recursive: sentences are constructed from units which themselves consist of even smaller constituents which, in turn, consist of smaller groups of words, and so on. This recursive structure of language is represented explicitly in recursive neural networks (Socher et al., 2011) , which are also known as Tree-LSTMs. Successful induction of constituents enables us to then process input sentences using such a computational model instead of a sequential one like, e.g., a standard long short-term memory network (LSTM; Hochreiter and Schmidhuber, 1997) . Since this can be relevant especially for low-resource languages with limited or zero training examples, we investigate in this work how the PRPN model for grammar induction behaves across languages and different (unlabeled) training set sizes. Model and Setup In this section, we first introduce the PRPN, which is the object of our investigations. We then present all datasets, baselines, and upper bounds we use in the set of experiments described in the next sections. PRPN The PRPN 2 consists of three principal components: (i) a parsing network, (ii) a reading network, and (iii) a predict network. We will summarize them in this section. A detailed explanation can be found in Shen et al. (2018a) . Parsing network. Given an input sentence x = (x 0 , x 1 , \u2022 \u2022 \u2022 , x n ) of length n + 1, the parsing net-work uses two convolutional layers to predict syntactic distances d i between x i\u22121 and x i for all pairs of adjacent words. This syntactic distance represents syntactic relationships between tokens in a sentence. Mathematically, the syntactic distance d i between x i\u22121 and x i is predicted by the PRPN as h i = ReLU(W c \uf8ee \uf8ef \uf8ef \uf8f0 x i\u2212L x i\u2212L+1 \u2022 \u2022 \u2022 x i \uf8f9 \uf8fa \uf8fa \uf8fb +b c ) (1) d i = ReLU(W d h i + b d ), ( 2 ) where L is a a look-back parameter, which defines how many previous token are taken into account to compute the syntactic distance. W c and b c are kernel parameters, W d and b d represent another convolutional layer with a unit kernel size. Since the PRPN belongs to the family of unsupervised models with regard to parsing, there is no direct supervision on absolute values of the syntactic distance. Instead, these distances are trained via a language modeling downstream task. For generating a constituency parse tree from the distances computed by the PRPN model, a recursive algorithm is used. Following this algorithm, we first, for a given set of distances d 0 , . . . , d n , find the maximum distance d i . Then, we split the input sequence x = (x 0 , x 1 , \u2022 \u2022 \u2022 , x n ) corresponding to the distances into a left (0, . . . , i \u2212 1) and a right (i, . . . , n) part or subtree. For each of those, we then again find the maximum value to split the sequence into two parts. This process repeats till the leaf nodes are reached, thus generating the entire tree. Reading network. The reading network processes a sentence based on gate values g t i , which are, at each time step t, computed from the syntactic distances as follows: \u03b1 t j = hardtanh((d t \u2212 d j )\u03c4 ) + 1 2 (3) and g t i = t\u22121 j=i+1 \u03b1 t j . (4) where hardtanh(x) is defined as hardtanh(x) = max(\u22121, min(1, x)), (5) and \u03c4 is a temperature parameter controlling the sensitivity to differences between distances. The reading network then computes the memory state m t at time step t from the input x t , previous memory states (m t\u2212Nm , \u2022 \u2022 \u2022 , m t\u22121 ), and gate values (g t 0 , \u2022 \u2022 \u2022 , g t t\u22121 ). The memory consists of two sequences of vectors: a hidden tape H t\u22121 = {h t\u2212Nm , \u2022 \u2022 \u2022 , h t\u22121 }, and a memory tape C t\u22121 = {c t\u2212Nm , \u2022 \u2022 \u2022 , c t\u22121 }. Thus, the hidden state at time step t is defined as m t = (h t , c t ), wherein h t and c t constitute the hidden and memory tape respectively. N m represents the length of the memory span. At each step, the reading network performs an update using a structured attention mechanism, which is a variant of vanilla attention, but considers dependency relationship from the tree structure. k t = W h h t\u22121 + W x x t ( 6 ) q t i = softmax h i k T t (\u03b4 k ) (7) s T i = g t i q t i i g t i (8) ht ct = t\u22121 i=1 s t i h i c i (9) Here, \u03b4 k is the dimension of the hidden states. New values for h t and c t are then computed from x t , ht and ct via the LSTM recurrent update. Predict network. The last component of the PRPN predicts the probability of the next token x t+1 based on the memory states m 0 , \u2022 \u2022 \u2022 , m t from the reading network as well as the gates g t+1 0 , \u2022 \u2022 \u2022 , g t+1 t from the parsing network. Since the true x t+1 is unknown at time step t + 1, the predict network computes a temporary value for d t+1 : d t+1 = ReLU(W d h t + b d ). ( 10 ) Obtaining \u03b1 t+1 and g t+1 i in the same way as before, the probability distribution of the next token x t+1 is then computed via a feed-forward network. Datasets We use existing constituency treebanks for Arabic, Chinese, English, and German. Table 1 shows statistics for all languages. For efficiency, we ignore sentences longer than 100 words during both training and evaluation in all our experiments. Chinese. We use the Chinese Penn Treebank v8.0 (Xue et al., 2005) . Again, we randomly separate files into splits: the development and test sets consist of 300 files each, while the training set consists of the remaining 2407. German. We use the NEGRA corpus (Skut et al., 1997) , which consists of approximately 350, 000 words of German newspaper text (20,602 sentences). We divide the dataset into training, development, and test splits as suggested by Dubey and Keller (2003) . Parsing Baselines and Upper Bounds We compare to the following baselines and upper bounds to better evaluate the performance of our models: Best binary tree upper bound (BB). Since our datasets contain n-ary trees, but the PRPN only produces binary trees, obtaining a perfect F1 score is impossible. This upper bound represents the best score which can be obtained with binary trees. Shen et al. (2018b) upper bound (SUB). Our second upper bound is a supervised parser, differing from the one presented by Shen et al. (2018b) only in that we do not predict or use any tags. It is trained on the gold annotations of the training set. We choose this particular approach since it is, like PRPN, based on the concept of syntactic distances: the parse tree is recovered from predicted distances between words in a sentence. Thus, we see it as the supervised approach which is most comparable to the PRPN. Since our model does not predict labels which are used to recover nary trees in the original work, we compute the F1 score for this approach only with respect to binary gold trees. This is acceptable for our purposes, since we are interested in the supervised parser upper bound only to get an idea of the difficulty of the datasets in our different languages. For the supervised SUB baseline, we use hidden state and embedding dimensions of 100 and 300, respectively, and keep the default settings from Shen et al. (2018b) for all other hyperparameters. Left/right-branching trees baseline (LBR/RBR). Our next baseline consists of purely left-or right-branching trees. LBR refers to the F1 score strictly left-branching binary trees obtain compared to the gold annotations, and RBR denotes the score of strictly right-branching trees. Balanced trees baseline (BTB). Finally, this baseline is similar to LBR/RBR, but considering balanced binary trees, which are created by recursively splitting each span into halves. For odd lengths, the middle word becomes a part of the right subtree. Monolingual Experiments Language-Dependence of Hyperparameters It is of practical importance to know whether a set of hyperparameters found for one language transfers to another one without any changes, especially for low-resource language without annotated (development) data. Therefore, we ask the following questions: (i) Do hyperparameters depend on the language when using our datasets? (ii) How to choose good hyperparameters for a new language? We aim at answering these questions with respect to the PRPN. Setup.  Results. The resulting parsing performances as a function of one hyperparameter at a time are shown in the three plots in Figure 2 . The corresponding plots for language modeling perplexity can be found in Figure 3 . We observe the following: \u2022 First of all, we find no clear trend regarding which values yield the best parsing performance for either language. This shows that, as far as parsing is concerned, the PRPN is robust to hyperparameter changes. Furthermore, this also indicates that likely any values from within our ranges would be acceptable for a new language. \u2022 Next, we look at the language modeling perplexity of all 180 models. While changes to the hyperparameters seem to not affect parsing performance, perplexity slightly decreases for larger embeddings sizes, as can be seen in Figure 2 . This suggests that tuning hyperparameters using a language modeling objective for languages without annotated parsing data might not be helpful. Because we do not find any substantial language-specific differences regarding the hyperparameter preferences of the model, we keep the default parameters of Shen et al. (2018a) Unsupervised Parsing After settling on hyperparameters, we evaluate the PRPN's performance for unsupervised parsing in Arabic, Chinese, English, and German. We train for a maximum of 150 epochs, but stop training anytime after 100 epochs if the training loss does not decrease for 5 consecutive epochs. Results. All results are shown in Table 2 . While unsupervised parsing of English using the PRPN has previously been studied widely (Shen et al., 2018a; Htut et al., 2018) , we include the scores on English for comparison. We make the following observations: \u2022 LBR, RBR, and BTB perform poorly for all languages. Since this has been shown to not be the case for English sentences only up to length 10 after filtering of punctuation, we conclude that, for longer sentences and with punctuation, these simple baselines are weak. This might be easily explained by the fact that the diversity of parses increases for longer sentences. The PRPN's F1 score is far higher that that of all trivial baselines for all languages, showing the effectiveness of the model overall. \u2022 The F1 scores obtained by the PRPN differ a lot across languages, ranging from 0.17 for Arabic to 0.43 for English. This is in contrast to the BB and BTB scores, which differ only by 0.046 and 0.022 between extremes, respectively. \u2022 The large difference between the PRPN's performance on one hand and BB as well as SUB, our supervised parsing upper bound, on the other, demonstrates that there is still room for improvement. Furthermore, the differences between languages for SUB is relatively small. In particular, it is smaller than 5% for all languages. The difference in unsupervised constituency parsing performance across languages could thus be attributed to the PRPN's inherent preference toward English-like languages. Low-Resource Settings We now aim to understand how the PRPN's performance for each language depends on the amount of data available. While large unlabeled corpora can be obtained easily for languages which are popular in NLP research, this is not the case for the majority of the world's languages. Thus, this question has practical relevance. Setup. To simulate different low-resource settings for this experiment, we use the first n \u2208 {2500, 5000, 7500, 10000, 12500} sentences from each training set. Since the PRPN has shown to be largely robust to hyperparameter changes and we stop training based on the training loss, development sets are not used. Test sets are kept unmodified. As before, all results are averaged over 5 training runs with different random seeds. Results. The learning curves in Figure 4 show the F1 scores of all models as a function of the amount of sentences available for training. We observe the following: \u2022 While performance for English strongly increases with more training instances, this is not the case for the remaining languages. The Chinese F1 score increases only slightly for additional examples. The performance for Arabic and German is roughly constant. The fact that the PRPN is better at leveraging additional English data is another indicator that the PRPN might be better suited for English than for the other three languages in our experiments. \u2022 Comparing Figure 4 to Table 2 , we see a gap between the PRPN's performances for 12,500 examples and for the entire training sets for all languages. Thus, we conclude that disposing of more than 12,500 examples is generally beneficial. 5 Multilingual Experiment Motivation A multilingual model for unsupervised constituency parsing has desirable benefits. First, since only one model is needed for a set of languages, less memory is required to store all parameters. This facilitates, for instance, the application on mobile devices. Second, neural models which have been trained simultaneously on multiple languages have been shown to leverage knowledge from related languages to improve performance on other languages in the case of limited training data. Such cross-lingual transfer has been successfully employed for a variety of tasks, e.g., for supervised dependency parsing (de Lhoneux et al., 2018) , for machine translation (Johnson et al., 2017a) , or for paradigm completion (Mc-Carthy et al., 2019) . Setup Since transfer learning is mostly needed and also particularly effective in the low-data regime, we combine the training sets of 2,500 examples for English and German-the two of our languages which are related-to form a multilingual training set. We then train PRPN models on this combined training set, sharing all parameters. The model's hyperparameters remain the same as before, and we again train for a maximum of 150 epochs, or until the training loss has not decreased for 5 consecutive epochs. As for our previous experiments, the reported results are averaged over 5 training runs with different random seeds. Results Results for single-language models as well as the multilingual versions are shown in  4.0% and 2.4% higher than that of the singlelanguage models for English and German, respectively. Thus, the PRPN model indeed benefits from transfer learning, i.e., it can share information across related languages for unsupervised constituency parsing. Related Work Unsupervised parsing. Previous work on nonneural models for unsupervised parsing includes Clark (2001) and Klein and Manning (2002) for constituency parsing and Carroll and Charniak (1992) ; Klein and Manning (2004) ; Cohn et al. (2010); Spitkovsky et al. (2011); and Jiang et al. (2016) for dependency parsing. For Chinese, German, and English, previous work also observed differences in F1 scores; an overview can be found in Bod (2006) . We have not included these nonneural baselines as part of our results due to lack of availability of trustworthy implementations. Following the success of the neural PRPN model in 2018, various other neural unsupervised parsing approaches have been developed and shown promising results. Shen et al. (2018c) enhance the vanilla LSTM network with master forget and input gates to learn the tree structure through soft gating. Drozdov et al. (2019) use a recursive autoencoder-based architecture. Kim et al. (2019b) employ unsupervised recurrent neural network grammars, and Kim et al. (2019a) employ compound probabilistic context free grammars. Shi et al. (2019) show how image captions can be successfully leveraged to identify constituents in sentences. None of these papers performs an explicit analysis of differences between languages. Jin et al. (2019) extend the PCFG approach to show results on Chinese, English and German. There are certain question that remain unanswered about multilingual grammar induction, especially related to cross-lingual transfer and difference in hyper parameters. In this work, we focus on adapt-ing the PRPN to a multilingual setting, since it is the first neural model which has been shown to obtain robust unsupervised parsing results. Although we have primarily focused on PRPN due to its overall success, it would be interesting to observe whether similar trends in relative performance among languages hold for other models mentioned above. We leave this for future work. A closely related line of research, which is often referred to as latent tree learning, aims to create a parse structure which is well-suited for a particular NLP application. Common choices are sentence classification tasks like natural language inference (Yogatama et al., 2017; Maillard et al., 2017; Choi et al., 2018) , machine translation (Bisk and Tran, 2018) , or toy datasets where the correct parse can trivially be found by humans (Jacob et al., 2018; Nangia and Bowman, 2018) . Latent tree learning models have been shown to outperform sequential models and TreeRNNs on multiple datasets (Maillard et al., 2017; Choi et al., 2018) . However, the parses predicted by latent tree models have been shown to mostly be nonsensical (Williams et al., 2018) . Supervised parsing. This research is further related to the line of work on supervised parsing. Two main parsing paradigms exist: dependency parsing, which is concerned with the relationships between words in a sentence, and constituency parsing (or phrase-structure parsing), which is what we are interested in here (cf. Figure 1 ). Neural network models have pushed the state of the art for supervised constituency parsing in the last years. Possible approaches include methods to either build parse trees sequentially by estimating transition probabilities (Zhu et al., 2013; Cross and Huang, 2016) , employ a chart-based approach, which performs exact structured inference via dynamic programming (Durrett and Klein, 2015; Stern et al., 2017) , or cast the problem as a sequence labeling task (G\u00f3mez-Rodr\u00edguez and Vilares, 2018) . Another, rather new option is to predict syntactic distances between words, which can then be converted into trees (Shen et al., 2018b) . This is the same core concept that the PRPN is based on. Thus, we consider Shen et al. (2018b) 's approach one of our upper bounds on the unsupervised parsing performance of the PRPN. Cross-lingual transfer. Cross-lingual transfer (Wu, 1997; Yarowsky et al., 2001) , i.e., us-ing knowledge gained from one (usually highresource) language for solving a task in another (usually low-resource) language, is very common when working on resource-poor languages in NLP. There are two very intuitive ways of realizing such a transfer (Liu et al., 2019) : One way is to translate the test data into a high-resource language and to solve the task using a system for that second language. Another way is to translate large amount of training data into a low-resource language and train a system in that language. Other methods have been developed as well, many based on parameter sharing-as we do in this work-, e.g., for cross-lingual natural language inference (Conneau et al., 2018) , morphological generation (Kann et al., 2017; McCarthy et al., 2019) , dialogue systems (Schuster et al., 2019) , or machine translation (Johnson et al., 2017b; Aharoni et al., 2019) . While we are not aware of any previous work exploring cross-lingual transfer for unsupervised parsing as done in this paper, approaches have been developed which leverage high-resource language data for supervised parsing in low-resource languages (S\u00f8gaard, 2011; Naseem et al., 2012) . Conclusion We investigated the behavior of the PRPN, a neural unsupervised constituency parsing model, for the languages Arabic, Chinese, English, and German. While, overall, our experiments showed that the model strongly outperformed trivial baselines for all the languages, we made the following additional observations: (i) With regards to its parsing performance, the model is robust to hyperparameter changes for all four languages. (ii) Parsing F1 and language modeling perplexity were not correlated. (iii) The PRPN's unsupervised parsing performance differed a lot between languages, while trivial baselines and upper bounds obtained similar scores. (iv) The model was able to leverage additional training data for English better in low-resource settings, and for no language did the PRPN reach its maximum observed F1 score with 12,500 training instances. Finally, we proposed to train a multilingual PRPN model for the related languages English and German. Besides requiring less parameters, this led to an up to 4% higher F1 score in the low-data regime. Acknowledgments This work has benefited from the support of Samsung Research under the project Improving Deep Learning using Latent Structure and from the donation of a Titan V GPU by NVIDIA Corporation.",
    "abstract": "Recently, neural network models which automatically infer syntactic structure from raw text have started to achieve promising results. However, earlier work on unsupervised parsing shows large performance differences between non-neural models trained on corpora in different languages, even for comparable amounts of data. With that in mind, we train instances of the PRPN architecture (Shen et al., 2018a)-one of these unsupervised neural network parsers-for Arabic, Chinese, English, and German. We find that (i) the model strongly outperforms trivial baselines and, thus, acquires at least some parsing ability for all languages; (ii) good hyperparameter values seem to be universal; (iii) how the model benefits from larger training set sizes depends on the corpus, with the model achieving the largest performance gains when increasing the number of sentences from 2,500 to 12,500 for English. In addition, we show that, by sharing parameters between the related languages German and English, we can improve the model's unsupervised parsing F1 score by up to 4% in the low-resource setting.",
    "countries": [
        "United States"
    ],
    "languages": [
        "Arabic",
        "English",
        "Chinese",
        "German"
    ],
    "numcitedby": "5",
    "year": "2019",
    "month": "November",
    "title": "Neural Unsupervised Parsing Beyond {E}nglish"
}