{
    "article": "Irony is an important device in human communication, both in everyday spoken conversations as well as in written texts including books, websites, chats, reviews, and Twitter messages among others. Specific cases of irony and sarcasm have been studied in different contexts but, to the best of our knowledge, only recently the first publicly available corpus including annotations about whether a text is ironic or not has been published by Filatova (2012). However, no baseline for classification of ironic or sarcastic reviews has been provided. With this paper, we aim at closing this gap. We formulate the problem as a supervised classification task and evaluate different classifiers, reaching an F 1 -measure of up to 74 % using logistic regression. We analyze the impact of a number of features which have been proposed in previous research as well as combinations of them. Introduction Irony is often understood as \"the use of words that mean the opposite of what you really think especially in order to be funny\" or \"a situation that is strange or funny because things happen in a way that seems to be the opposite\" of what is expected. 1 Many dictionaries make this difference between verbal irony and situational irony (British Dictionary, 2014; New Oxford American Dictionary, 2014; Merriam Webster Dictionary, 2014) . The German Duden (2014) mentions sarcasm as synonym to irony, while the comprehension of sarcasm as a special case of irony might be more common. For instance, the Merriam Webster Dictionary (2014) defines sarcasm as \"a sharp and often satirical or ironic utterance designed to cut or give pain\". 2  Irony is a frequent phenomenon within human communication, occurring both in spoken and written discourse including books, websites, fora, chats, Twitter messages, Facebook posts, news articles and product reviews. Even for humans it is sometimes difficult to recognize irony. Irony markers are thus often used in human communication, supporting the correct interpretation (Attardo, 2000) . The automatic identification of ironic formulations in written text is a very challenging as well as important task as shown by the comment 3 \"Read the book!\" which in the context of a movie review could be regarded as ironic and as conveying the fact that the film was far worse compared to the book. Another example is taken from a review for the book \"Great Expectations\" by Charles Dickens: 4 \"i would recomend this book to friends who have insomnia or those who i absolutely despise.\" The standard approach of recommending X implies that X is worthwhile is clearly not valid in the given context as the author is stating that she disliked the book. In real world applications of sentiment analysis, large data sets are automatically classified into positive statements or negative statements and such output is used to generate summaries of the sentiment about a product. In order to increase the accurateness of such systems, ironic or sarcastic statements need to be identified in order to infer the actual communicative intention of the author. In this paper, we are concerned with approaches for the automatic detection of irony in texts, which is an important task in a variety of applications, including the automatic interpretation of text-based chats, computer interaction or sentiment analysis and opinion mining. In the latter case, the detection is of outmost importance in order to correctly assign a polarity score to an aspect of a reviewed product or a person mentioned in a Twitter message. In addition, the automatic detection of irony or sarcasm in text requires an operational definition and has therefore the potential to contribute to a deeper understanding of the linguistic properties of irony and sarcasm as linguistic phenomena and their corpus based evaluation and verification. The rest of this paper is structured as follows: We introduce the background and theories on irony in Section 1.1 and discuss previous work in the area of automatically recognizing irony in Section 1.2. In the methods part in Section 2, we present our set of features (Section 2.1) and the classifiers we take into account (Section 2.2). In Section 3, we discuss the data set used in this work in more detail (Section 3.1), present our experimental setting (Section 3.2) and show the evaluation of our approach (Section 3.3). We conclude with a discussion and summary (Section 4) and with an outlook on possible future work (Section 5). Background Irony is an important and frequent device in human communication that is used to convey an attitude or evaluation towards the propositional content of a message, typically in a humorous fashion (Abrams, 1957, p. 165-168) . Between the age of six (Nakassis and Snedeker, 2002) and eight years (Creusere, 2007) , children are able to recognize ironic utterances or at least notice that something in the situation is not common (Glenwright and Pexman, 2007) . The principle of inferability (Kreuz, 1996) states that figurative language is used if the speaker is confident that the addressee will interpret the utterance and infer the communicative intention of the speaker/author correctly. It has been shown that irony is ubiquitous, with 8 % of the utterances exchanged between interlocutors that are familiar with each other being ironic (Gibbs, 2007) . Utsumi (1996) claim that an ironic utterance can only occur in an ironic environment, whose presence the utterance implicitly communicates. Given the formal definition it is possible to computationally resolve if an utterance is ironic using first-order predicate logic and situation calculus. Different theories such as the echoic account (Wilson and Sperber, 1992) , the Pretense Theory (Clark and Gerrig, 1984) or the Allusional Pretense Theory (Kumon-Nakamura et al., 1995) have challenged the understanding that an ironic utterance typically conveys the opposite of its literal propositional content. However, in spite of the fact that the attributive nature of irony is widely accepted (see Wilson and Sperber (2012) ), no formal or operational definition of irony is available as of today. Previous Work Corpora providing annotations as to whether expressions are ironic or not are scarce. Kreuz and Caucci (2007) have automatically generated such a corpus exploiting Google Book search 5 . They collected excerpts containing the phrase \"said sarcastically\", removed that phrase and performed a regression analysis on the remaining text, exploiting the number of words as well as the occurrence of adjectives, adverbs, interjections, exclamation and question marks as features. Tsur et al. (2010) present a system to identify sarcasm in Amazon product reviews exploiting features such as sentence length, punctuation marks, the total number of completely capitalized words and automatically generated patterns which are based on the occurrence frequency of different terms (following the approach by Davidov and Rappoport (2006) ). Unfortunately, their corpus is not publicly available. Carvalho et al. (2009) use eight patterns to identify ironic utterances in comments on articles from a Portuguese online newspaper. These patterns contain positive predicates and utilize punctuation, interjections, positive words, emoticons, or onomatopoeia and acronyms for laughing as well as some Portuguese-specific patterns considering the verb-morphology. Gonz\u00e1lez-Ib\u00e1\u00f1ez et al. (2011) differentiate between sarcastic and positive or negative Twitter messages. They exploit lexical features like unigrams, punctuation, interjections and dictionary-based as well as pragmatic features including references to other users in addition to emoticons. Reyes et al. (2012) distinguish ironic and non-ironic Twitter messages based on features at different levels of linguistic analysis including quantifiers of sentence complexity, structural, morphosyntactic and semantic ambiguity, polarity, unexpectedness, and emotional activation, imagery, and pleasantness of words. Tepperman et al. (2006) performed experiments to recognize sarcasm in spoken language, specifically in the expression \"yeah right\", using spectral, contextual and prosodic cues. On the one hand, their results show that it is possible to identify sarcasm based on spectral and contextual features and, on the other hand, they confirm that prosody is insufficient to reliably detect sarcasm (Rockwell, 2005, p. 118) . Very recently, Filatova (2012) published a product review corpus from Amazon, being annotated with Amazon Mechanical Turk. It contains 437 ironic and 817 non-ironic reviews. A more detailed description of this resource can be found in Section 3.1. To our knowledge, no automatic classification approach has been evaluated on this corpus. We therefore contribute a text classification system including the previously mentioned features. Our results serve as a strong baseline on this corpus as well as an \"executable review\" of previous work. 6 Methods We model the task of irony detection as a supervised classification problem in which a review is categorized as being ironic or non-ironic. We investigate different classifiers and focus on the impact analysis of different features by investigating what effect their elimination has on the performance of the approach. In the following, we describe the features used and the set of classifiers compared. Features To estimate if a review is ironic or not, we measure a set of features. Following the idea that irony is expressing the opposite of its literal content, we take into account the imbalance between the overall (prior) polarity of words in the review and the star-rating (as proposed by Davidov et al. (2010) ). We assume the imbalance to hold if the star-rating 6 The system as implemented to perform the described experiments is made available at https://github.com/ kbuschme/irony-detection/ is positive (i. e., 4 or 5 stars) but the majority of words is negative, and, vice versa, if the star-rating is negative (i. e., 1 or 2 stars) but occurs with a majority of positive words. We refer to this feature as Imbalance. The polarity of words is determined based on a dictionary consisting of about 6,800 words with their polarity (Hu and Liu, 2004) . 7  The feature Hyperbole (Gibbs, 2007) indicates the occurrence of a sequence of three positive or negative words in a row. Similarly, the feature Quotes indicates that up to two consecutive adjectives or nouns in quotation marks have a positive or negative polarity. The feature Pos/Neg&Punctuation indicates that a span of up to four words contains at least one positive (negative) but no negative (positive) word and ends with at least two exclamation marks or a sequence of a question mark and an exclamation mark (Carvalho et al., 2009) . Analogously, the feature Pos/Neg&Ellipsis indicates that such a positive or negative span ends with an ellipsis (\". . . \"). Ellipsis and Punctuation indicates that an ellipsis is followed by multiple exclamation marks or a combination of an exclamation and a question mark. The Punctuation feature conveys the presence of an ellipses as well as multiple question or exclamation marks or a combination of the latter two. The Interjection feature indicates the occurrence of terms like \"wow\" and \"huh\", and Laughter measures onomatopoeia (\"haha\") as well as acronyms for grin or laughter (\"*g*\", \"lol\"). In addition, the feature Emoticon indicates the occurrence of an emoticon. In order to capture a range of emotions, it combines a variety of emoticons such as happy, laughing, winking, surprised, dissatisfied, sad, crying, and sticking tongue out. In addition, we use each occurring word as a feature (bag-of-words). All together, we have 21,773 features. The number of specific features (i. e., without bag-of-words) alone is 29. Classifiers In order to perform the classification based on the features mentioned above, we explore a set of standard classifiers typically used in text classification research. We employ the open source machine learning library scikit-learn (Pedregosa et al., 2011) for Python. We use a support vector machine (SVM, Cortes and Vapnik (1995) ) with a linear kernel in the implementation provided by libSVM (Fan et al., 2005; Chang and Lin, 2011) . The na\u00efve Bayes classifier is employed with a multinomial prior (Zhang, 2004; Manning et al., 2008) . This classifier might suffer from the issue of over-counting correlated features, such that we compare it to the logistic regression classifier as well (Yu et al., 2011) . Finally, we use a decision tree (Breiman et al., 1984; Hastie et al., 2009) and a random forest classifier (Breiman, 2001) . Experiments and Results Data Set The data set by Filatova (2012) consists of 1,254 Amazon reviews, of which 437 are ironic, i. e., contain situational irony or verbal irony, and 817 are non-ironic. It has been acquired using the crowd sourcing platform Amazon Mechanical Turk 8 . Note that Filatova (2012) interprets sarcasm as being verbal irony. In a first step, the workers were asked to find pairs of reviews on the same product so that one of the reviews ironic while the other one is not. They were then asked to submit the ID of both reviews, and, in the case of an ironic review, to provide the fragment conveying the irony. In a second step, each collected review was annotated by five additional workers and remained in the corpus if three of the five new annotators concurred with the initial category, i. e., ironic or non-ironic. The corpus contains 21,744 distinct tokens 9 , of which 5,336 occur exclusively in ironic reviews, 9,468 exclusively in non-ironic reviews, and the remaining 6,940 tokens occur in both ironic and non-ironic reviews. Thus, all ironic reviews comprise a total of 12,276 distinct tokens, whereas a total of 16,408 distinct tokens constitute all nonironic reviews. On average, a single review consists of 271.9 tokens, a single ironic review of an average of 261.4 and a single non-ironic review of an average of 277.5 tokens. The distribution of ironic and non-ironic reviews for the different star-ratings is shown in Table 2 . Note that this might be a result of the specific annotation procedure applied by the 8 https://www.mturk.com/mturk/, accessed on March 10, 2014 9 Using the TreeBankWordTokenizer as implemented in the Natural Language Toolkit (NLTK) (http://www.nltk. org/) annotators to search for ironic reviews. Nevertheless, this motivates a simple baseline system which just takes one feature into account: the numbers of stars assigned to the respective review (\"Star-rating only\"). Experimental Settings We run experiments for three baselines: The starrating baseline relies only on the number of stars assigned in the review as a feature. The bag-ofwords baseline exploits only the unigrams in the text as features. The sentiment word count only uses the information whether the number of positive words in the text is larger than the number of negative words. We emphasize that the first baseline is only of limited applicability as it requires the explicit availability of a star-rating. The second baseline relies on standard text classification features that are not specific for the task. The third baseline relies on a classical feature used in sentiment analysis, but is not specific for irony detection. We refer to the feature set \"All\" encompassing all features described in Section 2.1, including bagof-words and the set \"Specific Features\". In order to understand the impact of a specific feature A, we run three sets of experiments: \u2022 Using all features with the exception of A. \u2022 Using all specific features with the exception of A. \u2022 Using A as the only feature. In addition to evaluating each single feature as described above, we evaluate the set of positive and negative instantiations of features when using the sentiment dictionary. The \"Positive set\" and \"Negative set\" take into account the respective subsets of all specific features. Each experiment is performed in a 10-fold crossvalidation setting on document level. We report recall, precision and F 1 -measure for each of the classifiers. Evaluation Table 1 shows the results for the three baselines and different feature set combinations, all for the different classifiers. The star-rating as a feature alone is a very strong indicator for irony. However, this result is of limited usefulness as it only regards reviews of a specific rating as ironic, namely results with   a positive rating by the author, as explained by Table 2, which shows the more real-world compatible result of a rich feature set in addition. Obviously, the depicted distribution is very similar to the distribution of the manually annotated data set, which can obviously not be achieved by the star-rating feature alone. The best result is achieved by using the starrating together with bag-of-words and specific features with a logistic regression approach (leading to an F 1 -measure of 74 %). The SVM and decision tree have a comparable performance on the task, which is albeit lower compared to the performance of the logistic regression approach. Using the task-agnostic pure bag-of-words ap-proach leads to a performance of 68.8 % for logistic regression; this classifier has the property of dealing well with correlated features and the additional specific features cannot contribute positively to the result. Similarly, the F 1 -measure of 64.1 % produced by the SVM cannot be increased by including additional features. In contrast, a positive impact of additional features can be observed for the decision tree in the case that specific features are combined with bag-of-word-based features, reaching close to 59 % F 1 in comparison to 53.4 % F 1 for bag-of-words alone. It would be desirable to have a model only or mainly based on the problem-specific features, as this leads to a much more compact and therefore ef-ficient representation than taking all words into account. In addition, the model would be easier to understand. By exploiting task-specific features alone, the performance reaches at most an F 1 -measure of 50.9 %, which shows that task-agnostic features such as unigram features are needed. A significant drop in performance when leaving out a feature or feature set can be observed for the Imbalance feature and the Positive set. Both these feature sets take into account the star-rating. The task-specific features alone yield high precision results at the expense of a very low recall. This clearly shows that task-specific features should be used with standard, task-independent features (the bag-of-words). The most helpful task-specific features are: Imbalance, Positive set, Quotes and Pos/Neg&Ellipses. Discussion and Summary The best performance is achieved with very corpusspecific features taking into account meta-data from Amazon, namely the product rating of the reviewer. This leads to an F 1 -measure of 74 %. However, we could not show a competitive performance with more problem-specific features (leading to 51 % F 1 ) or in combination with bag-ofword-based features (leading to 68 % F 1 ). The baseline only predicting based on the starrating itself is highly competitive, however, not applicable to texts without meta-data and of limited use due to its naturally highly biased outcome towards positive reviews being non-ironic and negative reviews being ironic. Our results show that the best results are achieved via meta-data and it remains an open research task to develop comparably good approaches only based on text features. It should be noted that the corpus used in this Table 2 : Frequencies for the different star-ratings of a review, as annotated, and according to the logistic regression classifier with the feature set \"All \u2212 Imbalance\". work is not a random sample from all reviews available in a specific group of products. We actually assume ironic reviews to be much more sparse when sampling equally distributed. The evaluation should be seen from the angle of the application scenario: For instance, in a discovery setting in which the task is to retrieve examples for ironic reviews, a highly precise system would be desirable. In a setting in which only a small number of reviews should be used for opinion mining, the polarity of a text would be discovered taking the classifier's result into account -therefore a system with high precision and high recall would be needed. Future Work As discussed at the end of the last section, a study on the distribution of irony in the entirety of available reviews is needed to better shape the structure and characteristics of an irony or sarcasm detection system. This could be approached by performing a random sample from reviews and annotation, though this would lead to a substantial amount of annotation work in comparison to the directed selection procedure used in the corpus by Filatova (2012) . Future research should focus on the development of approaches analyzing the vocabulary used in the review in a deeper fashion. Our impression is that many sarcastic and ironic reviews use words and phrases which are non-typical for the specific domain or product class. Such out-of-domain vocabulary can be detected with text similarity approaches. Preliminary experiments taking into account the average cosine similarity of a review to be classified to a large set of reviews from the same product class have been of limited success. We propose that future research should focus on analyzing the specific vocabulary and develop semantic similarity measures which we assume to be more promising than approaches taking into account lexical approaches only. Most work has been performed on text sets from one source like Twitter, books, reviews, etc. Some of the proposed features mentioned in this paper or previous publications are probably transferable between text sources. However, this still needs to be proven and further development might be necessary to actually provide automated domain adaption for the area of irony and sarcasm detection. We assume that not only the vocabulary changes (as known in other domain adaptation tasks) but actually the linguistic structure might change. Finally, it should be noted that the corpus is actually a mixture of ironic and sarcastic reviews. Irony and sarcasm are not fully exchangeable and can be assumed to have different properties. Further investigations and analyses regarding the characteristics that can be transferred are necessary. Acknowledgements Roman Klinger has been funded by the \"It's OWL\" project (\"Intelligent Technical Systems Ostwestfalen-Lippe\", http://www.its-owl. de/), a leading-edge cluster of the German Ministry of Education and Research. We thank the reviewers for their valuable comments. We thank Christina Unger for proof-reading the manuscript and helpful comments.",
    "abstract": "Irony is an important device in human communication, both in everyday spoken conversations as well as in written texts including books, websites, chats, reviews, and Twitter messages among others. Specific cases of irony and sarcasm have been studied in different contexts but, to the best of our knowledge, only recently the first publicly available corpus including annotations about whether a text is ironic or not has been published by Filatova (2012). However, no baseline for classification of ironic or sarcastic reviews has been provided. With this paper, we aim at closing this gap. We formulate the problem as a supervised classification task and evaluate different classifiers, reaching an F 1 -measure of up to 74 % using logistic regression. We analyze the impact of a number of features which have been proposed in previous research as well as combinations of them.",
    "countries": [
        "Germany"
    ],
    "languages": [
        "German",
        "Portuguese"
    ],
    "numcitedby": "101",
    "year": "2014",
    "month": "June",
    "title": "An Impact Analysis of Features in a Classification Approach to Irony Detection in Product Reviews"
}