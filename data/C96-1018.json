{
    "article": "We describe a case study in tit(', application of symbolic machinc learning techniques for the discow;ry of linguistic rules and categories. A supervised rule induction algorithm is used to learn to predict the. correct dimilmtive suffix given the phonological representation of Dutch nouns. The system produces rules which are comparable, to rules proposed by linguists, l,Slrthermore, in the process of learning this morphological task, the phonemes used are grouped into phonologically relevant categories. We discuss the relevance of our method for linguistics attd language technology. 1 Introduction This paper shows how machine lem'ning techniques can be used to induce linguistically relevant rules and categories fl'om data. Statistical, connectionist, and machine learning induction (dataoriented approaches) are currently nsed mainly in language, engineering at)t)lications in order to alleviate the. linguistic knowledge acquisition bottleneck (the fact that lexical an(t grammatical knowledge usually has to be reformulated t'i'()iii scratch whenever a new application has to be built or an existing application ported to a new domain), and to solve problems with robustness and coverage inherent in knowledge-based (the.ory-oriente.d, hand-crafting) approaches. Linguistic relevance. or inspectability of the induced knowledge is usually not an issue in this type of research. ]n linguistics, on the other hand, it is usually agreed that while computer modeling is a useful (or essential) tool for enforcing internal consistency, completeness, and empirical validity of the linguistic theory being modeled, its role in formulating or evaluating linguistic theories is minimal. In this paper, we argue that machine learning techniques can also assist in linguistic theory for-*Visiting fl'.llow at NIAS (Netherlands Instituee for Advanced Studies), Wassenaar, The. Netherlands. Peter Berck and Steven Gillis Linguistics, University of Antwerp Unive.rsiteitsplein 1, 2610 WiMjk l ~elgium steven, gillis@uia, ua. ac. be peter, berck@uia, ua. ac. be mation by providing a new tool for the evaluation of linguistic hypotheses, for the extraction of rules front corpora, and for the discovery (if useflll linguistic categories. As a case. study, we apply Quinlan's C4.5 inductive machine learning me.thod (Quinlan, 1993) to a particular linguistic task (diminutive fi)rmation in Dutch) and show that it; can be use(l (i) to test linguistic hypotheses about this process, (ii) to discover interesting morphological rules, and (iii) discover interesting phonological categories. Nothing hinges on our choic.e of (]4.5 as a rule induction mechanism. Wc chose it because it is an easily available and sophisticated instance of the class of rule induction algorithms. A second focus of this paper is the interaction between supervised and unsulmrvised machine learning me.thods in linguistic discovery, in supervised learning, the. learner is presented a set of examples (the experience of the system). These examples consist of an inImt outtmt association (in our case, e.g., a representation of a llotln as input, and the corresponding dimilmtive sul[ix as output). Unsupervised learning methods do not 1)rovide the h',m'ner with inforlnatioil at)out the outf)ut to be generated; only the inputs ar(; I)resented to the learner as experience, not the target outputs. Unsupervised learning is necessarily more limited t, hm~ supervised learning; the only information it has to construct categories is the similarity between inputs. Unsupervised learning has been successflflly applied e.g. for the discovery of syntactic categories from corpora on the basis of distributional inforlnation about words (Finch and Chalet 1992 , tIughes 1994 , Schiitze 1995 ). We will show that it, is possible and useful to make use of unsupervised learning relative to a particular task which is being learned in a supervised way. In our experinmnt, phonological categories are discovered in an unsupervised way, as a side-effect of the supervised learning of a morphological problem. We will also show that this raises interesl;ing questions about, the. task-dependence of linguistic category systems. Supervised Rule Induction with C4.5 For the experiments, we used C4.5 (Quinlan, 1993) . Although several decision tree and rule induction variants have been In this algorithm, it is not specitied which test to choose to split a node into sut)trees at some point. Taking one at random will usually result in large decision trees with poor generalization performanee, as uninformative tests may be chosen. Considering all possible trees consistent; with the data is computationally intractable, so a reliable heuristic test selection method has to be found. The method used in C4.5 is based on the concept of mutual information (or information gain). Whenever a test has to be selected, the feature is chosen with the highest information gain. This is the feature that reduces the information entropy of the training (sub)set on average most, when its value would be known. For the computation of information gain, see Quinlan (1993) . Decision trees can be easily and automatically transformed into sets of if-then rules (production rules), which are in general easier to understand by domain experts (linguists in our case). In C4.5 this tree-to-ruh; transformation involves additional statistical evaluation resulting sometimes in a rule set more understandable att(.l accurate than the corresponding decision tree. The C4.5 algorithm also contains a value grouping method which, on the basis of statistical information, collapses different values for a feature into the same category. That way, more concise decision trees and rules can be produced (instead of sew'~ral different branches or rule conditions for each wflue, only one branch or condition has to be detined, making reference to a (;lass of values). The algorithm works as a heuristic search of the search space of all possible partitionings of the wdues of a particular tbature into sets, with the for-Ination of homogeneous nodes (nodes representing examples with predominantly the same category) as a heuristic guide. See Quinlan (1993) for more information. Diminutive Formation in Dutch In the remainder of this t)ape.r, we will describe a case study of using C4.5 to test linguistic hy-1)otheses attd to discover regularities and categories. Tit(,. case study concerns allomorphy in Dutch diminutive formation, \"one of the more vexed probleins of l)utch i,honology (...) [and] one of the most spectacular phenomena of modern Dutch morphophonemics\" (Trommelen 1983) . Diminutive forlnation is a productive morphological rule in Dutch. Diminutives are formed by attaching a form of the Germanic sntfix -tje to t;he singular base form of a noun. The suffix shows allomorphic variation (Table 1 The fi'equency distribution of the different categories is given in Table 2 . We distinguish between database frequency (frequency of a suffix in a list, of 3900 diminutive forms of nouns we took from the CELEX lexical database 1) and corpus ~Developed by tile Center for Lexical Ilfformation, Nijmegen. l)istributed by tile Linguistic Data Consortium. frequency (frequency of ~ sutfix in the text corpus on which the word list was based). 1).,,al,as. ' X, LC (,,p-s ] ~t.i7 --|---~897 Diminutive formation is a. Slna[l linguisl;i(: (lomain for which different COmlmting l,hcories have }men pr(/t)os ('xl ~ &ll([ fol' whi(:ll (liff(',r(~nt generalizal; ions (in terms of rules and linguistic categories) have been proposed. What we will show tw, x~; is how machine learning techniques tllay t)(~ llSed I;O (i) test competing hyi)otheso~s, (ii) discovc, r gene, ralizations in the data whi(;h c}tIl I;ll(}II t)e comt/are(1 to the generMizal;ions formulated })y linguists, aim (iii) discover phonologi(:al categories in ml unsupervised way by supervised learning of diminutive suttix prediction. 4: Experiments li'or ea(:h of l,he 3900 nouns we coll(!cted, th(! following information was kept. 1. The phoneme transcription describing the syllable structure (in terms of onset, nucleus, and coda) of l;he last three syllables of the word. Missing slots are imlicatexl with =. 2. D)r each of l;hese l;hree last syllables the, pres-elICe ()I' abse.llce of Sl;l'O, ss. 3. The (:orreslionding dimitmtive allomorph, abbreviated to E (-etjc), T (-tie,), ./ l-j(;), K (-Me), and I' (-pie). This is the' '(:al,egory' of the word to be learned by the learner. Some examples are given below (l;he word itself and its gloss are provided for convenience and were not used in the exllerimenl,s ). Experimental Method The, ext)(wim(ml;al set-u t) use(t in all eXl)Crin/(ml:s consisted of a ten-lbhl cross-wflid;ttion eXl)erimcnt (Weiss & Kulikowski 1991) . In this set-up, the database is partitioned l;en time~s, each with ;t diL Learnal fility The, exp(~rim(mts show thai; the diminutive li~marion 1)roblem is learnMfle in a data-(/ri(ml;(~(l way (i.e. 1)y extraction of regularities ['rein (!x-amlflCs , without, any a priori knowledge ahout~ the domain\"). The average accuracy on unseen tx~st data of 98.4% should be compared to bast;line l)crforlnan(:e measures baso, d on tnolmbilit~ybased guessing. This baseline would t)e an accura(:y of a.l)out 4()~ for this prol)h;m. This shows t;hat the tn'()l)h'm is a.lm(/st t)(;rlh(:tly h',aruabl(! I)y induction, It, shouhl 1)e noted that CI';I,I,;X contains a numl)(~r ()[ coding (',trots, so that some (ff lhe ~wrong' all(mlOrl)hs ])r(',(li(:ted by the ma(:lfine h;arning system were actually (:(II'I'(~(;L, Wq did not correct for this. ]It the next; three secl;ions, we will describe Lhe resull;s of l;he (~xImrim(;nts; tirst on the 1;ask of (:Olllparing conlli(:ting l;he(/reti(:al hypotheses, then on discoverittg linguistic gen(;ralizaLions, and flintily (m unsul)(~rvis(~(l dis(:overy of l/h(/nologica.l cat(> gories. 5 Linguistic Hypothesis Testing ()n the basis of the analysis of I)utch diminutive formation by TronuneJen (1983) , discussed brietly in SecLion 3, Lhe following hypotheses (among others) can be [brnmlated. 1. Only informatioil about the last, syllable is re, levant in predicting the, correct allomorph. 2. [nlormation about l;he onset of the last syllabi(, is irrelevant in predicting the, correct allomorph. 3. Stress is irrelevant in predicting l;he correct allomorph. :~lCxcepl; syllMde stru(:tm-e, In other words, information about the rhyine of the last syllable of a noun is necessary and sufficient to predict the correct allomorph of the diminutive suffix. To test these hypotheses, we performed four experiments, training and testing the C4.5 machine learning algorithm with fore' different corpora. These corpora contained the following information. 1. All information (stress, onset, nucleus, coda) about the three last syllables (3-SYLL corpus). 2. All information about the last syllable (SONC corpus). 3. Information about the last syllable without stress (ONC corpus). 4. Information about the last syllable without stress and onset (NC corpus). The overall best results are achieved with the most elaborate corpus (containing all information about; the three last syllables), suggesting that, eontra Trommelen, important information is lost by restricting attention to only the last syllable. As far as the different encodings of the last syllable are concerned, however, the learnability experiment coroborates Trommelen's claim that stress and onset are not necessary to predict the correct diminutive allomorph. When we look at the error rates for individual allomorphs, a more complex picture emerges. The error rate on -etje dramatically increases (from 7% to 14%) when restricting information to the last syllable. The -k~e allomorph, on the other hand, is learned perfectly on the basis of the last syllable alone. What has happened here is that the learning method has overgeneralized a rule predicting -kje after the velar nasal, because the data do not contain enough information to correctly handle the notoriously difficult opposition between words like leerling (pupil, takes -etje) and koning (king, takes -kje). Purthermore, the error rate on -pje is doubled when onset information is left out from the corpus. Results We can conch;de from these experiments that although the broad lines of the analysis by Trommelen (1983) are correct, the learnability results point at a number of problems with it (notably with -kje versus -etje and with -pje). We will move now to the use of inductive learning algorithms as a generator of generalizations about the domain, and compare these generalizations to the analysis of Trommelen. Supervised Learning of Linguistic Generalizations When looking only at the rhyme of the last syllable (the NC corpus), the decision tree generated by C4.5 looks as follows: nt,lt,rt,p,k,t,st,s,ts,rs,rp,f, x, ik,Nk,mp, xt,rst,ns ,nst, rx,kt, ft, if ,mr, Ip,ks, is,kst, ix} : J coda in {n,=,l,j,r,m,N,rn,rm,w,lm}: nucleus in {I,A,},O,E}: coda in {n,l,r,m}: E coda in {=,j,rn}: T coda in {rm,lm}: P coda = N: 1 nucleus = I: K I nucleus in {A,O,E}: E nucleus in {K,a,e,u,M,@,y,o,i,L,), I,<}: [ coda in {n,=,l,j,r,rn,w}: T [ coda = m: P Decision Tree: coda in {rk, Notice that the phoneme representation used by CELEX (called DISC) is shown here instead of the more standard IPA font, and that the value grouping mechanism of C4.5 has created a mnnber of phonological categories by collapsing different phonemes into sets indicated by curly brackets. This decision tree should be read as follows: first check the coda (of the last syllable). If it ends in an obstruent, the allomorph is -jc. If not, check tile nucleus. If it is bimoraic, and the coda is/m/, decide -pje, if the coda is not/m/, decide -tje. When the coda is not an obstruent, the nucleus is short and the coda is /ng/, we have to look at the nucleus again to decide between -kje and -etje (this is where the overgeneralization to -kje for words in -ing occurs). Finally, the coda (nasa-liquid or not) helps us distinguish between -etje and -pje for those cases where the nucleus is short. It should be clear that this tree can easily be formulated as a set of rules without loss of accuracy. An interesting problem is that the -etje versus -kje problem for words ending in -ing couht hot be solved by referring only to the last syllable (C4.5 and any other statistically based induction algorithm overgeneralize to -kjc). The following is the knowledge derived by C4.5 t'rofll the flfll corpus, with all information about the three last syllables (the 3 SYLL corpus). We provide the rule version of the inferred knowledge this time. IF coda last is [+obstruent] THEN -je The default class is -tjc, which is the allomorph chosen when none of the other rules apply. This explains why this rule set looks simi)h'.r than tit(; decision tree earlier. The first thing which is interesting in this rule set, is that only tlu'ee of the twelve presented features (coda an(1 nllclelts of (;lie last syllable, nllcleus of the i)emlltimate syllal)le) m'e used in the rules. Contrary to the hyi)oth(;sis of Trommelen, apart from the rhyme of the last sylbfl)le, the m> (:[eus of the pemfltimate sylhd)le is taken to ])e re.levant ;~s well. The induced rules roughly correspond to the previous decision tree, but; in ad(lition a solution is provided to the -etje versus -kje problem for words ending in -in9 (rule 3) making use of information about the nucleus of the. t)emfltiInate syllabi(;. Rule 3 states that words ending in /ng/ get -etjeas (liminutive alloinorl)h when they are monosyllables (nucleus of the penultimate syllable is empty) or when they have a schwa as t)(multimate rainless, and -kjc othe, rwise. As fro as we now, this generalization has not been prot)osed in this form in the lmblished literature on diminutive formation. We conclude from this part of the experiment that the Inaehine learning inethod has suc(:ee(led in extracting a sophistieate(l set of linguistic rules from the examph'.s in a purely data-oriented way, an(l that these rules are formulated at a level that makes their use in the development of linguistic theories possible. This raises the question of the task-dependence of linguistic categories. Similar experiments in Dutch t)lural formation, for examt)le, fail to produce th(' (:atcgory of bimoraic vowels, and for some tasks, categori(:s show u t) which hi~vc no ontological status in linguistics. In other words, making category formation del)endent oil the task to t)e learned, unde.rmitms the. tratlitional linguistic ideas about absolute, task-indel)endent (and even 1;mguage-in(h',t)endeitt) categories. We present heI'e & lI(!~,v methodology with which this flltl(lDomental issue in linguistics can t)(; investigated: category systems ext;racted for difl'erent tasks in different languages can be studied to see which categories (if any) truely have a universal status. This is subject tbr fllrther resem'ch. It wouhl also l)e use.rid to stu(ly the indu(:ed categories when intensional descriptions (feature represeutations) are used as input instead of extensional descrit)lions (phoitetnes). We also experimented with a siml)h;r alternative to the computationally complex heuristic category [orma.tion algorithm used by (;4.5. This method is inspire(1 by machine learning work on wflue dif ference metrics (Stanfill & Waltz, 1986; Cost & Salzberg, :1993) . Starting fl'om the training set of the sut)ervised learning exl)erinlent (the set ()f input ouq)ut mappings used by the system to extract rules), we selc(:t a particular feature (e.g. the coda of the last syllable), and comt)ute a table as-sociating with each t)ossit)le value of tile feature the number of times the pattern in which it, occurs was assigned to each different category (in this case, each of the the five allomorphs). This produces a table with for each value a distribution over categories. This table is then used in standard clustering approaches to derive categories of values (in this case consonmlts). The following is one of these clustering results. The example shows that this computationally simple approach also succeeds in discovering categories in an unsupervised way on tile basis of data for supervised learning. . I__1-> j I-> w Several categories, relevant for diminutive formation, such as liquids, nasals, the velar nasal, semi-vowels, fi'icatives etc., are reflected in this hierarchical clustering. Conclusion We have shown by example that machine learning technique, s can profitably be used in linguistics as a tool for the comparison of linguistic theories and hypotheses or for the discovery of new linguistic theories in the form of linguistic rules or categories. The case study we presented concerns dimimllive formation in Dutch, for which we showed that (i) machine learning techniques can be used to corroborate and falsify some of the existing theories about the phenomenon, and (ii) machine learning techniques can be used to (re)discover interesting linguistic rules (e.g. the rule solving the -etjc versus -kje problem) and categories (e.g. the category of bimoraic vowels). The extracted system can of course also be used in language technology as a data-oriented system for solving particular linguistic tasks (in this case diminutive format!on). In order to test the usability of the approach for this application, we compared the performance of the extracted rule system to tile performance of the hand-crafted rule system proposed by Trommelen. Table 4 shows for each allomorph the number of errors by the C4.5 rules (trained using corpus NC, i.e. only the rhyme of the last syllable) as opposed to an implementation of the rules suggested by ~l\u00a5ommelen. One problem with the latter is thai; they often suggest more than one allomorph (the rules are not mutually exclusive). In those cases where more than one rule applies, a choice was made at random. The comparison shows that C4.5 did a good job of finding an elegant and accurate rule-based description of the problem. This rule set is useful both in linguistics (for evaluation, refinement, and discovery of theories) and in language technology. Suffix",
    "abstract": "We describe a case study in tit(', application of symbolic machinc learning techniques for the discow;ry of linguistic rules and categories. A supervised rule induction algorithm is used to learn to predict the. correct dimilmtive suffix given the phonological representation of Dutch nouns. The system produces rules which are comparable, to rules proposed by linguists, l,Slrthermore, in the process of learning this morphological task, the phonemes used are grouped into phonologically relevant categories. We discuss the relevance of our method for linguistics attd language technology.",
    "countries": [
        "Netherlands"
    ],
    "languages": [
        "Dutch"
    ],
    "numcitedby": "16",
    "year": "1996",
    "month": "",
    "title": "Unsupervised Discovery of Phonological Categories through Supervised Learning of Morphological Rules"
}