{
    "article": "The inside-outside algorithm for inferring the parameters of a stochastic context-free grammar is extended to take advantage of constituent information (constituent bracketing) in a partially parsed corpus. Experiments on formal and natural language parsed corpora show that the new algorithm can achieve faster convergence and better modeling of hierarchical structure than the original one. In particular, over 90% test set bracketing accuracy was achieved for grammars inferred by our algorithm from a training set of handparsed part-of-speech strings for sentences in the Air Travel Information System spoken language corpus. Finally, the new algorithm has better time complexity than the original one when sufficient bracketing is provided. MOTIVATION The most successful stochastic language models have been based on finite-state descriptions such as n-grams or hidden Markov models (HMMs) (Jelinek et al., 1992) . However, finite-state models cannot represent the hierarchical structure of natural language and are thus ill-suited to tasks in which that structure is essential, such as language understanding or translation. It is then natural to consider stochastic versions of more powerful grammar formalisms and their grammatical inference problems. For instance, Baker (1979) generalized the parameter estimation methods for HMMs to stochastic context-free grammars (SCFGs) (Booth, 1969) as the inside-outside algorithm. Unfortunately, the application of SCFGs and the original inside-outside algorithm to natural-language modeling has been so far inconclusive (Lari and Young, 1990; Jelinek et al., 1990; Lari and Young, 1991) . Several reasons can be adduced for the difficulties. First, each iteration of the inside-outside algorithm on a grammar with n nonterminals may require O(n3[wl 3) Second, the convergence properties of the algorithm sharply deteriorate as the number of nonterminal symbols increases. This fact can be intuitively understood by observing that the algorithm searches for the maximum of a function whose number of local maxima grows with the number of nonterminals. Finally, while SCFGs do provide a hierarchical model of the language, that structure is undetermined by raw text and only by chance will the inferred grammar agree with qualitative linguistic judgments of sentence structure. For example, since in English texts pronouns are very likely to immediately precede a verb, a grammar inferred from raw text will tend to make a constituent of a subject pronoun and the following verb. We describe here an extension of the inside-outside algorithm that infers the parameters of a stochastic context-free grammar from a partially parsed corpus, thus providing a tighter connection between the hierarchical structure of the inferred SCFG and that of the training corpus. The algorithm takes advantage of whatever constituent information is provided by the training corpus bracketing, ranging from a complete constituent analysis of the training sentences to the unparsed corpus used for the original inside-outside algorithm. In the latter case, the new algorithm reduces to the original one. Using a partially parsed corpus has several advantages. First, the the result grammars yield constituent boundaries that cannot be inferred from raw text. In addition, the number of iterations needed to reach a good grammar can be reduced; in extreme cases, a good solution is found from parsed text but not from raw text. Finally, the new algorithm has better time complexity when sufficient bracketing information is provided. PARTIALLY BRACKETED TEXT Informally, a partially bracketed corpus is a set of sentences annotated with parentheses marking constituent boundaries that any analysis of the corpus should respect. More precisely, we start from a corpus C consisting of bracketed strings, which are pairs e = (w,B) where w is a string and B is a bracketing of w. For convenience, we will define the length of the bracketed string c by Icl = Iwl. Given a string w = wl ..-WlM, a span of w is a pair of integers (i,j) with 0 < i < j g [w[, which delimits a substring iwj = wi+y ...wj of w. The abbreviation iw will stand for iWl~ I. A bracketing B of a string w is a finite set of spans on w (that is, a finite set of pairs or integers (i, j) with 0 g i < j < [w[) satisfying a consistency condition that ensures that each span (i, j) can be seen as delimiting a string iwj consisting of a sequence of one of more. The consistency condition is simply that no two spans in a bracketing may overlap, where two spans (i, j) and (k, l) overlap if either i < k < j < l or k < i < l < j. Two bracketings of the same string are said to be compatible if their union is consistent. A span s is valid for a bracketing B if {s} is compatible with B. Note that there is no requirement that a bracketing of w describe fully a constituent structure of w. In fact, some or all sentences in a corpus may have empty bracketings, in which case the new algorithm behaves like the original one. To present the notion of compatibility between a derivation and a bracketed string, we need first to define the span of a symbol occurrence in a context-free derivation. Let (w,B) be a bracketed string, and c~0 ==~ al :=\u00a2, ... =~ c~m = w be a derivation of w for (S)CFG G. The span of a symbol occurrence in (~1 is defined inductively as follows: \u2022 Ifj --m, c U = w E E*, and the span of wi in ~j is (i-1, i). \u2022 If j < m, then aj : flAT, aj+l = /3XI\"'Xk')', where A -* XI\".Xk is a rule of G. Then the span of A in aj is (il,jk), where for each 1 < l < k, (iz,jt) is the span of Xl in aj+l-The spans in (~j of the symbol occurrences in/3 and 7 are the same as those of the corresponding symbols in ~j+l. A derivation of w is then compatible with a bracketing B of w if the span of every symbol occurrence in the derivation is valid in B. GRAMMAR REESTIMATION The inside-outside algorithm (Baker, 1979 ) is a reestimation procedure for the rule probabilities of a Chomsky normal-form (CNF) SCFG. It takes as inputs an initial CNF SCFG and a training corpus of sentences and it iteratively reestimates rule probabilities to maximize the probability that the grammar used as a stochastic generator would produce the corpus. A reestimation algorithm can be used both to refine the parameter estimates for a CNF SCFG derived by other means (Fujisaki et hi., 1989) or to infer a grammar from scratch. In the latter case, the initial grammar for the inside-outside algorithm consists of all possible CNF rules over given sets N of nonterrninals and E of terminals, with suitably assigned nonzero probabilities. In what follows, we will take N, ~ as fixed, n -IN[, t = [El, and assume enumerations N -{A1,... ,An} and E = {hi,... ,bt}, with A1 the grammar start symbol. A CNF SCFG over N, E can then be specified by the n~+ nt probabilities Bp,q,r of each possible binary rule Ap --* Aq Ar and Up,m of each possible unary rule Ap --* bin. Since for each p the parameters Bp,q,r and Up,rn are supposed to be the probabilities of different ways of expanding Ap, we must have for all 1 _< p _< n E Bp,q,r + E Up,m = 1 (7) q,r m For grammar inference, we give random initial values to the parameters Bp,q,r and Up,m subject to the constraints (7). The intended meaning of rule probabilities in a SCFG is directly tied to the intuition of contextfreeness: a derivation is assigned a probability which is the product of the probabilities of the rules used in each step of the derivation. Contextfreeness together with the commutativity of multiplication thus allow us to identify all derivations associated to the same parse tree, and we will I~(i-1,i) = I~(i, k) = O~(O, lel) = O~(i,k) = ^ ~,qjr \"-- EP;/P\" \u00a2EC If(0, Id) I;(i,j)O~(i,j) o_<i<./__.ld (1) (2) (s) (41 (5) (6) Table I : Bracketed Reestimation speak indifferently below of derivation and analysis (parse tree) probabilities. Finally, the probability of a sentence or sentential form is the sum of the probabilities of all its analyses (equivalently, the sum of the probabilities of all of its leftmost derivations from the start symbol). The Inside-Outside Algorithm The basic idea of the inside-outside algorithm is to use the current rule probabilities and the training set W to estimate the expected frequencies of certain types of derivation step, and then compute new rule probability estimates as appropriate ratios of those expected frequency estimates. Since these are most conveniently expressed as relative frequencies, they are a bit loosely referred to as inside and outside probabilities. More precisely, for each w E W, the inside probability I~ (i, j) estimates the likelihood that Ap derives iwj, while the outside probability O~(i, j) estimates the likelihood of deriving sentential form owi Ap j w from the start symbol A1. The Extended Algorithm In adapting the inside-outside algorithm to partially bracketed training text, we must take into account the constraints that the bracketing imposes on possible derivations, and thus on possible phrases. Clearly, nonzero values for I~ (i,j) or O~(i,j) should only be allowed if iwj is compatible with the bracketing of w, or, equivalently, if (i,j) is valid for the bracketing of w. Therefore, we will in the following assume a corpus C of bracketed strings c = (w, B), and will modify the standard formulas for the inside and outside probabilities and rule probability reestimation (Baker, 1979; Lari and Young, 1990; Jelinek et al., 1990) to involve only constituents whose spans are compatible with string bracketings. For this purpose, for each bracketed string c = (w, B) we define the auxiliary function 1 if (i,j) is valid for b E B ~(i,j) = 0 otherwise The reestimation formulas for the extended algorithm are shown in Table 1 . For each bracketed sentence c in the training corpus, the inside probabilities of longer spans of c are computed from those for shorter spans with the recurrence given by equations ( 1 ) and (2). Equation (2) calculates the expected relative frequency of derivations of iwk from Ap compatible with the bracketing B of c = (w, B). The multiplier 5(i, k) is i just in case (i, k) is valid for B, that is, when Ap can derive iwk compatibly with B. Similarly, the outside probabilities for shorter spans of c can be computed from the inside probabilities and the outside probabilities for longer spans with the recurrence given by equations ( 3 ) and ( 4 ). Once the inside and outside probabilities computed for each sentence in the corpus, the ^ reestimated probability of binary rules, Bp,q,r, and the reestimated probability of unary rules, (Jp,ra, are computed by the reestimation formulas ( 5 ) and ( 6 ), which are just like the original ones (Baker, 1979; Jelinek et al., 1990; Lari and Young, 1990) except for the use of bracketed strings instead of unbracketed ones. The denominator of ratios ( 5 ) and ( 6 ) estimates the probability that a compatible derivation of a bracketed string in C will involve at least one expansion of nonterminal Ap. The numerator of ( 5 ) estimates the probability that a compatible derivation of a bracketed string in C will involve rule Ap --* Aq At, while the numerator of (6) estimates \u2022 the probability that a compatible derivation of a string in C will rewrite Ap to b,n. However, the extended algorithm performs better when bracketing information is provided, because it does not need to consider all possible spans for constituents, but only those compatible with the training set bracketing. In the limit, when the bracketing of each training sentence comes from a complete binary-branching analysis of the sentence (a full binary bracketing), the time of each step reduces to O([w D. This can be seen from the following three facts about any full binary bracketing B of a string w: 1. B has o(Iwl) spans; 2. For each (i, k) in B there is exactly one split point j such that both (i, j) and (j, k) are in 3. Each valid span with respect to B must already be a member of B. Thus, in equation ( 2 ) for instance, the number of spans (i, k) for which 5(i, k) \u2022 0 is O([eD, and there is a single j between i and k for which 6(i, j) ~ 0 and 5(j,k) ~ 0. Therefore, the total time to compute all the I~(i, k) is O(Icl). A similar argument applies to equations ( 4 ) and ( 5 ). Note that to achieve the above bound as well as to take advantage of whatever bracketing is available to improve performance, the implementation must preprocess the training set appropriately so that the valid spans and their split points are efficiently enumerated. EXPERIMENTAL EVALUATION The following experiments, although preliminary, give some support to our earlier suggested advantages of the inside-outside algorithm for partially bracketed corpora. The first experiment involves an artificial example used by Lari and Young (1990) in a previous evaluation of the inside-outside algorithm. In this case, training on a bracketed corpus can lead to a good solution while no reasonable solution is found training on raw text only. The second experiment uses a naturally occurring corpus and its partially bracketed version provided by the Penn Treebank (Brill et al., 1990) . We compare the bracketings assigned by grammars inferred from raw and from bracketed training material with the Penn Treebank bracketings of a separate test set. To evaluate objectively the accuracy of the analyses yielded by a grammar G, we use a Viterbi-style parser to find the most likely analysis of each test sentence according to G, and define the bracketing accuracy of the grammar as the proportion of phrases in those analyses that are compatible in the sense defined in Section 2 with the tree bank bracketings of the test set. This criterion is closely related to the \"crossing parentheses\" score of Black et al. (1991) . 1 In describing the experiments, we use the notation GR for the grammar estimated by the original inside-outside algorithm, and GB for the grammar estimated by the bracketed algorithm. Inferring the Palindrome Language We consider first an artificial language discussed by Lari and Young (1990) . 132 The initial grammar consists of all possible CNF rules over five nonterminals and the terminals a and b (135 rules), with random rule probabilities. As shown in Figure 1 , with an unbracketed training set W the cross-entropy estimate H(W, GR) remains almost unchanged after 40 iterations (from 1.57 to 1.44) and no useful solution is found. In contrast, with a fully bracketed version C of the same training set, the cross-entropy estimate /~(W, GB) decreases rapidly (1.57 initially, 0.88 after 21 iterations). Similarly, the cross-entropy estimate H(C, GB) of the bracketed text with respect to the grammar improves rapidly (2.85 initially, 0.89 after 21 iterations). The inferred grammar models correctly the palindrome language. Its high probability rules (p > 0.1, pip' > 30 for any excluded rule p') are S --*AD S -*CB B--*SC D--*SA A --* b B -* a C --* a D ---* b which is a close to optimal CNF CFG for the palindrome language. The results on this grammar are quite sensitive to the size and statistics of the training corpus and the initial rule probability assignment. In fact, for a couple of choices of initial grammar and corpus, the original algorithm produces grammars with somewhat better cross-entropy estimates than those yielded by the new one. However, in every case the bracketing accuracy on a separate test set for the result of bracketed training is above 90% (100% in several cases), in contrast to bracketing accuracies ranging between 15% and 69% for unbracketed training. 4.2. Experiments on the ATIS Corpus For our main experiment, we used part-of-speech sequences of spoken-language transcriptions in the Texas Instruments subset of the Air Travel Information System (ATIS) corpus (Hemphill et el., 1990) , and a bracketing of those sequences derived from the parse trees for that subset in the Penn Treebank. Out of the 770 bracketed sentences (7812 words) in the corpus, we used 700 as a training set C and 70 (901 words) as a test set T. The following is an example training string ( ( ( VB ( DT ~NS ( IB ( ( NN ) ( NN CD ) ) ) ) ) ) . ) corresponding to the parsed sentence (((List (the fares (for ((flight) (number 891)))))) .) The initial grammar consists of all 4095 possible CNF rules over 15 nonterminals (the same number as in the tree bank) and 48 terminal symbols for part-of-speech tags. A random initial grammar was trained separately on the unbracketed and bracketed versions of the training corpus, yielding grammars GR and GB. With the training and test data described above, the bracketing accuracy of GR after 75 iterations was only 37.35%, in contrast to 90.36% bracketing accuracy for GB. Plotting bracketing accuracy against iterations (Figure 3 ), we see that unbracketed training does not on the whole improve accuracy. On the other hand, bracketed training steadily improves accuracy, although not monotonically. It is also interesting to look at some the differences between GR and GB, as seen from the most likely analyses they assign to certain sentences. Table 2 shows two bracketed test sentences followed by their most likely GR and GB analyses, given for readability in terms of the original words rather than part-of-speech tags. For test sentence (A), the only GB constituent not compatible with the tree bank bracketing is (Delta flight number), although the constituent (the cheapest) is linguistically wrong. The appearance of this constituent can be explained by lack of information in the tree bank about the internal structure of noun phrases, as exemplified by tree bank bracketing of the same sentence. In contrast, the GR analysis of the same string contains 16 constituents incompatible with the tree bank. For test sentence (B), the G~ analysis is fully compatible with the tree bank. However, the Grt analysis has nine incompatible constituents, which for (A) Ga (I would (like (to (take (Delta ((flight number) 83 )) (to Atlanta)))).) (What ((is (the cheapest fare (I can get)))) ?) (I (would (like ((to ((take (Delta flight)) (number (83 ((to Atlanta) .))))) ((What (((is the) cheapest) fare)) ((I can) (get ?))))))) (((I (would (like (to (take (((Delta (flight number) ) 83) (to Atlanta))))))) .)  This experiment illustrates the fact that although SCFGs provide a hierarchical model of the language, that structure is undetermined by raw text and only by chance will the inferred grammar agree with qualitative linguistic judgments of sentence structure. This problem has also been previously observed with linguistic structure inference methods based on mutual information. Materman and Marcus (1990) addressed the problem by specifying a predetermined list of pairs of parts of speech (such as verb-preposition, pronoun-verb) that can never be embraced by a low-level constituent. However, these constraints are stipulated in advance rather than being automatically derived from the training material, in contrast with what we have shown to be possible with the insideoutside algorithm for partially bracketed corpora. ((from SFO) (to (San Francisco))))))) .) CONCLUSIONS AND FURTHER WORK We have introduced a modification of the wellknown inside-outside algorithm for inferring the parameters of a stochastic context-free grammar that can take advantage of constituent information (constituent bracketing) in a partially bracketed corpus. The method has been successfully applied to SCFG inference for formal languages and for part-of-speech sequences derived from the ATIS 134 spoken-language corpus. The use of partially bracketed corpus can reduce the number of iterations required for convergence of parameter reestimation. In some cases, a good solution is found from a bracketed corpus but not from raw text. Most importantly, the use of partially bracketed natural corpus enables the algorithm to infer grammars specifying linguistically reasonable constituent boundaries that cannot be inferred by the inside-outside algorithm on raw text. While none of this is very surprising, it supplies some support for the view that purely unsupervised, self-organizing grammar inference methods may have difficulty in distinguishing between underlying grammatical structure and contingent distributional regularities, or, to put it in another way, it gives some evidence for the importance of nondistributional regularities in language, which in the case of bracketed training have been supplied indirectly by the linguists carrying out the bracketing. Also of practical importance, the new algorithm can have better time complexity for bracketed text. In the best situation, that of a training set with full binary-branching bracketing, the time for each iteration is in fact linear on the total length of the set. These preliminary investigations could be extended in several ways. First, it is important to determine the sensitivity of the training algorithm to the initial probability assignments and training corpus, as well as to lack or misplacement of brackets. We have started experiments in this direction, but reasonable statistical models of bracket elision and misplacement are lacking. Second, we would like to extend our experiments to larger terminal vocabularies. As is well known, this raises both computational and data sparseness problems, so clustering of terminal symbols will be essential. Finally, this work does not address a central weakness of SCFGs, their inability to represent lexical influences on distribution except by a statistically and computationally impractical proliferation of nonterminal symbols. One might instead look into versions of the current algorithm for more lexically-oriented formalisms such as stochastic lexicalized tree-adjoining grammars (Schabes, 1992) . ACKNOWLEGMENTS We thank Aravind Joshi and Stuart Shieber for useful discussions, and Mitch Marcus, Beatrice Santorini and Mary Ann Marcinkiewicz for making available the ATIS corpus in the Penn Treebank. The second author is partially supported by DARPA Grant N0014-90-31863, ARO Grant DAAL03-89-C-0031 and NSF Grant IRI90-16592.",
    "abstract": "The inside-outside algorithm for inferring the parameters of a stochastic context-free grammar is extended to take advantage of constituent information (constituent bracketing) in a partially parsed corpus. Experiments on formal and natural language parsed corpora show that the new algorithm can achieve faster convergence and better modeling of hierarchical structure than the original one. In particular, over 90% test set bracketing accuracy was achieved for grammars inferred by our algorithm from a training set of handparsed part-of-speech strings for sentences in the Air Travel Information System spoken language corpus. Finally, the new algorithm has better time complexity than the original one when sufficient bracketing is provided.",
    "countries": [
        "United States"
    ],
    "languages": [
        "English"
    ],
    "numcitedby": "203",
    "year": "1992",
    "month": "June",
    "title": "Inside-Outside Reestimation From Partially Bracketed Corpora"
}